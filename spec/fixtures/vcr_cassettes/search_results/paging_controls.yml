---
http_interactions:
- request:
    method: get
    uri: https://query.discovery.trln.org/trlnbib/select?f.author_facet_f.facet.limit=11&f.available_f.facet.limit=11&f.date_cataloged_dt.facet.limit=11&f.language_f.facet.limit=11&f.lcc_callnum_classification_f.facet.limit=4501&f.lcc_callnum_classification_f.facet.sort=alpha&f.location_hierarchy_f.facet.limit=-1&f.location_hierarchy_f.facet.sort=count&f.physical_media_f.facet.limit=11&f.resource_type_f.facet.limit=11&f.subject_chronological_f.facet.limit=11&f.subject_genre_f.facet.limit=11&f.subject_geographic_f.facet.limit=11&f.subject_topical_f.facet.limit=11&facet=true&facet.field=date_cataloged_dt&facet.query=date_cataloged_dt:%5BNOW-3MONTH/DAY%20TO%20NOW%5D&fq=institution_f:unc&rows=20&sort=score%20desc,%20publication_year_isort%20desc,%20title_sort_ssort_single%20asc&stats=true&stats.field=publication_year_isort&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 20 Feb 2024 20:04:55 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx/1.24.0
      Content-Security-Policy:
      - default-src 'none'; base-uri 'none'; connect-src 'self'; form-action 'self';
        font-src 'self'; frame-ancestors 'none'; img-src 'self' data:; media-src 'self';
        style-src 'self' 'unsafe-inline'; script-src 'self'; worker-src 'self';
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "responseHeader":{
    "zkConnected":true,
    "status":0,
    "QTime":4724,
    "params":{
      "f.lcc_callnum_classification_f.facet.limit":"4501",
      "facet.field":["access_type_f",
        "available_f",
        "{!ex=rollup}location_hierarchy_f",
        "resource_type_f",
        "lcc_callnum_classification_f",
        "language_f",
        "date_cataloged_dt"],
      "f.available_f.facet.limit":"11",
      "f.date_cataloged_dt.facet.limit":"11",
      "f.location_hierarchy_f.facet.sort":"count",
      "f.subject_chronological_f.facet.limit":"11",
      "f.subject_genre_f.facet.limit":"11",
      "fq":"institution_f:unc",
      "sort":"score desc, publication_year_isort desc, title_sort_ssort_single asc",
      "rows":"20",
      "f.subject_geographic_f.facet.limit":"11",
      "facet.query":["date_cataloged_dt:[NOW-7DAY/DAY TO NOW]",
        "date_cataloged_dt:[NOW-1MONTH/DAY TO NOW]",
        "date_cataloged_dt:[NOW-3MONTH/DAY TO NOW]"],
      "f.language_f.facet.limit":"11",
      "f.location_hierarchy_f.facet.limit":"-1",
      "stats":"true",
      "f.physical_media_f.facet.limit":"11",
      "f.author_facet_f.facet.limit":"11",
      "f.resource_type_f.facet.limit":"11",
      "f.lcc_callnum_classification_f.facet.sort":"alpha",
      "f.subject_topical_f.facet.limit":"11",
      "facet":"true",
      "wt":"json",
      "stats.field":"publication_year_isort"}},
  "response":{"numFound":8048052,"start":0,"numFoundExact":true,"docs":[
      {
        "id":"UNCb11138369",
        "url_a":["{\"href\":\"https://login.libproxy.lib.unc.edu/login?url=https://ebookcentral.proquest.com/lib/unc/detail.action?docID=29057110\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "isbn_number_a":["9780817393960",
          "9780817321208",
          "0817321209",
          "081739396X"],
        "isbn_qualifying_info_a":["",
          "",
          "",
          ""],
        "author_suggest":["Geiger, T. J., 1985-"],
        "names_a":["{\"name\":\"Geiger, T. J., 1985-\",\"rel\":\"author\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b11138369",
        "shelfkey":"lc:BV.4596.A25.G45--2022",
        "available_a":["Available"],
        "publisher_a":["The University of Alabama Press"],
        "rollup_id":"EBC29057110",
        "note_local_a":["Vendor-supplied catalog record.",
          "Provider: ProQuest."],
        "title_suggest":["Faithful deliberation : rhetorical invention, evangelicalism, and #metoo reckonings"],
        "title_main":"Faithful deliberation : rhetorical invention, evangelicalism, and #metoo reckonings",
        "title_sort_ssort_single":"faithful deliberation rhetorical invention evangelicalism and metoo reckonings",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "creator_main_a":["Geiger, T. J., 1985- author"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"Tuscaloosa : The University of Alabama Press, [2022]\"}"],
        "note_general_a":["Includes bibliographical references and index."],
        "primary_isbn_a":["9780817393960",
          "9780817321208",
          "0817321209",
          "081739396X"],
        "host_item_work_a":["{\"title\":[\"ProQuest Ebook Central\",\"(online collection)\",\".\",\"DDA.\",\"Discovery\"]}"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Nonfiction"],
        "date_cataloged":"2022-05-09T04:00:00Z",
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["EBC29057110"],
        "subject_topical_a":["Sex crimes",
          "Religious aspects",
          "Christianity",
          "Wife abuse",
          "Family violence",
          "Rhetoric"],
        "publication_year_sort":"2028",
        "reverse_shelfkey":"lc:O4}VUQT}PXU}JVU~~XZXX",
        "series_statement_a":["Rhetoric, culture, and social critique"],
        "subject_headings_a":["Sex crimes -- Religious aspects -- Christianity",
          "Wife abuse -- Religious aspects -- Christianity",
          "Family violence -- Religious aspects -- Christianity",
          "Rhetoric -- Religious aspects -- Christianity"],
        "subject_suggest":["Sex crimes -- Religious aspects -- Christianity",
          "Wife abuse -- Religious aspects -- Christianity",
          "Family violence -- Religious aspects -- Christianity",
          "Rhetoric -- Religious aspects -- Christianity"],
        "lc_call_nos_normed_a":["BV.4596.A25.G45--2022"],
        "publisher_location_a":["Tuscaloosa"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["Tuscaloosa",
          "Alabama",
          "United States"],
        "physical_description_a":["1 online resource"],
        "note_access_restrictions_a":["Access limited to UNC Chapel Hill-authenticated users. Unlimited simultaneous users"],
        "lcc_callnum_classification_a":["B - Philosophy. Psychology. Religion",
          "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology",
          "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV4485 - BV5099 Practical religion. The Christian life"],
        "statement_of_responsibility_a":["T. J. Geiger, II."],
        "index_date":"2024-01-18T03:21:47Z"},
      {
        "id":"UNCb9753415",
        "url_a":["{\"href\":\"http://cdli.ucla.edu/P109329P109329\",\"type\":\"other\",\"text\":\"Image and transcription in Cuneiform Digital Library Initiative\",\"restricted\":\"false\"}"],
        "items_a":["{\"notes\":[\"Supervised use only. Item 1-2: Fragile. Item 1-20: Fragile; do not handle!\"],\"item_id\":\"i12180140\",\"loc_b\":\"wcda\",\"loc_n\":\"wcda\",\"status\":\"In-Library Use Only\",\"vol\":\"box 1\",\"call_no\":\"Cuneiform superv’d\",\"cn_scheme\":\"ALPHANUM\"}"],
        "owner_a":["unc"],
        "barcodes_a":["00054707058"],
        "language_a":["Sumerian"],
        "local_id":"b9753415",
        "available_a":["Available"],
        "rollup_id":"OCLC1135486966",
        "note_local_a":["Item 1-7; no. in publications: UNC 7"],
        "title_suggest":["Record of food provided to the troops of Ugnim when they set out on their expedition against Mardu"],
        "title_main":"Record of food provided to the troops of Ugnim when they set out on their expedition against Mardu",
        "title_sort_ssort_single":"record of food provided to the troops of ugnim when they set out on their expedition against mardu",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"1135486966",
        "imprint_main_a":["{\"type\":\"production\",\"value\":\"[Iraq], [circa 2026 BC]\"}"],
        "note_general_a":["Title devised by cataloger",
          "Dated Ibbi-Suen.03.07.00",
          "Translation by Owen: \"The troops of Ugnim received 532 gur, 3 ban of barley [and] 158 gur of emmer, when they set out on an expedition against Mardu. Receipted by Lu-Nanna and Iškun-Ea. Umani received [the grain] from Guzana [in the] month of Akiti, the year Ibbī-Sîn, the king of Ur, raided Simurum\"",
          "Sumerian ; Cuneiform"],
        "primary_oclc_a":["1135486966"],
        "related_work_a":["{\"title\":[\"Collection of cuneiform tablets and cylindrical seals.\"]}"],
        "note_cited_in_a":["Owen, D.I. \"Miscellanea Neo-Sumerica I-III,\" in Occident and Orient, pages 135-137"],
        "resource_type_a":["Archival and manuscript material"],
        "shelf_numbers_a":["Cuneiform superv’d"],
        "subject_genre_a":["Texts",
          "Cuneiform",
          "Nonfiction"],
        "date_cataloged":"2020-01-10T05:00:00Z",
        "genre_headings_a":["Texts",
          "Cuneiform"],
        "subject_suggest":["Texts",
          "Cuneiform",
          "Cuneiform tablets",
          "Sumerian language -- Texts",
          "Sumer -- Civilization"],
        "subject_topical_a":["Cuneiform tablets",
          "Sumerian language",
          "Civilization"],
        "publication_year_sort":"2026",
        "subject_headings_a":["Cuneiform tablets",
          "Sumerian language -- Texts",
          "Sumer -- Civilization"],
        "location_hierarchy_a":["unc",
          "unc:uncrarn",
          "unc:uncwil",
          "unc:uncwil:uncwilrbc"],
        "publisher_location_a":["Iraq"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["Sumer"],
        "call_number_schemes_a":["ALPHANUM"],
        "origin_place_search_a":["[Iraq],",
          "Iraq"],
        "physical_description_a":["1 tablet : clay ; 49 x 43 x 10 mm"],
        "index_date":"2024-02-17T22:52:20Z"},
      {
        "id":"UNCb5737093",
        "issn_primary_a":["1021-4054"],
        "items_a":["{\"item_id\":\"i7554229\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.1-9\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569569\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.10-16\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7592370\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.17-27\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7554238\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.28-32\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7554242\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.33-41\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569576\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.42-51\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569577\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.52-61\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569575\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.62-73\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7554247\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.74-85\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7554250\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.86-97\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7571711\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.98-107\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7571714\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.108-118\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7571712\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.119-124\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7571713\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.125-130\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569571\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.131-136\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569573\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.137-142\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7569574\",\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"status\":\"Available\",\"vol\":\"no.143-152\",\"call_no\":\"HQ1735.2 .A48\",\"cn_scheme\":\"LC\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 92933460",
          "LCCN (canceled or invalid): sn 95017371"],
        "barcodes_a":["00031038074",
          "00031038733",
          "00031046742",
          "00031038109",
          "00031038083",
          "00031038788",
          "00031038797",
          "00031038779",
          "00031038092",
          "00031038118",
          "00031046181",
          "00031046216",
          "00031046190",
          "00031046207",
          "00031038742",
          "00031038751",
          "00031038760"],
        "holdings_a":["{\"loc_b\":\"dhca\",\"loc_n\":\"dhca\",\"call_no\":\"HQ1735.2 .A48\",\"summary\":\"no.1-no.152\"}"],
        "language_a":["Persian"],
        "local_id":"b5737093",
        "shelfkey":"lc:HQ.17352.A48",
        "available_a":["Available"],
        "frequency_current_a":["Monthly"],
        "publisher_a":["s.n."],
        "rollup_id":"OCLC32658826",
        "title_suggest":["Zanān.",
          "."],
        "title_main":". / Zanān.",
        "title_sort_ssort_single":" zanan",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["176013857",
          "794714973"],
        "oclc_number":"32658826",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"Tihrān : [s.n.\"}"],
        "note_general_a":["Description based on: Sāl-i 1., shumārah-i 3 (Mah 1371 [Mārs/Āvrīl 1992]; title from cover."],
        "primary_oclc_a":["32658826"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "title_variant_a":["Zanaan"],
        "date_cataloged":"2008-10-14T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Women -- Iran -- Periodicals",
          "Women -- Periodicals",
          "Women"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Women"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:I9}YSWUX}PVR",
        "subject_headings_a":["Women -- Iran -- Periodicals",
          "Women -- Periodicals",
          "Women"],
        "lc_call_nos_normed_a":["HQ.17352.A48"],
        "location_hierarchy_a":["unc",
          "unc:uncdavy"],
        "publisher_location_a":["Tihrān"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["Iran"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["Tihrān",
          "Iran"],
        "physical_description_a":["volumes : illustrations ; 30 cm"],
        "lcc_callnum_classification_a":["H - Social sciences",
          "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women",
          "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism",
          "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism|HQ1451 - HQ1870.7 By region or country"],
        "index_date":"2024-02-06T21:21:50Z"},
      {
        "id":"UNCb7636543",
        "url_a":["{\"href\":\"http://VB3LK7EB4T.search.serialssolutions.com/?V=1.0&L=VB3LK7EB4T&S=JCs&C=TC0001034081&T=marc\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "author_suggest":["Dow Jones Reuters Business Interactive LLC"],
        "names_a":["{\"name\":\"Dow Jones Reuters Business Interactive LLC\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: sn 95021992",
          "CODEN designation: REEAE3"],
        "language_a":["French"],
        "local_id":"b7636543",
        "available_a":["Available"],
        "frequency_current_a":["Eight no. a year"],
        "publisher_a":["Groupe Tests"],
        "rollup_id":"OCLC32126299",
        "this_work_a":["{\"title\":[\"01 réseaux (Online)\"]}"],
        "title_suggest":["01 réseaux."],
        "title_main":"01 réseaux.",
        "title_sort_ssort_single":"01 reseaux",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"32126299",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"Paris : Groupe Tests, 1994-\"}"],
        "note_general_a":["Title from cover."],
        "primary_oclc_a":["32126299"],
        "related_work_a":["{\"title\":[\"01 informatique.\"]}"],
        "supplement_to_work_a":["{\"title\":[\"01 informatique\"],\"issn\":\"0398-1169\"}"],
        "earlier_work_a":["{\"label\":\"Continues\",\"title\":[\"Télécoms magazine\"]}"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "date_cataloged":"2023-02-08T05:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Computer networks -- Periodicals",
          "Telecommunication -- Periodicals",
          "Computer networks",
          "Telecommunication"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["SSJ0001034081"],
        "subject_topical_a":["Computer networks",
          "Telecommunication"],
        "publication_year_sort":"2025",
        "subject_headings_a":["Computer networks -- Periodicals",
          "Telecommunication -- Periodicals",
          "Computer networks",
          "Telecommunication"],
        "note_serial_dates_a":["No 1 (mars 1994)-"],
        "publisher_location_a":["Paris"],
        "record_data_source_a":["ILSMARC"],
        "origin_place_search_a":["Paris",
          "France"],
        "index_date":"2024-02-12T01:51:39Z"},
      {
        "id":"UNCb7911442",
        "url_a":["{\"href\":\"http://VB3LK7EB4T.search.serialssolutions.com/?V=1.0&L=VB3LK7EB4T&S=JCs&C=TC0001325210&T=marc\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "issn_linking_a":["2296-0597"],
        "issn_primary_a":["2296-0597"],
        "author_suggest":["Universitätsbibliothek Basel"],
        "names_a":["{\"name\":\"Universitätsbibliothek Basel\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2014256005"],
        "language_a":["German"],
        "local_id":"b7911442",
        "shelfkey":"lc:Z..0671",
        "available_a":["Available"],
        "frequency_current_a":["Semiannual"],
        "publisher_a":["Universitätsbibliothek Basel"],
        "rollup_id":"OCLC891466631",
        "this_work_a":["{\"title\":[\"027.7 (Online)\"]}"],
        "title_suggest":["027.7 : Zeitschrift für Bibliothekskultur."],
        "title_main":"027.7 : Zeitschrift für Bibliothekskultur.",
        "title_sort_ssort_single":"0277 zeitschrift fur bibliothekskultur",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"891466631",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"Basel, Switzerland : Universitätsbibliothek Basel\"}"],
        "primary_oclc_a":["891466631"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "title_variant_a":["Zeitschrift für Bibliothekskultur"],
        "date_cataloged":"2023-08-15T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Library science -- Periodicals",
          "Libraries -- History -- Periodicals",
          "Libraries",
          "Library science"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["SSJ0001325210"],
        "subject_topical_a":["Library science",
          "Libraries",
          "History"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:0}}ZTSY",
        "subject_headings_a":["Library science -- Periodicals",
          "Libraries -- History -- Periodicals",
          "Libraries",
          "Library science"],
        "note_serial_dates_a":["Began with Bd. 2, Nr. 1 (2013)."],
        "lc_call_nos_normed_a":["Z..0671"],
        "publisher_location_a":["Basel, Switzerland"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["Basel, Switzerland",
          "Switzerland"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries",
          "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science"],
        "index_date":"2024-02-12T23:06:39Z"},
      {
        "id":"UNCb8542341",
        "isbn_number_a":["9789869154529"],
        "isbn_qualifying_info_a":[""],
        "items_a":["{\"status\":\"On Order\",\"loc_b\":\"dd\",\"loc_n\":\"dd\"}"],
        "author_suggest":["John Sisyphus"],
        "names_a":["{\"name\":\"John Sisyphus\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "language_a":["Chinese"],
        "local_id":"b8542341",
        "publisher_a":["Xi Xi Fu Si Wen Hua"],
        "publisher_vern":["西西弗斯文化"],
        "title_suggest":["Mao Ze Dong De Qi Shou Jiang Qing Yu Wen Ge (Xia).",
          "03 毛澤東的旗手 江青與文革(下)."],
        "title_main_vern":["03 毛澤東的旗手 江青與文革(下)."],
        "title_main":"03 毛澤東的旗手 江青與文革(下). / Mao Ze Dong De Qi Shou Jiang Qing Yu Wen Ge (Xia).",
        "title_sort_ssort_single":"03 毛澤東的旗手 江青與文革下 mao ze dong de qi shou jiang qing yu wen ge xia",
        "institution_a":["unc"],
        "creator_main_a":["John Sisyphus"],
        "imprint_main_a":["{\"type\":\"production\",\"value\":\"Xi Xi Fu Si Wen Hua.\"}",
          "{\"type\":\"production\",\"value\":\"西西弗斯文化.\"}"],
        "primary_isbn_a":["9789869154529"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Nonfiction"],
        "publication_year_sort":"2025",
        "location_hierarchy_a":["unc",
          "unc:uncdavy"],
        "record_data_source_a":["ILSMARC"],
        "index_date":"2024-02-14T18:21:44Z"},
      {
        "id":"UNCb8542343",
        "isbn_number_a":["9789869154536"],
        "isbn_qualifying_info_a":[""],
        "items_a":["{\"status\":\"On Order\",\"loc_b\":\"dd\",\"loc_n\":\"dd\"}"],
        "author_suggest":["John Sisyphus"],
        "names_a":["{\"name\":\"John Sisyphus\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "language_a":["Chinese"],
        "local_id":"b8542343",
        "publisher_a":["Xi Xi Fu Si Wen Hua"],
        "publisher_vern":["西西弗斯文化"],
        "title_suggest":["Mao Ze Dong De Li Lun Jia Zhang Chun Qiao Yu Wen Ge (Shang).",
          "05 毛澤東的理論家 張春橋與文革(上)."],
        "title_main_vern":["05 毛澤東的理論家 張春橋與文革(上)."],
        "title_main":"05 毛澤東的理論家 張春橋與文革(上). / Mao Ze Dong De Li Lun Jia Zhang Chun Qiao Yu Wen Ge (Shang).",
        "title_sort_ssort_single":"05 毛澤東的理論家 張春橋與文革上 mao ze dong de li lun jia zhang chun qiao yu wen ge shang",
        "institution_a":["unc"],
        "creator_main_a":["John Sisyphus"],
        "imprint_main_a":["{\"type\":\"production\",\"value\":\"Xi Xi Fu Si Wen Hua.\"}",
          "{\"type\":\"production\",\"value\":\"西西弗斯文化.\"}"],
        "primary_isbn_a":["9789869154536"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Nonfiction"],
        "publication_year_sort":"2025",
        "location_hierarchy_a":["unc",
          "unc:uncdavy"],
        "record_data_source_a":["ILSMARC"],
        "index_date":"2024-02-14T18:21:44Z"},
      {
        "id":"UNCb8724941",
        "url_a":["{\"href\":\"https://login.libproxy.lib.unc.edu/login?url=http://dx.doi.org/10.1093/OBO/9780195393361-0041\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\"}"],
        "author_suggest":["Henten, Jan Willem van, 1955-"],
        "names_a":["{\"name\":\"Henten, Jan Willem van, 1955-\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n86047811\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b8724941",
        "shelfkey":"lc:BS.182552",
        "available_a":["Available"],
        "frequency_current_a":["Updated quarterly"],
        "publisher_a":["Oxford University Press"],
        "rollup_id":"OBOEDZ0000050457",
        "note_local_a":["Vendor-supplied catalog record."],
        "title_suggest":["1-4 Maccabees"],
        "title_main":"1-4 Maccabees",
        "title_sort_ssort_single":"1 4 maccabees",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "creator_main_a":["Henten, Jan Willem van, 1955-"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[New York] : Oxford University Press, 2011-\"}"],
        "host_item_work_a":["{\"title\":[\"Oxford bibliographies online\",\"(online collection)\",\".\",\"Biblical studies\"]}"],
        "resource_type_a":["Web page or site"],
        "subject_genre_a":["Bibliography",
          "Reference"],
        "date_cataloged":"2017-01-30T05:00:00Z",
        "genre_headings_a":["Bibliography"],
        "subject_suggest":["Bibliography",
          "Bible. Maccabees -- Criticism, interpretation, etc -- Bibliography"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["OBOEDZ0000050457"],
        "subject_topical_a":["Bible. Maccabees",
          "Criticism, interpretation, etc"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:O7}YRXUUX",
        "subject_headings_a":["Bible. Maccabees -- Criticism, interpretation, etc -- Bibliography"],
        "lc_call_nos_normed_a":["BS.182552"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[New York]",
          "New York (State)",
          "United States"],
        "physical_description_a":["1 online resource"],
        "note_access_restrictions_a":["Access limited to UNC Chapel Hill-authenticated users. Unlimited simultaneous users"],
        "lcc_callnum_classification_a":["B - Philosophy. Psychology. Religion",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS701 - BS1830 Old Testament"],
        "statement_of_responsibility_a":["by Jan W. van Henten."],
        "index_date":"2024-02-15T04:06:39Z"},
      {
        "id":"UNCb11533066",
        "url_a":["{\"href\":\"http://VB3LK7EB4T.search.serialssolutions.com/?V=1.0&L=VB3LK7EB4T&S=JCs&C=TC0001071868&T=marc\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2011265653"],
        "language_a":["English"],
        "local_id":"b11533066",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["Datamonitor"],
        "rollup_id":"OCLC779993597",
        "this_work_a":["{\"title\":[\"1-800 FLOWERS.COM, Inc (Online)\"]}"],
        "title_suggest":["1-800 FLOWERS.COM, Inc.",
          "Company profile (Datamonitor (Firm))"],
        "title_main":"1-800 FLOWERS.COM, Inc.",
        "title_sort_ssort_single":"1 800 flowerscom inc",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"779993597",
        "series_work_a":["{\"title\":[\"Company profile (Datamonitor (Firm))\"]}"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"New York, NY : Datamonitor\"}"],
        "primary_oclc_a":["779993597"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "title_variant_a":["Title in Business Source Premier: 1-800 FLOWERS.COM, Inc SWOT analysis"],
        "date_cataloged":"2023-06-14T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "1-800-FLOWERS (Firm) -- Periodicals",
          "1-800-FLOWERS (Firm)",
          "Giftware industry -- Periodicals",
          "Gift basket industry -- Periodicals",
          "Flowers -- Periodicals",
          "Flowers",
          "Gift basket industry",
          "Giftware industry",
          "Company profile"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["SSJ0001071868"],
        "subject_topical_a":["1-800-FLOWERS (Firm)",
          "Giftware industry",
          "Gift basket industry",
          "Flowers"],
        "publication_year_sort":"2025",
        "subject_headings_a":["1-800-FLOWERS (Firm) -- Periodicals",
          "1-800-FLOWERS (Firm)",
          "Giftware industry -- Periodicals",
          "Gift basket industry -- Periodicals",
          "Flowers -- Periodicals",
          "Flowers",
          "Gift basket industry",
          "Giftware industry",
          "Company profile"],
        "publisher_location_a":["New York, NY"],
        "record_data_source_a":["ILSMARC"],
        "origin_place_search_a":["New York, NY",
          "New York (State)",
          "United States"],
        "index_date":"2024-01-19T09:06:20Z"},
      {
        "id":"UNCb8723980",
        "url_a":["{\"href\":\"https://login.libproxy.lib.unc.edu/login?url=http://dx.doi.org/10.1093/OBO/9780195393361-0021\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\"}"],
        "author_suggest":["Tuell, Steven Shawn"],
        "names_a":["{\"name\":\"Tuell, Steven Shawn\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n92031103\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b8723980",
        "shelfkey":"lc:BS.134552",
        "available_a":["Available"],
        "frequency_current_a":["Frequency of update unknown"],
        "publisher_a":["Oxford University Press"],
        "rollup_id":"OBOEDZ0000021379",
        "note_local_a":["Vendor-supplied catalog record."],
        "title_suggest":["1 and 2 Chronicles"],
        "title_main":"1 and 2 Chronicles",
        "title_sort_ssort_single":"1 and 2 chronicles",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "creator_main_a":["Tuell, Steven Shawn"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[New York] : Oxford University Press, 2010-\"}"],
        "host_item_work_a":["{\"title\":[\"Oxford bibliographies online\",\"(online collection)\",\".\",\"Biblical studies\"]}"],
        "resource_type_a":["Web page or site"],
        "subject_genre_a":["Bibliography",
          "Reference"],
        "date_cataloged":"2017-01-30T05:00:00Z",
        "genre_headings_a":["Bibliography"],
        "subject_suggest":["Bibliography",
          "Bible. Chronicles -- Criticism, interpretation, etc -- Bibliography"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["OBOEDZ0000021379"],
        "subject_topical_a":["Bible. Chronicles",
          "Criticism, interpretation, etc"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:O7}YWVUUX",
        "subject_headings_a":["Bible. Chronicles -- Criticism, interpretation, etc -- Bibliography"],
        "lc_call_nos_normed_a":["BS.134552"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[New York]",
          "New York (State)",
          "United States"],
        "physical_description_a":["1 online resource"],
        "note_access_restrictions_a":["Access limited to UNC Chapel Hill-authenticated users. Unlimited simultaneous users"],
        "lcc_callnum_classification_a":["B - Philosophy. Psychology. Religion",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS701 - BS1830 Old Testament"],
        "statement_of_responsibility_a":["by Steven Shawn Tuell."],
        "index_date":"2024-02-15T04:06:39Z"},
      {
        "id":"UNCb8723999",
        "url_a":["{\"href\":\"https://login.libproxy.lib.unc.edu/login?url=http://dx.doi.org/10.1093/OBO/9780195393361-0071\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\"}"],
        "author_suggest":["Knoppers, Gary N., 1956-2018",
          "Greer, Jonathan S."],
        "names_a":["{\"name\":\"Knoppers, Gary N., 1956-2018\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n93093891\"}",
          "{\"name\":\"Greer, Jonathan S.\",\"type\":\"no_rel\",\"id\":\"https://id.loc.gov/authorities/names/n2013063438\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b8723999",
        "shelfkey":"lc:BS.133552",
        "available_a":["Available"],
        "frequency_current_a":["Frequency of update unknown"],
        "publisher_a":["Oxford University Press"],
        "rollup_id":"OBOEDZ0000021397",
        "note_local_a":["Vendor-supplied catalog record."],
        "title_suggest":["1 and 2 Kings"],
        "title_main":"1 and 2 Kings",
        "title_sort_ssort_single":"1 and 2 kings",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "creator_main_a":["Knoppers, Gary N., 1956-2018"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[New York] : Oxford University Press, 2010-\"}"],
        "host_item_work_a":["{\"title\":[\"Oxford bibliographies online\",\"(online collection)\",\".\",\"Biblical studies\"]}"],
        "resource_type_a":["Web page or site"],
        "subject_genre_a":["Bibliography",
          "Reference"],
        "date_cataloged":"2017-01-30T05:00:00Z",
        "genre_headings_a":["Bibliography"],
        "subject_suggest":["Bibliography",
          "Bible. Kings -- Criticism, interpretation, etc -- Bibliography"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["OBOEDZ0000021397"],
        "subject_topical_a":["Bible. Kings",
          "Criticism, interpretation, etc"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:O7}YWWUUX",
        "subject_headings_a":["Bible. Kings -- Criticism, interpretation, etc -- Bibliography"],
        "lc_call_nos_normed_a":["BS.133552"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[New York]",
          "New York (State)",
          "United States"],
        "physical_description_a":["1 online resource"],
        "note_access_restrictions_a":["Access limited to UNC Chapel Hill-authenticated users. Unlimited simultaneous users"],
        "lcc_callnum_classification_a":["B - Philosophy. Psychology. Religion",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS701 - BS1830 Old Testament"],
        "statement_of_responsibility_a":["by Gary N. Knoppers, Jonathan S. Greer."],
        "index_date":"2024-02-15T04:06:39Z"},
      {
        "id":"UNCb8724944",
        "url_a":["{\"href\":\"https://login.libproxy.lib.unc.edu/login?url=http://dx.doi.org/10.1093/OBO/9780195393361-0086\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\"}"],
        "author_suggest":["Auld, A. Graeme"],
        "names_a":["{\"name\":\"Auld, A. Graeme\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n84217319\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b8724944",
        "shelfkey":"lc:BS.132552",
        "available_a":["Available"],
        "frequency_current_a":["Updated quarterly"],
        "publisher_a":["Oxford University Press"],
        "rollup_id":"OBOEDZ0000050460",
        "note_local_a":["Vendor-supplied catalog record."],
        "title_suggest":["1 and 2 Samuel"],
        "title_main":"1 and 2 Samuel",
        "title_sort_ssort_single":"1 and 2 samuel",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "creator_main_a":["Auld, A. Graeme"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[New York] : Oxford University Press, 2011-\"}"],
        "host_item_work_a":["{\"title\":[\"Oxford bibliographies online\",\"(online collection)\",\".\",\"Biblical studies\"]}"],
        "resource_type_a":["Web page or site"],
        "subject_genre_a":["Bibliography",
          "Reference"],
        "date_cataloged":"2017-01-30T05:00:00Z",
        "genre_headings_a":["Bibliography"],
        "subject_suggest":["Bibliography",
          "Bible. Samuel -- Criticism, interpretation, etc -- Bibliography"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["OBOEDZ0000050460"],
        "subject_topical_a":["Bible. Samuel",
          "Criticism, interpretation, etc"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:O7}YWXUUX",
        "subject_headings_a":["Bible. Samuel -- Criticism, interpretation, etc -- Bibliography"],
        "lc_call_nos_normed_a":["BS.132552"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[New York]",
          "New York (State)",
          "United States"],
        "physical_description_a":["1 online resource"],
        "note_access_restrictions_a":["Access limited to UNC Chapel Hill-authenticated users. Unlimited simultaneous users"],
        "lcc_callnum_classification_a":["B - Philosophy. Psychology. Religion",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible",
          "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS701 - BS1830 Old Testament"],
        "statement_of_responsibility_a":["by Graeme Auld."],
        "index_date":"2024-02-15T04:06:39Z"},
      {
        "id":"UNCb9520781",
        "url_a":["{\"href\":\"https://purl.fdlp.gov/GPO/gpo117142\",\"type\":\"fulltext\",\"restricted\":\"false\"}"],
        "author_suggest":["Dalaker, Joseph",
          "Library of Congress. Congressional Research Service"],
        "names_a":["{\"name\":\"Dalaker, Joseph\",\"rel\":\"author\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n2005087341\"}",
          "{\"name\":\"Library of Congress. Congressional Research Service\",\"rel\":\"issuing body\",\"type\":\"publisher\"}"],
        "owner_a":["unc"],
        "edition_a":["[Library of Congress public edition]."],
        "misc_id_a":["LCCN: 2019230804",
          "GPO Item Number: 0807-A-07 (online)"],
        "language_a":["English"],
        "local_id":"b9520781",
        "shelfkey":"sudoc:LC 14.23:R 45100/",
        "available_a":["Available"],
        "frequency_current_a":["Updated irregularly"],
        "publisher_a":["Congressional Research Service"],
        "rollup_id":"OCLC1089448247",
        "title_suggest":["The 10-20-30 provision : defining persistent poverty counties",
          "CRS report"],
        "title_main":"The 10-20-30 provision : defining persistent poverty counties",
        "title_sort_ssort_single":"10 20 30 provision defining persistent poverty counties",
        "access_type_a":["Online"],
        "institution_a":["unc",
          "duke",
          "nccu",
          "ncsu"],
        "oclc_number":"1089448247",
        "series_work_a":["{\"title\":[\"CRS report\"],\"details\":\"R45100.\"}"],
        "creator_main_a":["Dalaker, Joseph, author"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Washington, D.C.] : Congressional Research Service, 2018-\"}"],
        "note_general_a":["The CRS report home page provides access to all versions published since 2018 in accordance with P.L. 115-141.",
          "Report includes bibliographical references."],
        "primary_oclc_a":["1089448247"],
        "host_item_work_a":["{\"label\":\"In\",\"title\":[\"CRS reports\",\"(Library of Congress. Congressional Research Service)\"]}"],
        "resource_type_a":["Government publication",
          "Web page or site"],
        "subject_genre_a":["Statistics"],
        "title_former_a":["<March 8, 2019>: 10-20-30 plan and persistent poverty counties"],
        "date_cataloged":"2019-09-09T04:00:00Z",
        "genre_headings_a":["Statistics"],
        "subject_suggest":["Statistics",
          "American Community Survey (U.S.)",
          "Small Area Income and Poverty Estimates (Program : U.S.)",
          "Poverty -- United States -- Statistics",
          "Small area statistics -- United States",
          "United States -- Economic conditions -- Regional disparities -- Statistics"],
        "physical_media_a":["Online"],
        "subject_topical_a":["American Community Survey (U.S.)",
          "Small Area Income and Poverty Estimates (Program : U.S.)",
          "Poverty",
          "Small area statistics",
          "Economic conditions",
          "Regional disparities"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:EN~YV}XW~8~VUYZZ~",
        "series_statement_a":["Report / Congressional Research Service ; R45100"],
        "subject_headings_a":["American Community Survey (U.S.)",
          "Small Area Income and Poverty Estimates (Program : U.S.)",
          "Poverty -- United States -- Statistics",
          "Small area statistics -- United States",
          "United States -- Economic conditions -- Regional disparities -- Statistics"],
        "publisher_location_a":["Washington, D.C."],
        "record_data_source_a":["ILSMARC",
          "Shared Records",
          "DWS"],
        "subject_geographic_a":["United States"],
        "virtual_collection_a":["TRLN Shared Records. Documents without shelves."],
        "call_number_schemes_a":["SUDOC"],
        "origin_place_search_a":["[Washington, D.C.]",
          "District of Columbia",
          "United States"],
        "physical_description_a":["1 online resource."],
        "statement_of_responsibility_a":["Joseph Dalaker."],
        "index_date":"2024-02-17T07:51:53Z"},
      {
        "id":"UNCb9708687",
        "url_a":["{\"href\":\"https://purl.fdlp.gov/GPO/gpo125236\",\"type\":\"fulltext\",\"restricted\":\"false\"}"],
        "author_suggest":["Dalaker, Joseph",
          "Library of Congress. Congressional Research Service"],
        "names_a":["{\"name\":\"Dalaker, Joseph\",\"rel\":\"author\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n2005087341\"}",
          "{\"name\":\"Library of Congress. Congressional Research Service\",\"rel\":\"issuing body\",\"type\":\"publisher\"}"],
        "owner_a":["unc"],
        "edition_a":["[Library of Congress public edition]."],
        "misc_id_a":["LCCN: 2019256302",
          "GPO Item Number: 0807-A-07 (online)"],
        "language_a":["English"],
        "local_id":"b9708687",
        "shelfkey":"sudoc:LC 14.23:R 44748/",
        "available_a":["Available"],
        "frequency_current_a":["Updated irregularly"],
        "publisher_a":["Congressional Research Service"],
        "rollup_id":"OCLC1117495328",
        "title_suggest":["The 10-20-30 rule and persistent poverty counties",
          "CRS report"],
        "title_main":"The 10-20-30 rule and persistent poverty counties",
        "title_sort_ssort_single":"10 20 30 rule and persistent poverty counties",
        "access_type_a":["Online"],
        "institution_a":["unc",
          "duke",
          "nccu",
          "ncsu"],
        "oclc_number":"1117495328",
        "series_work_a":["{\"title\":[\"CRS report\"],\"details\":\"R44748.\"}"],
        "creator_main_a":["Dalaker, Joseph, author"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Washington, D.C.] : Congressional Research Service, 2019-\"}"],
        "note_general_a":["The CRS report home page provides access to all versions published since 2018 in accordance with P.L. 115-141; earliest version dated 2017.",
          "\"January 27, 2017.\"",
          "Report includes color map.",
          "Report includes bibliographical references."],
        "primary_oclc_a":["1117495328"],
        "host_item_work_a":["{\"label\":\"In\",\"title\":[\"CRS reports\",\"(Library of Congress. Congressional Research Service)\"]}"],
        "resource_type_a":["Government publication",
          "Web page or site"],
        "date_cataloged":"2019-10-10T04:00:00Z",
        "physical_media_a":["Online"],
        "subject_topical_a":["United States. American Recovery and Reinvestment Act of 2009",
          "Poverty",
          "Rural development",
          "Economic conditions"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:EN~YV}XW~8~VVSVR~",
        "series_statement_a":["Report / Congressional Research Service ; R44748"],
        "subject_headings_a":["United States. American Recovery and Reinvestment Act of 2009",
          "Poverty -- United States",
          "Rural development -- United States",
          "United States -- Economic conditions"],
        "subject_suggest":["United States. American Recovery and Reinvestment Act of 2009",
          "Poverty -- United States",
          "Rural development -- United States",
          "United States -- Economic conditions"],
        "publisher_location_a":["Washington, D.C."],
        "record_data_source_a":["ILSMARC",
          "Shared Records",
          "DWS"],
        "subject_geographic_a":["United States"],
        "virtual_collection_a":["TRLN Shared Records. Documents without shelves."],
        "call_number_schemes_a":["SUDOC"],
        "origin_place_search_a":["[Washington, D.C.]",
          "District of Columbia",
          "United States"],
        "physical_description_a":["1 online resource"],
        "statement_of_responsibility_a":["Joseph Dalaker."],
        "index_date":"2024-02-17T19:21:38Z"},
      {
        "id":"UNCb9476282",
        "url_a":["{\"href\":\"https://www.westlaw.com/Browse/Home/BusinessLawCenter/10KSectionSearch?rs=tran3.0&vr=3.0&originationContext=vendcc\",\"type\":\"fulltext\",\"text\":\"Full text available to UNC-Chapel Hill Law School with password\",\"note\":\"Coverage: 1996 - present\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b9476282",
        "shelfkey":"lc:KF.1444.A65.A12",
        "available_a":["Available"],
        "frequency_current_a":["Updated periodically"],
        "publisher_a":["publisher not identified",
          "Thomson Reuters"],
        "rollup_id":"WLN00870102",
        "title_suggest":["10-K Section search."],
        "title_main":"10-K Section search.",
        "title_sort_ssort_single":"10 k section search",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Place of publication not identified] : [publisher not identified]\"}"],
        "note_summary_a":["10-K Section search offers users the ability to focus searches on particular sections of Form 10-K. By simply checking a box, users can limit their search to the area(s) of the 10-K most likely to contain what they need. For more targeted results, users can use additional search fields to specify key words or phrases, filing date, period date, company name, ticker symbol, CIK and more."],
        "related_work_a":["{\"title\":[\"WESTLAW (Information retrieval system)\"]}"],
        "resource_type_a":["Web page or site"],
        "subject_genre_a":["Rules and practice",
          "Forms",
          "Blank forms"],
        "date_cataloged":"2022-03-21T04:00:00Z",
        "genre_headings_a":["Rules and practice",
          "Forms",
          "Blank forms"],
        "subject_suggest":["Rules and practice",
          "Forms",
          "Blank forms",
          "United States. Securities and Exchange Commission -- Rules and practice",
          "EDGAR (Information retrieval system)",
          "Corporation reports -- United States",
          "Corporation reports -- United States -- Forms",
          "Disclosure of information -- United States",
          "Disclosure of information -- United States -- Forms",
          "Financial statements -- United States",
          "Financial statements -- United States -- Forms",
          "Securities -- United States",
          "Securities -- United States -- Forms"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["WLN00870102"],
        "subject_topical_a":["United States. Securities and Exchange Commission",
          "EDGAR (Information retrieval system)",
          "Corporation reports",
          "Disclosure of information",
          "Financial statements",
          "Securities"],
        "imprint_multiple_a":["{\"type\":\"publication\",\"value\":\"[Place of publication not identified] : [publisher not identified]\"}",
          "{\"type\":\"distribution\",\"value\":\"[St. Paul, Minnesota] : Thomson Reuters, [2016]-\"}"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:FK}YVVV}PTU}PYX",
        "subject_headings_a":["United States. Securities and Exchange Commission -- Rules and practice",
          "EDGAR (Information retrieval system)",
          "Corporation reports -- United States",
          "Corporation reports -- United States -- Forms",
          "Disclosure of information -- United States",
          "Disclosure of information -- United States -- Forms",
          "Financial statements -- United States",
          "Financial statements -- United States -- Forms",
          "Securities -- United States",
          "Securities -- United States -- Forms"],
        "lc_call_nos_normed_a":["KF.1444.A65.A12"],
        "publisher_location_a":["Place of publication not identified"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[Place of publication not identified]",
          "[St. Paul, Minnesota]"],
        "physical_description_a":["1 online resource"],
        "lcc_callnum_classification_a":["K - Law in general. Comparative and uniform law. Jurisprudence",
          "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States",
          "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF1000 - KF1999"],
        "index_date":"2024-02-17T04:21:51Z"},
      {
        "id":"UNCb7976745",
        "url_a":["{\"href\":\"http://digital.ncdcr.gov/cdm/search/searchterm/890136221/field/identi\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\",\"restricted\":\"false\"}"],
        "author_suggest":["North Carolina. Division of Public Health",
          "North Carolina. Injury Epidemiology and Surveillance Unit"],
        "names_a":["{\"name\":\"North Carolina. Division of Public Health\",\"type\":\"no_rel\"}",
          "{\"name\":\"North Carolina. Injury Epidemiology and Surveillance Unit\",\"rel\":\"issuing body\",\"type\":\"publisher\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b7976745",
        "shelfkey":"sudoc:J12 409/2:I56",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["Division of Public Health, Injury Epidemiology and Surveillance Unit"],
        "rollup_id":"OCLC890136221",
        "title_suggest":["10 leading causes of injury death (all races, both sexes) by age groups, North Carolina"],
        "title_main":"10 leading causes of injury death (all races, both sexes) by age groups, North Carolina",
        "title_sort_ssort_single":"10 leading causes of injury death all races both sexes by age groups north carolina",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"890136221",
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Raleigh, North Carolina] : Division of Public Health, Injury Epidemiology and Surveillance Unit\"}"],
        "primary_oclc_a":["890136221"],
        "resource_type_a":["Government publication",
          "Journal, Magazine, or Periodical"],
        "subject_genre_a":["Statistics",
          "Periodicals"],
        "date_cataloged":"2014-11-25T05:00:00Z",
        "genre_headings_a":["Statistics",
          "Periodicals"],
        "subject_suggest":["Statistics",
          "Periodicals",
          "Death -- North Carolina -- Causes -- Statistics -- Periodicals",
          "Mortality -- North Carolina -- Statistics -- Periodicals",
          "Accidents -- North Carolina -- Statistics -- Periodicals"],
        "physical_media_a":["Online"],
        "subject_topical_a":["Death",
          "Causes",
          "Mortality",
          "Accidents"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:GYX~VZQ~X~HUT",
        "subject_headings_a":["Death -- North Carolina -- Causes -- Statistics -- Periodicals",
          "Mortality -- North Carolina -- Statistics -- Periodicals",
          "Accidents -- North Carolina -- Statistics -- Periodicals"],
        "publisher_location_a":["Raleigh, North Carolina"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["North Carolina"],
        "call_number_schemes_a":["SUDOC"],
        "note_system_details_a":["System requirements: Adobe Acrobat Reader ; current access available via PURL."],
        "origin_place_search_a":["[Raleigh, North Carolina]",
          "North Carolina",
          "United States"],
        "physical_description_a":["1 online resource (volumes)"],
        "statement_of_responsibility_a":["N.C. Division of Public Health, Injury Epidemiology and Surveillance Unit."],
        "physical_description_details_a":["File type: text file",
          "File format: PDF"],
        "index_date":"2024-02-13T02:51:40Z"},
      {
        "id":"UNCb7976746",
        "url_a":["{\"href\":\"http://digital.ncdcr.gov/cdm/search/searchterm/890373357/field/identi\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\",\"restricted\":\"false\"}"],
        "author_suggest":["North Carolina. Injury and Violence Prevention Branch",
          "North Carolina. Division of Public Health"],
        "names_a":["{\"name\":\"North Carolina. Injury and Violence Prevention Branch\",\"rel\":\"issuing body\",\"type\":\"publisher\"}",
          "{\"name\":\"North Carolina. Division of Public Health\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b7976746",
        "shelfkey":"sudoc:J12 409/2:E532",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["N.C. Division of Public Health, Injury and Violence Prevention Branch"],
        "rollup_id":"OCLC890373357",
        "title_suggest":["10 leading causes of injury ED visits (all races, both sexes) by age groups, North Carolina"],
        "title_main":"10 leading causes of injury ED visits (all races, both sexes) by age groups, North Carolina",
        "title_sort_ssort_single":"10 leading causes of injury ed visits all races both sexes by age groups north carolina",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"890373357",
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Raleigh, North Carolina] : N.C. Division of Public Health, Injury and Violence Prevention Branch\"}"],
        "primary_oclc_a":["890373357"],
        "resource_type_a":["Government publication",
          "Journal, Magazine, or Periodical"],
        "subject_genre_a":["Statistics",
          "Periodicals"],
        "date_cataloged":"2014-11-25T05:00:00Z",
        "genre_headings_a":["Statistics",
          "Periodicals"],
        "subject_suggest":["Statistics",
          "Periodicals",
          "Wounds and injuries -- North Carolina -- Statistics -- Periodicals",
          "Accidents -- North Carolina -- Statistics -- Periodicals",
          "Accidental poisoning -- North Carolina -- Statistics -- Periodicals",
          "Falls (Accidents) -- North Carolina -- Statistics -- Periodicals",
          "Hospitals -- Emergency services -- North Carolina -- Statistics -- Periodicals"],
        "physical_media_a":["Online"],
        "subject_topical_a":["Wounds and injuries",
          "Accidents",
          "Accidental poisoning",
          "Falls (Accidents)",
          "Hospitals",
          "Emergency services"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:GYX~VZQ~X~LUWX",
        "subject_headings_a":["Wounds and injuries -- North Carolina -- Statistics -- Periodicals",
          "Accidents -- North Carolina -- Statistics -- Periodicals",
          "Accidental poisoning -- North Carolina -- Statistics -- Periodicals",
          "Falls (Accidents) -- North Carolina -- Statistics -- Periodicals",
          "Hospitals -- Emergency services -- North Carolina -- Statistics -- Periodicals"],
        "publisher_location_a":["Raleigh, North Carolina"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["North Carolina"],
        "call_number_schemes_a":["SUDOC"],
        "note_system_details_a":["System requirements: Adobe Acrobat Reader ; current access available via PURL."],
        "origin_place_search_a":["[Raleigh, North Carolina]",
          "North Carolina",
          "United States"],
        "physical_description_a":["1 online resource (volumes)"],
        "statement_of_responsibility_a":["N.C. Division of Public Health, Injury and Violence Prevention Branch."],
        "physical_description_details_a":["File type: text file",
          "File format: PDF"],
        "index_date":"2024-02-13T02:51:40Z"},
      {
        "id":"UNCb7976748",
        "url_a":["{\"href\":\"http://digital.ncdcr.gov/cdm/search/searchterm/890374110/field/identi\",\"type\":\"fulltext\",\"text\":\"Available via the UNC-Chapel Hill Libraries\",\"restricted\":\"false\"}"],
        "author_suggest":["North Carolina. Injury and Violence Prevention Branch",
          "North Carolina. Division of Public Health"],
        "names_a":["{\"name\":\"North Carolina. Injury and Violence Prevention Branch\",\"rel\":\"issuing body\",\"type\":\"publisher\"}",
          "{\"name\":\"North Carolina. Division of Public Health\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "language_a":["English"],
        "local_id":"b7976748",
        "shelfkey":"sudoc:J12 409/2:H828",
        "available_a":["Available"],
        "frequency_current_a":["Biennial"],
        "publisher_a":["N.C. Division of Public Health, Injury and Violence Prevention Branch"],
        "rollup_id":"OCLC890374110",
        "title_suggest":["10 leading causes of injury hospitalizations (all races, both sexes) by age groups, North Carolina"],
        "title_main":"10 leading causes of injury hospitalizations (all races, both sexes) by age groups, North Carolina",
        "title_sort_ssort_single":"10 leading causes of injury hospitalizations all races both sexes by age groups north carolina",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"890374110",
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Raleigh, North Carolina] : N.C. Division of Public Health, Injury and Violence Prevention Branch\"}"],
        "primary_oclc_a":["890374110"],
        "resource_type_a":["Government publication",
          "Journal, Magazine, or Periodical"],
        "subject_genre_a":["Statistics",
          "Periodicals"],
        "date_cataloged":"2014-11-25T05:00:00Z",
        "genre_headings_a":["Statistics",
          "Periodicals"],
        "subject_suggest":["Statistics",
          "Periodicals",
          "Wounds and injuries -- North Carolina -- Statistics -- Periodicals",
          "Accidents -- North Carolina -- Statistics -- Periodicals",
          "Hospital utilization -- North Carolina -- Statistics -- Periodicals"],
        "physical_media_a":["Online"],
        "subject_topical_a":["Wounds and injuries",
          "Accidents",
          "Hospital utilization"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:GYX~VZQ~X~IRXR",
        "subject_headings_a":["Wounds and injuries -- North Carolina -- Statistics -- Periodicals",
          "Accidents -- North Carolina -- Statistics -- Periodicals",
          "Hospital utilization -- North Carolina -- Statistics -- Periodicals"],
        "publisher_location_a":["Raleigh, North Carolina"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["North Carolina"],
        "call_number_schemes_a":["SUDOC"],
        "note_system_details_a":["System requirements: Adobe Acrobat Reader ; current access available via PURL."],
        "origin_place_search_a":["[Raleigh, North Carolina]",
          "North Carolina",
          "United States"],
        "physical_description_a":["1 online resource (volumes)"],
        "statement_of_responsibility_a":["N.C. Division of Public Health, Injury and Violence Prevention Branch."],
        "physical_description_details_a":["File type: text file",
          "File format: PDF"],
        "index_date":"2024-02-13T02:51:40Z"},
      {
        "id":"UNCb10671226",
        "items_a":["{\"notes\":[\"For holdings, ask at Davis Service Desk.\"],\"item_id\":\"i12980373\",\"loc_b\":\"dcpf\",\"loc_n\":\"dcpf\",\"status\":\"Available\",\"call_no\":\"L 40.2:R 31/3/SPAN./\",\"cn_scheme\":\"SUDOC\"}"],
        "author_suggest":["United States. Department of Labor. Employee Benefits Security Administration"],
        "names_a":["{\"name\":\"United States. Department of Labor. Employee Benefits Security Administration\",\"rel\":\"issuing body\",\"type\":\"publisher\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2021235397",
          "GPO Item Number: 0773-C"],
        "language_a":["English"],
        "local_id":"b10671226",
        "shelfkey":"sudoc:L 40.2:R 31/3/SPAN./",
        "available_a":["Available"],
        "frequency_current_a":["Irregular"],
        "publisher_a":["Departamento de Trabajo de los Estados Unidos, Administración de Seguridad para los Beneficios de Empleados"],
        "rollup_id":"OCLC1244811319",
        "this_work_a":["{\"title\":[\"Top 10 ways to prepare for retirement.\",\"Spanish.\"]}"],
        "title_suggest":["Las 10 mejores maneras de prepararse para la jubilación."],
        "title_main":"Las 10 mejores maneras de prepararse para la jubilación.",
        "title_sort_ssort_single":"10 mejores maneras de prepararse para la jubilacion",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"1244811319",
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Washington, D.C.] : Departamento de Trabajo de los Estados Unidos, Administración de Seguridad para los Beneficios de Empleados\"}"],
        "note_general_a":["Print format no longer distributed to depository libraries.",
          "In Spanish."],
        "primary_oclc_a":["1244811319"],
        "alt_edition_work_a":["{\"label\":\"English version\",\"title\":[\"Top 10 ways to prepare for retirement\"]}"],
        "resource_type_a":["Government publication",
          "Journal, Magazine, or Periodical"],
        "title_variant_a":["Las diez mejores maneras de prepararse para la jubilación"],
        "date_cataloged":"2021-05-07T04:00:00Z",
        "physical_media_a":["Print"],
        "subject_topical_a":["Retirement income",
          "Retirement",
          "Planning",
          "Postemployment benefits"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:E~VZ}X~8~WY~W~7APC}~",
        "subject_headings_a":["Retirement income -- United States",
          "Retirement -- United States -- Planning",
          "Postemployment benefits -- United States"],
        "subject_suggest":["Retirement income -- United States",
          "Retirement -- United States -- Planning",
          "Postemployment benefits -- United States"],
        "location_hierarchy_a":["unc",
          "unc:uncdavy",
          "unc:uncdavy:uncdavdoc"],
        "publisher_location_a":["Washington, D.C."],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States"],
        "call_number_schemes_a":["SUDOC"],
        "origin_place_search_a":["[Washington, D.C.]",
          "District of Columbia",
          "United States"],
        "physical_description_a":["folded sheets : color illustrations ; 23 cm"],
        "index_date":"2024-02-19T23:51:31Z"},
      {
        "id":"UNCb10673193",
        "url_a":["{\"href\":\"https://purl.fdlp.gov/GPO/gpo153832\",\"type\":\"fulltext\",\"note\":\"Current issue\",\"restricted\":\"false\"}",
          "{\"href\":\"https://purl.fdlp.gov/GPO/gpo137094\",\"type\":\"fulltext\",\"note\":\"Archived issues\",\"restricted\":\"false\"}"],
        "author_suggest":["United States. Department of Labor. Employee Benefits Security Administration"],
        "names_a":["{\"name\":\"United States. Department of Labor. Employee Benefits Security Administration\",\"rel\":\"issuing body\",\"type\":\"publisher\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2021235396",
          "GPO Item Number: 0773-C (online)"],
        "language_a":["English"],
        "local_id":"b10673193",
        "shelfkey":"sudoc:L 40.2:R 31/3/SPAN./",
        "available_a":["Available"],
        "frequency_current_a":["Irregular"],
        "publisher_a":["Departamento de Trabajo de los Estados Unidos, Administración de Seguridad para los Beneficios de Empleados"],
        "rollup_id":"OCLC1244810767",
        "this_work_a":["{\"title\":[\"Top 10 ways to prepare for retirement.\",\"Spanish.\"]}"],
        "title_suggest":["Las 10 mejores maneras de prepararse para la jubilación."],
        "title_main":"Las 10 mejores maneras de prepararse para la jubilación.",
        "title_sort_ssort_single":"10 mejores maneras de prepararse para la jubilacion",
        "access_type_a":["Online"],
        "institution_a":["unc",
          "duke",
          "nccu",
          "ncsu"],
        "oclc_number_old_a":["1251964366",
          "1251974260",
          "1251980312",
          "1251983067",
          "1251994387",
          "1251997790",
          "1251999352",
          "1252000555",
          "1252000668",
          "1252008581",
          "1252015832",
          "1252020495",
          "1252028748",
          "1252035238",
          "1252035922",
          "1252039222"],
        "oclc_number":"1244810767",
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Washington, D.C.] : Departamento de Trabajo de los Estados Unidos, Administración de Seguridad para los Beneficios de Empleados\"}"],
        "note_general_a":["In Spanish."],
        "primary_oclc_a":["1244810767"],
        "alt_edition_work_a":["{\"label\":\"English version\",\"title\":[\"Top 10 ways to prepare for retirement\"]}"],
        "resource_type_a":["Government publication",
          "Journal, Magazine, or Periodical"],
        "title_variant_a":["Las diez mejores maneras de prepararse para la jubilación"],
        "date_cataloged":"2021-05-10T04:00:00Z",
        "physical_media_a":["Online"],
        "subject_topical_a":["Retirement income",
          "Retirement",
          "Planning",
          "Postemployment benefits"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"sudoc:E~VZ}X~8~WY~W~7APC}~",
        "subject_headings_a":["Retirement income -- United States",
          "Retirement -- United States -- Planning",
          "Postemployment benefits -- United States"],
        "subject_suggest":["Retirement income -- United States",
          "Retirement -- United States -- Planning",
          "Postemployment benefits -- United States"],
        "publisher_location_a":["Washington, D.C."],
        "record_data_source_a":["ILSMARC",
          "Shared Records",
          "DWS"],
        "subject_geographic_a":["United States"],
        "virtual_collection_a":["TRLN Shared Records. Documents without shelves."],
        "call_number_schemes_a":["SUDOC"],
        "origin_place_search_a":["[Washington, D.C.]",
          "District of Columbia",
          "United States"],
        "physical_description_a":["1 online resource (volumes) : color illustrations"],
        "index_date":"2024-02-19T23:51:31Z"}]
  },
  "facet_counts":{
    "facet_queries":{
      "date_cataloged_dt:[NOW-7DAY/DAY TO NOW]":42976,
      "date_cataloged_dt:[NOW-1MONTH/DAY TO NOW]":63814,
      "date_cataloged_dt:[NOW-3MONTH/DAY TO NOW]":110333},
    "facet_fields":{
      "access_type_f":[
        "At the Library",5056389,
        "Online",3066312],
      "available_f":[
        "Available",7966100],
      "location_hierarchy_f":[
        "unc",5042201,
        "unc:uncdavy",2317112,
        "unc:unclibr",1558167,
        "unc:uncdavy:uncdavdoc",749184,
        "unc:uncwil",467601,
        "law",217064,
        "law:lawuncw",217064,
        "unc:unclawy",217064,
        "unc:uncmusy",203195,
        "unc:uncrarn",197578,
        "unc:uncwil:uncwilrbc",197578,
        "unc:uncnorn",195392,
        "unc:uncwil:uncwilncc",195392,
        "hsl",135177,
        "hsl:hsluncy",135177,
        "unc:unchsl",135177,
        "unc:uncscix",126911,
        "unc:uncarty",99340,
        "unc:uncinfy",83024,
        "unc:uncsouz",71548,
        "unc:uncwil:uncwilsfc",71548,
        "unc:uncul",57215,
        "unc:uncdavy:uncdavmap",42316,
        "unc:uncmedr",28408,
        "unc:uncschy",12299,
        "unc:uncdavy:uncdavref",11379,
        "unc:uncpark",10670,
        "unc:uncstoy",10327,
        "unc:uncdavy:uncstor",9451,
        "unc:unccarr",7321,
        "unc:uncnory",6466,
        "unc:uncmusy:uncmusymult",6150,
        "unc:uncsoun",5075,
        "unc:uncwil:uncwilshc",5075,
        "unc:uncmary",2979,
        "unc:uncul:unculpop",2293,
        "unc:unclgby",1161,
        "unc:uncmedr:uncmedrmeks",1030,
        "unc:unclaty",676,
        "unc:uncherb",584,
        "unc:unchigy",578,
        "unc:uncarchives",473,
        "unc:uncwil:uncwilar",473,
        "unc:unccarn",424,
        "unc:uncdavy:uncdavglo",216,
        "unc:uncmedr:uncmedrmets",173,
        "unc:unckeny",112,
        "unc:uncgloy",98,
        "unc:uncofft",17],
      "resource_type_f":[
        "Book",6824027,
        "Government publication",1425270,
        "Journal, Magazine, or Periodical",432503,
        "Video",176613,
        "Music recording",168986,
        "Music score",144789,
        "Thesis/Dissertation",126291,
        "Map",64229,
        "Web page or site",38891,
        "Archival and manuscript material",18688,
        "Newspaper",18161],
      "lcc_callnum_classification_f":[
        "A - General Works",43440,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works",6662,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC1 - AC195 Collections of monographs, essays, etc.",6039,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC1 - AC195 Collections of monographs, essays, etc.|AC1 - AC8 American and English",807,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC1 - AC195 Collections of monographs, essays, etc.|AC9 - AC195 Other languages",4675,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC801 - AC895 Inaugural and program dissertations",21,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC901 - AC995 Pamphlet collections",601,
        "A - General Works|AE1 - AE88 Encyclopedias",647,
        "A - General Works|AE1 - AE88 Encyclopedias|AE5 - AE88 By language",446,
        "A - General Works|AG2 - AG600 Dictionaries and other general reference works",557,
        "A - General Works|AI1 - AI21 Indexes",222,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting",1602,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting|AM10 - AM100 By country",460,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting|AM111 - AM160 Museology. Museum methods, technique, etc.",331,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting|AM200 - AM401 Collectors and collecting",127,
        "A - General Works|AN - Newspapers",628,
        "A - General Works|AP1 - AP230 Periodicals",6161,
        "A - General Works|AP1 - AP230 Periodicals|AP101 - AP115 Humorous periodicals",47,
        "A - General Works|AP1 - AP230 Periodicals|AP200 - AP230 Juvenile periodicals",108,
        "A - General Works|AS1 - AS945 Academies and learned societies",23512,
        "A - General Works|AS1 - AS945 Academies and learned societies|AS11 - AS785 By region or country",22871,
        "A - General Works|AS1 - AS945 Academies and learned societies|AS2.5 - AS4 International associations, congresses, conferences, etc.",25,
        "A - General Works|AY10 - AY2001 Yearbooks. Almanacs. Directories",696,
        "A - General Works|AY10 - AY2001 Yearbooks. Almanacs. Directories|AY10 - AY29 Annuals",217,
        "A - General Works|AY10 - AY2001 Yearbooks. Almanacs. Directories|AY30 - AY1730 Almanacs",479,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities",1223,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ101 - AZ111 Philosophy. Theory",321,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ191 - AZ193 Evaluation",57,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ200 - AZ361 History",159,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ501 - AZ908 By region or country",368,
        "B - Philosophy. Psychology. Religion",321144,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)",57866,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period",50888,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B108 - B708 Ancient",9659,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B720 - B765 Medieval",1798,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B770 - B785 Renaissance",483,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern",36877,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern|B5800 - B5802 By religion",73,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern|B808 - B849 Special topics and schools of philosophy",5715,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern|B850 - B5739 By region or country",29725,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B69 - B99 General works",729,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic",2310,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC11 - BC39 History",217,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC11 - BC39 History|BC25 - BC39 By period",158,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC171 - BC199 Special topics",664,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC60 - BC99 General works",474,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy",11230,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD10 - BD41 General philosophical works",397,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD143 - BD237 Epistomology. Theory of knowledge",3399,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD240 - BD260 Methodology",519,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD300 - BD450 Ontology",3339,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD493 - BD701 Cosmology",1446,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD95 - BD131 Metaphysics",623,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology",39500,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF173 - BF175.5 Psychoanalysis",2832,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF176 - BF176.5 Psychological tests and testing",211,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF180 - BF198.7 Experimental psychology",241,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF207 - BF209 Psychotropic drugs and other substances",35,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF231 - BF299 Sensation. Aesthesiology",777,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF309 - BF499 Consciousness. Cognition",8537,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF38 - BF64 Philosophy. Relation to other topics",1372,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF501 - BF505 Motivation",224,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF511 - BF593 Affection. Feeling. Emotion",4077,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF608 - BF635 Will. Volition. Choice. Control",371,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF636 - BF637 Applied psychology",616,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF638 - BF648 New Thought. Menticulture, etc.",61,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF660 - BF685 Comparative psychology. Animal and human psychology",231,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF692 - BF692.5 Psychology of sex. Sexual behavior",388,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF697 - BF697.5 Differential psychology. Individuality. Self",591,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF698 - BF698.9 Personality",1449,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF699 - BF711 Genetic psychology",212,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF712 - BF724.85 Developmental psychology",4857,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF725 - BF727 Class psychology",1,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF795 - BF839 Temperament. Character",164,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF839.8 - BF885 Physiognomy. Phrenology",139,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF889 - BF905 Graphology. Study of handwriting",60,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF908 - BF940 The hand. Palmistry",32,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology",1922,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1001 - BF1045 Psychic research. Psychology of the conscious",611,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1048 - BF1108 Hallucinations. Sleep. Dreaming. Visions",571,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1111 - BF1156 Hypnotism. Suggestion. Mesmerism. Subliminal projection",124,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1161 - BF1171 Telepathy. Mind reading. Though transference",3,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1228 - BF1389 Spiritualism",459,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences",3928,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1444 - BF1486 Ghosts. Apparitions. Hauntings",471,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1501 - BF1562 Demonology. Satanism. Possession",279,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1562.5 - BF1584 Witchcraft",601,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1585 - BF1623 Magic. Hermetics. Necromancy",605,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1651 - BF1729 Astrology",346,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1745 - BF1779 Oracles. Sibyls. Divinations",265,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1783 - BF1815 Seers. Prophets. Prophecies",45,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1845 - BF1891 Fortune-telling",73,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF2050 - BF2055 Human-alien encounters. Contact between humans and extraterrestrials",45,
        "B - Philosophy. Psychology. Religion|BH1 - BH301 Aesthetics",2407,
        "B - Philosophy. Psychology. Religion|BH1 - BH301 Aesthetics|BH81 - BH208 History",640,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics",10389,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1188 - BJ1295 Religious ethics",1487,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1298 - BJ1335 Evolutionary and genetic ethics",111,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1365 - BJ1385 Positivist ethics",3,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1390 - BJ1390.5 Communist ethics",113,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1518 - BJ1697 Individual ethics. Character. Virtue",2390,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ71 - BJ1185 History and general works",2794,
        "B - Philosophy. Psychology. Religion|BJ1801 - BJ2195 Social usages. Etiquette",434,
        "B - Philosophy. Psychology. Religion|BJ1801 - BJ2195 Social usages. Etiquette|BJ2021 - BJ2078 Etiquette of entertaining",57,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism",29470,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL1 - BL50 Religion (General)",1438,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology",1790,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL175 - BL190 General",144,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL205 - BL216 Nature and attributes of Deity",79,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL224 - BL227 Creation. Theory of the Earth",53,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL239 - BL265 Religion and science",1225,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL2700 - BL2790 Rationalism",1185,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL300 - BL325 The myth. Comparative mythology",626,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL350 - BL385 Classification of religions",25,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)",956,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)|BL435 - BL457 Nature worship",133,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)|BL465 - BL470 Worship of human beings",32,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)|BL473 - BL490 Other",437,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL500 - BL547 Eschatology",402,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL51 - BL65 Philosophy of religion. Psychology of religion. Religion in relation to other subjects",2399,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL550 - BL619 Worship. Cultus",593,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL624 - BL629.5 Religious life",1012,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL630 - BL632 Religious organization",15,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions",14687,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental",8526,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1050 - BL1060 By region",96,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism",3529,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1100 - BL1107.5 General",45,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1108.19 - BL1108.7 Religious education",3,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1109.19 - BL1109.7 Antiquities. Archaeology. Inscriptions",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1111 - BL1143.2 Sacred books. Sources",975,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1145 - BL1146 Hindu literature",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1153.69 - BL1168 By region or country",49,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1212.32 - BL1215 Doctrines. Theology",98,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1216 - BL1225 Hindu pantheon. Deities",216,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1225.2 - BL1243.58 Religious life",410,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1243.72 - BL1243.78 Monasteries. Temples, etc.",103,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1271.2 - BL1295 Modifications. Sects",478,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1271.2 - BL1295 Modifications. Sects|BL1284.5 - BL1289.59 Vaishnavism",162,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism",208,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1310 - BL1314.2 Sacred books. Sources",13,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1315 - BL1317 Jain literature",3,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1375.3 - BL1375.7 Jaina pantheon. Deities",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1376 - BL1378.85 Forms of worship",27,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1500 - BL1590 Zoroastrianism (Mazdeism). Parseeism",232,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions",245,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1600 - BL1605 General",26,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1615 - BL1616 Sumerian",23,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1620 - BL1625 Assyro-Babylonian",34,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1640 - BL1645 Syrian. Palestinian. Samaritan",33,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1660 - BL1665 Phoenician. Carthaginian, etc.",12,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1670 - BL1672 Canaanite",19,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1680 - BL1685 Arabian (except Islam)",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country",3336,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL1790 - BL1975 China",1791,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL1790 - BL1975 China|BL1830 - BL1883 Confucianism",197,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL1790 - BL1975 China|BL1899 - BL1942.85 Taoism",1014,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2000 - BL2032 India",731,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2000 - BL2032 India|BL2017 - BL2018.7 Sikhism",247,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2195 - BL2228 Japan",310,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2195 - BL2228 Japan|BL2216 - BL2227.8 Shinto",142,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2230 - BL2240 Korea",57,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2390 - BL2490 African",949,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2390 - BL2490 African|BL2420 - BL2460 Egyptian",367,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2500 - BL2592 American",1398,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2600 - BL2630 Pacific Ocean Islands. Oceania",117,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental",2752,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental|BL700 - BL820 Classical (Etruscan, Greek, Roman)",1537,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental|BL830 - BL875 Germanic and Norse",180,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental|BL900 - BL980 Other European",348,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL70 - BL71 Sacred books (General)",26,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL71.5 - BL73 Biography",58,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL74 - BL99 Religions of the world",909,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism",8296,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General",1955,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General|BM150 - BM449 History",1419,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General|BM150 - BM449 History|BM201 - BM449 By region or country",407,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General|BM70 - BM135 Study and teaching",119,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM480 - BM488.8 Pre-Talmudic Jewish literature (non-Biblical)",456,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM495 - BM532 Sources of Jewish religion. Rabbinical literature",1787,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.",16103,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam",14673,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP1 - BP68 General",2655,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP1 - BP68 General|BP42 - BP48 Study and teaching",179,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP1 - BP68 General|BP50 - BP68 History",2050,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP100 - BP137 Sacred books",1985,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP100 - BP137 Sacred books|BP100 - BP134 Koran",1163,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP160 - BP165 General works on Islam",949,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP166 - BP166.94 Theology (Kalam)",850,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP170.3 - BP170.5 Missionary work of Islam",11,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP171 - BP173 Relation of Islam to other religions",544,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP173.25 - BP173.45 Islamic sociology",326,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam",2449,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP176 - BP181 The five duties of a Moslem.  Pillars of Islam",69,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP184 - BP184.9 Religious ceremonies, rites, etc.",78,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP186 - BP186.97 Special days and seasons, fasts, feasts, festivals, etc.",31,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP187 - BP187.9 Shrines, sacred places, etc.",185,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life",1726,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life|BP188.2 - BP188.3 Devotional literature",5,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life|BP188.45 - BP189.65 Sufism. Mysticism. Dervishes",1233,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life|BP189.68 - BP189.7 Monasticism",9,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP191 - BP253 Branches, sects, etc.",1359,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP70 - BP80 Biography",536,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP70 - BP80 Biography|BP75 - BP77.75 Muhammad, Prophet, d. 632",431,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP87 - BP89 Islamic literature",92,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP300 - BP395 Bahai Faith",187,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP500 - BP585 Theosophy",227,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP595 - BP597 Anthroposophy",296,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP600 - BP610 Other beliefs and movements",632,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism",6403,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ1001 - BQ1045 Buddhist literature",80,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ1100 - BQ3340 Tripitaka (Canonical literature)",787,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ251 - BQ799 History",851,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4000 - BQ4060 General works",275,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4061 - BQ4570 Doctrinal and systematic Buddhism",529,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4600 - BQ4610 Relation to other religious and philosophical systems",13,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4620 - BQ4905 Buddhist pantheon",114,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship",364,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ4965 - BQ5030 Ceremonies and rites. Ceremonial rules",36,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5035 - BQ5065 Hymns. Chants. Recitations",10,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5070 - BQ5075 Altar, liturgical objects, ornaments, memorials, etc.",3,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5100 - BQ5125 Symbols and symbolism",12,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5130 - BQ5137 Temple. Temple organization",11,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5140 - BQ5355 Buddhist ministry. Priesthood. Organization",17,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5360 - BQ5680 Religious life",220,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ840 - BQ999 Biography",450,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ840 - BQ999 Biography|BQ860 - BQ999 Individual",427,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ840 - BQ999 Biography|BQ860 - BQ999 Individual|BQ860 - BQ939 Gautama Buddha",112,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity",23705,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR140 - BR1510 History",11519,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR140 - BR1510 History|BR160 - BR481 By period",3992,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR140 - BR1510 History|BR500 - BR1510 By region or country",6903,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR1690 - BR1725 Biography",986,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR60 - BR67 Early Christian literature. Fathers of the Church, etc.",2872,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible",24914,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS11 - BS115 Early versions",170,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS125 - BS355 Modern texts and versions",700,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS1901 - BS2970 New Testament",9437,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS1901 - BS2970 New Testament|BS2280 - BS2545 Works about the New Testament",2119,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS1901 - BS2970 New Testament|BS2547 - BS2970 Special parts of the New Testament",6605,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS410 - BS680 Works about the Bible",5553,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS701 - BS1830 Old Testament",8205,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology",16536,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT1029 - BT1040 Catechisms",34,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT1095 - BT1255 Apologetics. Evidences of Christianity",621,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT1313 - BT1480 History of specific doctrines and movements. Heresies and schisms",798,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT19 - BT37 Doctrine and dogma",672,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT198 - BT590 Christology",3425,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT595 - BT680 Mary, Mother of Jesus Christ. Mariology",572,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT695 - BT749 Creation",2925,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT750 - BT811 Salvation. Soteriology",959,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT819 - BT891 Eschatology. Last things",641,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT899 - BT940 Future state. Future life",166,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT93 - BT93.6 Judaism",79,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT95 - BT97.2 Divine law. Moral government",76,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT960 - BT985 Invisible world (Saints, demons, etc.)",191,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT98 - BT180 God",2092,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT990 - BT1010 Creeds, confessions, covenants, etc.",144,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology",16186,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions",3144,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions|BV2123 - BV2595 Special churches",611,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions|BV2610 - BV2695 Special types of missions",170,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions|BV2750 - BV3695 Missions in individual countries",1926,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV3750 - BV3799 Evangelism. Revivals",644,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV4000 - BV4470 Pastoral theology",2026,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV4485 - BV5099 Practical religion. The Christian life",4715,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)",2021,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV150 - BV168 Christian symbols and symbolism",129,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV169 - BV199 Liturgy and ritual",426,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV205 - BV287 Prayer",451,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV30 - BV135 Times and seasons. The Church year",258,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV301 - BV530 Hymnology",550,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology",3540,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV1460 - BV1615 Religious education (General)",530,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV1620 - BV1652 Social life, recreation, etc. in the church",14,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV659 - BV683 Ministry. Clergy. Religious vocations",290,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV700 - BV707 Parish. Congregation. The local church",11,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV800 - BV873 Sacraments. Ordinances",591,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV895 - BV896 Shrines. Holy places",3,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV900 - BV1450 Religious societies, associations, etc.",159,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations",48851,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX1 - BX9.5 Church unity. Ecumenical movement. Interdenominational cooperation",273,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX100 - BX189 Eastern churches. Oriental churches",346,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX200 - BX756 Orthodox Eastern Church",6414,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism",17979,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX4872 - BX4924 Pre-Reformation",394,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX4929 - BX4951 Post-Reformation",167,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5001 - BX5009 Anglican Communion (General)",133,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5011 - BX5207 Church of England",2780,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5800 - BX5995 Protestant Episcopal Church in the United States of America",1003,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5996 - BX6030 Protestant Episcopal Church outside the United States",2,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6051 - BX6093 Reformed Episcopal Church",4,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations",11504,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6101 - BX6193 Adventists",105,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6195 - BX6197 Arminians. Remonstrants",23,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6201 - BX6495 Baptists",1352,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6551 - BX6593 Catholic Apostolic Church. Irvingites",8,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6651 - BX6693 Christadelphians. Brothers of Christ",2,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6751 - BX6793 Christian Church",11,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6801 - BX6843 Christian Reformed Church",8,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6901 - BX6997 Christian Science",80,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7020 - BX7060 Church of God",35,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7079 - BX7097 Churches of God",8,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7101 - BX7260 Congregationalism",271,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7301 - BX7343 Disciples of Christ. Campbellites",114,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7401 - BX7430 Dowieism. Christian Catholic Church",4,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7451 - BX7493 Evangelical and Reformed Church",6,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7601 - BX7795 Friends. Society of Friends. Quakers",563,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7801 - BX7843 German Baptist Brethren. Church of the Brethren. Dunkards",35,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7901 - BX7943 German Evangelical Synod of North America",1,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8001 - BX8080 Lutheran churches",599,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8101 - BX8144 Mennonites",279,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8201 - BX8495 Methodism",1007,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8525 - BX8528 Millennial Dawnists. Jehovah's Witnesses",89,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8551 - BX8593 Moravian Church. United Brethren. Unitas Fratrum. Herrnhuters",148,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8601 - BX8695 Mormons. Church of Jesus Christ of Latter-Day Saints",979,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8701 - BX8749 New Jerusalem Church. New Church. Swedenborgianism",93,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8762 - BX8785 Pentecostal churches",200,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8799 - BX8809 Plymouth Brethren. Darbyites",10,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8901 - BX9225 Presbyterianism. Calvinistic Methodism",914,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9301 - BX9359 Puritanism",229,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9401 - BX9640 Reformed or Calvinistic Churches",977,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9701 - BX9743 Salvation Army",47,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9751 - BX9793 Shakers. United Society of Believers. Millennial Church",163,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9801 - BX9869 Unitarianism",178,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9875 - BX9877.1 United Brethren in Christ. Church of the United Brethren in Christ",8,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9881 - BX9882.95 United Church of Canada",6,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9884 - BX9886 United Church of Christ",16,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9901 - BX9969 Universalism. Universalists",71,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church",23829,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX2400 - BX4563 Monasticism. Religious orders",3654,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX4600 - BX4644 Churches, cathedrals, abbeys (as parish churches), etc.",155,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX4650 - BX4750 Biography and portraits",6281,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX4716.4 - BX4795 Dissenting sects other than Protestant",20,
        "C - Auxiliary Sciences of History",35910,
        "C - Auxiliary Sciences of History|C1 - C51 Auxiliary Sciences of History (General)",39,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization",6175,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB158 - CB161 Forecasts of future progress",190,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB195 - CB281 Civilization and race",1260,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB305 - CB430 By period",2673,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB440 - CB482 Relation to special topics",352,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology",4098,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC135 - CC137 Preservation, restoration, and conservation of antiquities.  Antiquities and state",490,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC200 - CC260 Bells. Campanology. Cowbells",42,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC300 - CC350 Crosses",32,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC700 - CC705 Stone heaps, cairns, etc., of unknown purpose",3,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC72 - CC81 Philosophy. Theory",2165,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC83 - CC97 Study and teaching. Research",54,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals",5394,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals|CD1 - CD511 Diplomatics",219,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals|CD5001 - CD6471 Seals",358,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals|CD921 - CD4280 Archives",3751,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar",392,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar|CE21 - CE46 Ancient",113,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar|CE51 - CE85 Medieval and modern",165,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar|CE91 - CE92 Perpetual calendars. Century calendars, etc.",1,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics",2240,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics|CJ1 - CJ4625 Coins",2042,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics|CJ4801 - CJ5450 Tokens",54,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics|CJ5501 - CJ6661 Medals and medallions",143,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy",1380,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy|CN120 - CN740 Ancient inscriptions",1018,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy|CN750 - CN753 Early Christian inscriptions",7,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy|CN805 - CN865 By language",11,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy|CN870 - CN1355 By region or country",252,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry",1430,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR101 - CR115 Flags, banners, and standards",105,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR1101 - CR1131 Ecclesiastical and sacred heraldry",10,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR1179 - CR3395 Family heraldry",120,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR191 - CR1020 Public and official heraldry",159,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR3499 - CR4420 Titles of honor, rank, precedence, etc",77,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4480 - CR4485 Royalty. Insignia. Regalia, crown and coronets, etc.",15,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4501 - CR6305 Chivalry and knighthood (Orders, decorations, etc.)",757,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4501 - CR6305 Chivalry and knighthood (Orders, decorations, etc.)|CR4571 - CR4595 Duels and dueling",37,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4501 - CR6305 Chivalry and knighthood (Orders, decorations, etc.)|CR4651 - CR6305 Orders, etc.",500,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR51 - CR79 Crests, monograms, devices, badges, mottoes",42,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy",4318,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS23 - CS35 Genealogical lists, etc., covering more than one country or continent",27,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS2300 - CS3090 Personal or family names",771,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS38 - CS39 Family history covering more than one country",2,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS42 - CS2209 By region or country",3389,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography",9094,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT21 - CT22 Biography as an art or literary form",189,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT210 - CT3150 National biography",6345,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT31 - CT83 History of biographical literature. Lives of biographers",97,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT3200 - CT9999 Biography. By subject",1197,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT3200 - CT9999 Biography. By subject|CT3200 - CT3830 Biography of women (Collective)",577,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT3200 - CT9999 Biography. By subject|CT9960 - CT9998 Other miscellaneous groups",145,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT93 - CT206 General collective biography",890,
        "D - History (General) and History of Europe",401497,
        "D - History (General) and History of Europe|D1 - D2009 History (General)",61023,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D1 - D24.5 General",7978,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D101 - D110.5 Medieval and modern history, 476-",508,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D111 - D203 Medieval history",2287,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-",6475,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D219 - D234 1453-1648",246,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D242 - D283.5 1601-1715. 17th century",648,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D284 - D297 1715-1789. 18th century",392,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789",4424,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789|D301 - D309 Period of the French Revolution",82,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789|D351 - D400 19th century. 1801-1914/1920",1182,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789|D410 - D472 20th century",2929,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D25 - D27 Military and naval history",281,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D31 - D34 Political and diplomatic history",138,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D51 - D90 Ancient history",941,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain",37901,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA10 - DA18.2 British Empire. Commonwealth of Nations. The Commonwealth",573,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England",27213,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History",20984,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History|DA129 - DA592 By period",16156,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History|DA129 - DA592 By period|DA129 - DA260 Early and medieval to 1485",2896,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History|DA129 - DA592 By period|DA300 - DA592 Modern, 1485-",13181,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA600 - DA667 Description and travel. Guidebooks",1030,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA670 - DA690 Local history and description",3751,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA700 - DA745 Wales",567,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA750 - DA890 Scotland",2411,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA900 - DA995 Ireland",4935,
        "D - History (General) and History of Europe|DAW1001 - DAW1051 History of Central Europe",215,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia",11361,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB1 - DB879 Austria. Austro-Hungarian Empire",4599,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB2000 - DB3150 Czechoslovakia",5042,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB2000 - DB3150 Czechoslovakia|DB2300 - DB2650 Local history and description of Czech lands",566,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB2000 - DB3150 Czechoslovakia|DB2700 - DB3150 Slovakia",892,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB881 - DB898 Liechtenstein",10,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB901 - DB999 Hungary",1452,
        "D - History (General) and History of Europe|DC1 - DC947 History of France",24308,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History",19270,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period",16223,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-",14494,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-|DC139 - DC249 Revolutionary and Napoleonic period, 1789-1815",6222,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-|DC251 - DC354.9 19th century",2384,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-|DC361 - DC424 20th century",2446,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC60 - DC109 Early and medieval to 1515",1726,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC600 - DC801 Local history and description",3312,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC921 - DC930 Andorra",11,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC941 - DC947 Monaco",28,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany",18764,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD258 - DD262 West Germany",1583,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD280 - DD289.5 East Germany",889,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD301 - DD454 Prussia",742,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD701 - DD901 Local history and description",2116,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History",10265,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period",8753,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period|DD121 - DD124 Earliest to 481",50,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period|DD125 - DD174.6 Early and medieval to 1519",598,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period|DD175 - DD257.4 Modern, 1519-",8105,
        "D - History (General) and History of Europe|DE1 - DE100 History of the Greco-Roman world",1596,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece",7456,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece|DF10 - DF289 Ancient Greece",5193,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece|DF501 - DF649 Medieval Greece. Byzantine Empire, 323-1453",1091,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece|DF701 - DF951 Modern Greece",1150,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy",18535,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG11 - DG365 Ancient Italy. Rome to 476",8602,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG401 - DG583.8 Medieval and modern Italy, 476-",4857,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG600 - DG684.72 Northern Italy",927,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG691 - DG817.3 Central Italy",1787,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG819 - DG875 Southern Italy",787,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG987 - DG999 Malta. Maltese Islands",101,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries",1078,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium",689,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History",235,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period",184,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH571 - DH584 Early and medieval to 1555",16,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH585 - DH619 1555-1794. Spanish and Austrian rule",20,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH620 - DH676 1794-1909",49,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH677 - DH694 20th century",95,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH801 - DH811 Local history and description",105,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH901 - DH925 Luxembourg",38,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH95 - DH207 History",231,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH95 - DH207 History|DH141 - DH207 By period",202,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)",638,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ401 - DJ411 Local history and description",34,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History",334,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period",213,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period|DJ151 - DJ152 Early and medieval to 1555",2,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period|DJ154 - DJ210 1555-1795. United provinces",127,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period|DJ215 - DJ292 19th-20th centuries",73,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)",1611,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK26 - DJK28 Ethnography",205,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK30 - DJK51 History",745,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description",97,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description|DJK61 - DJK66 Black Sea region",36,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description|DJK71 - DJK76 Carpathian Mountain region",15,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description|DJK76.2 - DJK76.8 Danube River Valley",12,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics",46298,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History",21611,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK112.8 - DK264.8 House of Romanov, 1613-1917",7222,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK265 - DK265.95 Revolution, 1917-1921",3101,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK266 - DK292 Soviet regime, 1918-1991",5902,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK70 - DK112.42 Early to 1613",1211,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK70 - DK112.42 Early to 1613|DK70 - DK99.7 Rus'",768,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK70 - DK112.42 Early to 1613|DK99.8 - DK112.42 Muscovy",450,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description",19268,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK502.3 - DK502.75 Baltic States",175,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK503 - DK503.95 Estonia",183,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK504 - DK504.95 Latvia",282,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK505 - DK505.95 Lithuania",219,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK507 - DK507.95 Belarus. Byelorussian S.S.R.  White Russia",402,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK508 - DK508.95 Ukraine",2253,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK509.1 - DK509.95 Moldova. Moldovian S.S.R.  Bessarabia",158,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK510 - DK651 Russia (Federation). Russian S.F.S.R.",8776,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK670 - DK679.5 Georgia (Republic). Georgian S.S.R.  Georgian Sakartvelo",269,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK680 - DK689.5 Armenia (Republic). Armenian S.S.R.",55,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK690 - DK699.5 Azerbaijan. Azerbaijan S.S.R.",222,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK751 - DK781 Siberia",2072,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK845 - DK860 Soviet Central Asia. West Turkestan",463,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK901 - DK909.5 Kazakhstan. Kazakh S.S.R.",260,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK911 - DK919.5 Kyrgyzstan. Kirghiz S.S.R. Kirghizia",101,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK921 - DK929.5 Tajikistan. Tajik S.S.R. Tadzhikistan",103,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK931 - DK939.5 Turkmenistan. Turkmen S.S.R.  Turkmenia",75,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK941 - DK949.5 Uzbekistan. Uzbek S.S.R.",150,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland",2529,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History",1627,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4186 - DK4348 To 1795",204,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4348.5 - DK4395 1795-1918. 19th century (General)",175,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4397 - DK4420 1918-1945",199,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4429 - DK4442 1945-1989. People's Republic",299,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4445 - DK4452 -1989",107,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4600 - DK4800 Local history and description",433,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia",2028,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland",161,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History",108,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period",81,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-",81,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-|DL1070 - DL1078 Revolution, 1917-1918. Civil War",8,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-|DL1090 - DL1105 1939-1945",32,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-|DL1090 - DL1105 1939-1945|DL1095 - DL1105 Russo-Finnish War, 1939-1940",32,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1170 - DL1180 Local history and description",4,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark",278,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History",146,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History|DL160 - DL263.3 By period",79,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History|DL160 - DL263.3 By period|DL160 - DL183.9 Early and medieval to 1523",22,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History|DL160 - DL263.3 By period|DL184 - DL263.3 Modern, 1523-",56,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL301 - DL398 Iceland",165,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway",205,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History",100,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period",64,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period|DL460 - DL478 Early and medieval to 1387",30,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period|DL480 - DL502 1387-1814. Union of Kalmar, 1397",1,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period|DL503 - DL526 1814-1905. 19th century",5,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period|DL527 - DL537 20th century. Period of World War II, 1939-1945",28,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL576 - DL596 Local history and description",16,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL43 - DL87 History",306,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL43 - DL87 History|DL61 - DL87 By period",204,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden",574,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History",333,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History|DL660 - DL879 By period",257,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History|DL660 - DL879 By period|DL660 - DL700.9 Early and medieval to 1523. Union of Kalmar, 1397",15,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History|DL660 - DL879 By period|DL701 - DL879 Modern, 1523-",242,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL971 - DL991 Local history and description",80,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain",8570,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP285 - DP402 Local history and description",1952,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History",5391,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period",4659,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-",3445,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP161.5 - DP166 1479-1516. Fernando V and Isabel I",129,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP170 - DP189 1516-1700. Hapsburgs",426,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP192 - DP200.8 1700-1808. Bourbons",158,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP201 - DP232.6 1808-1886. 19th century",370,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP233 - DP272.4 20th century. 1886-",2278,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP91 - DP96 Earliest to 711",149,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP97.3 - DP160.8 711-1516. Moorish domination and the Reconquest",993,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal",1433,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History",901,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History|DP558 - DP682.2 By period",665,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History|DP558 - DP682.2 By period|DP558 - DP618 Early and medieval to 1580",252,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History|DP558 - DP682.2 By period|DP620 - DP682.2 -1580",413,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP702 - DP802 Local history and description",144,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland",724,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ1 - DQ20 General",87,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ20.5 - DQ26 Description and travel",40,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ30 - DQ49.5 Antiquities. Social life and customs. Ethnography",89,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ301 - DQ851 Local history and description",256,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History",248,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ51 - DQ57 General",57,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period",134,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period|DQ111 - DQ123 1516-1798",17,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period|DQ124 - DQ191 19th century",37,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period|DQ201 - DQ210 20th century",50,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period|DQ78 - DQ110 Early and medieval to 1516",26,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula",10916,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia",3295,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History",1031,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period",918,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1259 - DR1265 Early and medieval to 1500",1,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1266 - DR1272 1500-1800",1,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1273 - DR1280 1800-1918",19,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1281 - DR1321 -1918",895,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1281 - DR1321 -1918|DR1313 - DR1313.8 Yugoslav War, 1991-1995",436,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1350 - DR2285 Local history and description",2122,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania",1267,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History",704,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period",517,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR238 - DR240.5 Early and medieval to 1601. Roman period",70,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR241 - DR241.5 Phanariote regime, 1601-1822",28,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR242 - DR249 1822-1881. 19th century",60,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR250 - DR266.5 1866/1881-1944",151,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR267 - DR267.5 1944-1989",78,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR268 - DR269.6 -1989",41,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR279 - DR296 Local history and description",232,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR32 - DR48.5 History. Balkan War, 1912-1913",536,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey",2840,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History",1744,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period",1181,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR485 - DR555.7 1281/1453-1789. Fall of Constantinople, 1453",386,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR556 - DR567 1789-1861. 19th century",95,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR568 - DR575 1861-1909. War with Russia, 1877-1878",178,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR576 - DR605 20th century. Constitutional movement",488,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR701 - DR741 Local history and description (European Turkey)",439,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR50 - DR50.84 Thrace",31,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria",1309,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History",900,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period",668,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR73.7 - DR80.8 Early and medieval",100,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR81 - DR84 Turkish rule, 1396-1878",183,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR84.9 - DR89.8 1878-1944",194,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR89.9 - DR93.34 1944-1990",102,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR93.4 - DR93.47 -1990",86,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR95 - DR98 Local history and description",75,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania",197,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History",115,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period",76,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period|DR954 - DR960.5 To 1501",8,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period|DR961 - DR969 1501-1912. Turkish rule",13,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period|DR969.8 - DR978.52 20th century",55,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR996 - DR998 Local history and description",5,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia",105141,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS101 - DS151 Israel (Palestine). The Jews",18087,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS101 - DS151 Israel (Palestine). The Jews|DS133 - DS151 Jews outside of Palestine",10023,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS13 - DS28 Ethnography",626,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS153 - DS154.9 Jordan. Transjordan",276,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS155 - DS156 Asia Minor",102,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS161 - DS195.5 Armenia",345,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS201 - DS248 Arabian Peninsula. Saudi Arabia",1663,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS251 - DS326 Iran (Persia)",3167,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS31 - DS35.2 History",731,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS327 - DS329.4 Central Asia",217,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS331 - DS349.9 Southern Asia. Indian Ocean Region",583,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS331 - DS349.9 Southern Asia. Indian Ocean Region|DS349.8 - DS349.9 Islands of the Indian Ocean",6,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS35.3 - DS35.77 The Islamic World",326,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS350 - DS375 Afghanistan",1274,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS36 - DS39.2 Arab countries",1436,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS36 - DS39.2 Arab countries|DS37 - DS39.2 History",769,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS376 - DS392.2 Pakistan",890,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS393 - DS396.9 Bangladesh. East Pakistan",200,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)",12349,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)|DS430 - DS432 Ethnography. Sects",103,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)|DS433 - DS481 History",4299,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)|DS483 - DS486.8 Local history and description",3264,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS41 - DS66 Middle East. Southwestern Asia. Ancient Orient. Arab East. Near East",4681,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS41 - DS66 Middle East. Southwestern Asia. Ancient Orient. Arab East. Near East|DS51 - DS54.95 Local history and description",834,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS41 - DS66 Middle East. Southwestern Asia. Ancient Orient. Arab East. Near East|DS51 - DS54.95 Local history and description|DS54 - DS54.95 Cyprus",518,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS488 - DS490 Sri Lanka",348,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS491 - DS492.9 Bhutan",55,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS493 - DS495.8 Nepal",204,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS498 - DS498.8 Goa. Portuguese in India",110,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS5.95 - DS10 Description and travel",127,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS501 - DS518.9 East Asia. The Far East",1636,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia",5142,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS524 - DS526.7 History",325,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS527 - DS530.9 Burma",406,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina",3901,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS541 - DS553.7 History",234,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS554 - DS554.98 Cambodia",325,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS555 - DS555.98 Laos",112,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS556 - DS559.93 Vietnam. Annam",3034,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS556 - DS559.93 Vietnam. Annam|DS557 - DS559.9 Vietnamese Conflict",2416,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS560 - DS560.72 Democratic Republic (North Vietnam), 1945-",37,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS561 - DS589 Thailand (Siam)",553,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS591 - DS599 Malaysia. Malay Peninsula. Straits Settlements",921,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS591 - DS599 Malaysia. Malay Peninsula. Straits Settlements|DS597.33 - DS597.34 Sabah. British North Borneo",21,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS591 - DS599 Malaysia. Malay Peninsula. Straits Settlements|DS597.36 - DS597.39 Sarawak",61,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS600 - DS605 Malay Archipelago",36,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS608 - DS610.9 Singapore",288,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)",1540,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS631 - DS632 Ethnography",8,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS633 - DS644.46 History",460,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.1 - DS646.15 Sumatra",15,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.17 - DS646.29 Java",88,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.3 - DS646.34 Borneo. Kalimantan, Indonesia",88,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.4 - DS646.49 Celebes. Sulawesi",15,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.5 - DS646.59 Timor",52,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.6 - DS646.69 Moluccas. Maluku",25,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS650 - DS650.99 Brunei",26,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS651 - DS689 Philippines",1047,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS67 - DS79.9 Iraq (Assyria, Babylonia, Mesopotamia)",2798,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China",31292,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS730 - DS731 Ethnography",293,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS733 - DS779.32 History",17010,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS781 - DS796 Local history and description",3773,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS781 - DS796 Local history and description|DS781 - DS784.2 Manchuria",259,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS781 - DS796 Local history and description|DS785 - DS786 Tibet",331,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS798.92 - DS799.9 Taiwan",2385,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS80 - DS90 Lebanon (Phenicia)",796,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS801 - DS897 Japan",4294,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS801 - DS897 Japan|DS833 - DS891.5 History",2083,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS801 - DS897 Japan|DS894.21 - DS897 Local history and description",554,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea",3019,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS904.8 - DS922.46 History",1872,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS904.8 - DS922.46 History|DS918 - DS921.8 War and intervention, 1950-1953",649,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS924 - DS925 Local history and description",84,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS930 - DS937 Democratic People's Republic, 1948-",467,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS92 - DS99 Syria",693,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa",30529,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1001 - DT1190 Southern Africa",263,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1251 - DT1465 Angola",202,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT15 - DT16 Ethnography",111,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1501 - DT1685 Namibia. South-West Africa",162,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT154.1 - DT159.9 Sudan. Anglo-Egyptian Sudan",723,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT160 - DT177 North Africa",259,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT160 - DT177 North Africa|DT167 - DT176 History",176,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT160 - DT177 North Africa|DT167 - DT176 History|DT168 - DT169.5 Carthaginian period",30,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT17 - DT39 History",2406,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa",1525,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT1754 - DT1770 Ethnography",353,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT1772 - DT1974 History",808,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT1991 - DT2054 Cape Province. Cape of Good Hope",28,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT2075 - DT2145 Orange Free State. Oranje Vrystaat",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT2181 - DT2278 KwaZulu-Natal. Natal",17,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT2291 - DT2378 Transvaal. South African Republic",16,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT179.2 - DT179.9 Northwest Africa",6,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States",3136,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT211 - DT239 Libya",371,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT241 - DT269 Tunisia (Tunis)",343,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT271 - DT299 Algeria",1033,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT301 - DT330 Morocco",612,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT331 - DT346 Sahara",128,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2421 - DT2525 Botswana. Bechuanaland",67,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2541 - DT2686 Lesotho. Basutoland",25,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2701 - DT2825 Swaziland",13,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2831 - DT2864 British Central Africa. Federation of Rhodesia and Nyasaland",1,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2871 - DT3025 Zimbabwe. Southern Rhodesia",249,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT3031 - DT3145 Zambia. Northern Rhodesia",92,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT3161 - DT3257 Malawi. Nyasaland",62,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT3291 - DT3415 Mozambique",131,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT348 - DT363.3 Central Sub-Saharan Africa",810,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa",3379,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT367 - DT367.8 Northeast Africa",32,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT371 - DT390 Ethiopia (Abyssinia)",549,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT391 - DT398 Eritrea",98,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT401 - DT409 Somalia. Somaliland and adjacent territory",208,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT411 - DT411.9 Djibouti. French Territory of the Afars and Issas. French Somaliland",33,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT421 - DT432.5 East Africa. British East Africa",165,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT433.2 - DT433.29 Uganda",205,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT433.5 - DT434 Kenya",474,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT436 - DT449 Tanzania. Tanganyika. German East Africa",287,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT450 - DT450.49 Rwanda. Ruanda-Urundi",399,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT450.5 - DT450.95 Burundi",69,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT468 - DT469 Islands (East African coast)",17,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt",4504,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT115 - DT154 Local history and description",336,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT115 - DT154 Local history and description|DT139 - DT153.5 Cairo",96,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT56.8 - DT69.5 Antiquities",1113,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT56.8 - DT69.5 Antiquities|DT63 - DT63.5 Pyramids",74,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT56.8 - DT69.5 Antiquities|DT68 - DT68.8 Religious antiquities",11,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT74 - DT107.87 History",1634,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast",7510,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa",1956,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT509 - DT509.9 Gambia",70,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT509.97 - DT512.9 Ghana (Gold Coast)",459,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT515 - DT515.9 Nigeria",843,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT516 - DT516.9 Sierra Leone",221,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel",2443,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT541 - DT541.9 Benin. Dahomey",179,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT543 - DT543.9 Guinea",106,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT545 - DT545.9 Cote d'Ivoire. Ivory Coast",303,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa",392,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.1 - DT546.19 Gabon (Gaboon, Gabun)",87,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.2 - DT546.29 Congo (Brazaville). Middle Congo",99,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.3 - DT546.39 Central African Republic. Central African Empire. Ubangi-Shari",66,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.4 - DT546.49 Chad (Tchad)",126,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT547 - DT547.9 Niger",153,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT549 - DT549.9 Senegal",279,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT551 - DT551.9 Mali. Mali Federation. Sudanese Republic. French Sudan",220,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT554 - DT554.9 Mauritania",112,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT555 - DT555.9 Burkina Faso. Upper Volta",138,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT561 - DT581 Cameroon (Cameroun, Kamerun)",509,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT582 - DT582.9 Togo. Togoland",102,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT591 - DT615.9 Portuguese-speaking West Africa",392,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT591 - DT615.9 Portuguese-speaking West Africa|DT613 - DT613.9 Guinea-Bissau. Portuguese Guinea",117,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT591 - DT615.9 Portuguese-speaking West Africa|DT615 - DT615.9 Sao Tome and Principe",18,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT619 - DT620.9 Spanish West Africa",69,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT619 - DT620.9 Spanish West Africa|DT620 - DT620.9 Equatorial Guinea (Spanish Guinea)",55,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT621 - DT637 Liberia",271,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT641 - DT665 Zaire. Congo (Democratic Republic). Belgian Congo",1140,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT669 - DT671 Islands",4,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT7 - DT12.25 Description and travel",174,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)",5682,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU28.11 - DU68 History",207,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand",633,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand|DU419 - DU422 History",206,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand|DU422.5 - DU424.5 Ethnography",228,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand|DU428 - DU430 Local history and description",4,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU520 - DU950 Smaller Island Groups",1727,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU520 - DU950 Smaller Island Groups|DU620 - DU629 Hawaiian Islands. Hawaii",517,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia",2520,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU108 - DU117.2 History",702,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU120 - DU125 Ethnography",617,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU150 - DU180 New South Wales",123,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU182 - DU198 Tasmania. Van Diemen's Land",26,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU200 - DU230 Victoria",100,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU250 - DU280 Queensland",81,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU300 - DU330 South Australia",44,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU350 - DU380 Western Australia",47,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU392 - DU398 Northern Territory of Australia",29,
        "D - History (General) and History of Europe|DX101 - DX301 History of Gypsies",570,
        "E - History: America",100150,
        "E - History: America|E11 - E143 America",21395,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations",1926,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations|E103 - E110 Pre-Columbian period",176,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations|E111 - E120 Columbus",600,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations|E121 - E135 Post-Columbian period. El Dorado",967,
        "E - History: America|E11 - E143 America|E11 - E29 General",454,
        "E - History: America|E11 - E143 America|E141 - E143 Descriptive accounts of America. Earliest to 1810",181,
        "E - History: America|E11 - E143 America|E31 - E49.3 North America",227,
        "E - History: America|E11 - E143 America|E51 - E73 Pre-Columbian America. The Indians",2198,
        "E - History: America|E11 - E143 America|E75 - E99 Indians of North America",9327,
        "E - History: America|E11 - E143 America|E75 - E99 Indians of North America|E81 - E83 Indian wars",104,
        "E - History: America|E151 - E889 United States",76972,
        "E - History: America|E151 - E889 United States|E151 - E169.13 General",5231,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History",10257,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E171 - E180 General",4254,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E171 - E180 General|E175 - E175.7 Historiography",572,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E171 - E180 General|E176 - E176.8 Biography",1058,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E183 - E183.3 Political history",288,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population",17352,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population|E184.5 - E185.98 Afro-Americans",10224,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population|E184.5 - E185.98 Afro-Americans|E185.2 - E185.89 Status and development since emancipation",5940,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population|E184.5 - E185.98 Afro-Americans|E185.96 - E185.98 Biography. Genealogy",1901,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)",686,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)|E186 - E189 General",501,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)|E191 - E199 By period",171,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)|E191 - E199 By period|E195 - E199 1689-1775",133,
        "E - History: America|E151 - E889 United States|E201 - E298 The Revolution, 1775-1783",4177,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861",11976,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E300 - E302.6 General",580,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E300 - E302.6 General|E302.5 - E302.6 Biography (Late eighteenth century)",102,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period",6035,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E303 - E309 1775-1789. The Confederation, 1783-1789",80,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period",1855,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E311 - E320 Washington's administrations, 1789-1797",903,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E321 - E330 John Adams' administration, 1797-1801",197,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E331 - E337 Jefferson's administrations, 1801-1809",626,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E331 - E337 Jefferson's administrations, 1801-1809|E336 - E336.5 Neutral trade and its restrictions, 1800-1810",21,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845",2210,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E337.8 - E340 General",223,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E337.8 - E340 General|E339 - E340 Biography",26,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E341 - E370 Madison's administrations, 1809-1817",787,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E341 - E370 Madison's administrations, 1809-1817|E351.5 - E364.9 War of 1812",623,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E371 - E375 Monroe's administrations, 1817-1825",75,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E376 - E380 John Quincy Adams' administration, 1825-1829",81,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E381 - E385 Jackson's administrations, 1829-1837",396,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E386 - E390 Van Buren's administration, 1837-1841",58,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E391 - E393 William H. Harrison's administration, March 4-April 4, 1841",51,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E396 - E400 Tyler's administration, April 4, 1841-1845",68,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E401 - E415.3 Mexican War, 1846-1848",369,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861",1479,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E415.6 - E415.9 General",209,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E415.6 - E415.9 General|E415.8 - E415.9 Biography",11,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E416 - E420 Polk's administration, 1845-1849",118,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E421 - E423 Taylor's administiration, 1849-July 9, 1850",37,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E426 - E430 Fillmore's administration, July 9, 1850-1853",31,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E431 - E435 Pierce's administration, 1853-1857",126,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E436 - E440.5 Buchanan's administration, 1857-1861",254,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E441 - E453 Slavery in the United States. Antislavery movements",4227,
        "E - History: America|E151 - E889 United States|E456 - E655 Civil War period, 1861-1865",12982,
        "E - History: America|E151 - E889 United States|E456 - E655 Civil War period, 1861-1865|E456 - E459 Lincoln's administrations, 1861-April 15, 1865",1956,
        "E - History: America|E151 - E889 United States|E456 - E655 Civil War period, 1861-1865|E461 - E655 The Civil War, 1861-1865",10859,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900",2354,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E660 - E664 General",419,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E660 - E664 General|E663 - E664 Biography",46,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E666 - E670 Johnson's administration, April 15, 1865-1869",540,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E671 - E680 Grant's administrations, 1869-1877",190,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century",6491,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General",4151,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General|E743 - E743.5 Political history",335,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General|E744 - E744.5 Diplomatic history. Foreign and general relations",1084,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General|E747 - E748 Biography",83,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E756 - E760 Theodore Roosevelt's administrations, September 14, 1901-1909",292,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E761 - E765 Tafts' administration, 1909-1913",41,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E766 - E783 Wilson's administrations, 1913-1921",307,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties",276,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties|E785 - E786 Harding's administration, 1921-August 2, 1923",13,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties|E791 - E796 Coolidge's administration, August 2, 1923-1929",53,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties|E801 - E805 Hoover's administration, 1919-1933",90,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E806 - E813 Franklin Delano Roosevelt's administrations, 1933-April 12, 1945",824,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E813 - E816 Truman's administrations, April 12, 1945-1953",285,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E835 - E837.7 Eisenhower's administrations, 1953-1961",276,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961",5077,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General",1176,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General|E839.5 - E839.8 Political history",270,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General|E840 - E840.3 Diplomatic history. Foreign and general relations",555,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General|E840.6 - E840.8 Biography (General)",43,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E841 - E843 Kennedy's administration, 1961-November 22, 1963",708,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E846 - E851 Johnson's administrations, November 22, 1963-1969",228,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E855 - E861 Nixon's administrations, 1969-August 9, 1974",396,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E855 - E861 Nixon's administrations, 1969-August 9, 1974|E860 - E861 Watergate Affair. Resignation",93,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E865 - E868 Ford's administration, August 9, 1974-1977",68,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E872 - E875 Carter's administration, 1977-1981",172,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E876 - E880 Reagan's administrations, 1981-1989",557,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E881 - E884 Bush administration, 1989-1993",145,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E885 - E889 Clinton administration, 1993-2001",393,
        "F - America: local history",117668,
        "F - America: local history|F1 - F975 United States local history",48075,
        "F - America: local history|F1 - F975 United States local history|F1 - F15 New England",526,
        "F - America: local history|F1 - F975 United States local history|F206 - F220 The South. South Atlantic States",1982,
        "F - America: local history|F1 - F975 United States local history|F296 - F301 Gulf States. West Florida",43,
        "F - America: local history|F1 - F975 United States local history|F476 - F485 Old Northwest. Northwest Territory",106,
        "F - America: local history|F1 - F975 United States local history|F590.3 - F596.3 The West. Trans-Mississippi Region. Great Plains",1739,
        "F - America: local history|F1 - F975 United States local history|F721 - F723 Rocky Mountains. Yellowstone National Park",98,
        "F - America: local history|F1 - F975 United States local history|F786 - F790 New Southwest. Colorado River, Canyon, and Valley",544,
        "F - America: local history|F1 - F975 United States local history|F850.5 - F851.5 Pacific States",77,
        "F - America: local history|F1001 - F1145.3 British America",4972,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada",4972,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1001 - F1035 General",2177,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1060 - F1060.97 Canadian Northwest. Northwest Territories",350,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1121 - F1139 Newfoundland and Labrador",116,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1121 - F1139 Newfoundland and Labrador|F1135 - F1139 Labrador",34,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1141 - F1145.3 Nunavut",9,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America",64287,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1201 - F1393 Mexico",9554,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1201 - F1393 Mexico|F1218.5 - F1221 Antiquities. Indians",2865,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1401 - F1419 Latin America (General)",5447,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1421 - F1440 Central America",2859,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1421 - F1440 Central America|F1435 - F1435.3 Mayas",1072,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1601 - F1629 West Indies",312,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2155 - F2191 Caribbean area. Caribbean Sea",605,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America",33668,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2201 - F2239 General",2977,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2251 - F2299 Colombia",2573,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2301 - F2349 Venezuela",4382,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2501 - F2659 Brazil",3469,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2661 - F2699 Paraguay",1397,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2701 - F2799 Uruguay",1441,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2801 - F3021 Argentina",6934,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3031 - F3031.5 Falkland Islands",160,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3051 - F3285 Chile",3229,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3301 - F3359 Bolivia",1320,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3401 - F3619 Peru",3317,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3701 - F3799 Ecuador",994,
        "G - Geography. Anthropology. Recreation",135855,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)",13697,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G100.5 - G108.5 Toponymy",350,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G149 - G180 Travel. Voyages and travels (General)",2966,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G149 - G180 Travel. Voyages and travels (General)|G154.9 - G180 Travel and state, Tourist Trade",2709,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G200 - G336 History of discoveries, explorations, and travel",722,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G369 - G503 Special voyages and travels",1436,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G521 - G539 Adventures, shipwrecks, buried treasure, etc.",714,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G540 - G550 Seafaring life, ocean travel, etc.",186,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G575 - G890 Arctic and Antarctic regions",1344,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G80 - G99 History of geography",568,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G905 - G910 Tropics (General)",10,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases",4262,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1000 - G1000.5 Atlases of the moon, planets, etc.",12,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1001 - G1046 World atlases",677,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1050 - G1052 Northern and Southern Hemispheres",7,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1054 - G1055 Polar regions",1,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1059 - G1061 Maritime atlases (General)",15,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country",3338,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1100 - G1779 America. Western Hemisphere",1400,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1100 - G1779 America. Western Hemisphere|G1100 - G1692 North America",1262,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1100 - G1779 America. Western Hemisphere|G1445 - G2739 Africa",138,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.",1806,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G1791 - G2082 Europe",754,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G2110 - G2196 Former Soviet republics. Union of Soviet Socialist Republics. Russia (Empire)",139,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G2200 - G2444.84 Asia",677,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G2740 - G2799 Australasia",29,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G2800 - G3064 Oceans (General)",120,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G3100 - G3102 Antarctica",12,
        "G - Geography. Anthropology. Recreation|G3160 - G3171 Globes",5,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps",20432,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3180 - G3182 Universe. Solar system",4,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3190 - G3192 Celestial maps",3,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3195 - G3199 Moon",31,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3200 - G3202 World maps",394,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3210 - G3222 Northern and Southern Hemispheres",8,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3260 - G3272 Polar regions",30,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country",19866,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G3290 - G5668 America. Western Hemisphere",15033,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G3290 - G5668 America. Western Hemisphere|G3300 - G5184 North America",14612,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G3290 - G5668 America. Western Hemisphere|G5200 - G5668 South America",369,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.",4432,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G5700 - G6967 Europe",1371,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G7000 - G7342 Former Soviet republics. Union of Soviet Socialist Republics.  Russia (Empire)",274,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G7400 - G8198.54 Asia",1810,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G8200 - G8904 Africa",738,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G8950 - G9084 Australasia",190,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography",1763,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography",1649,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA110 - GA115 Projection",38,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA125 - GA155 Map drawing, modeling, printing, reading, etc.",143,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA192 - GA197.3 Map libraries, collections of maps, globes, etc.",49,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA260 - GA288 Globe making, globes",9,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA300 - GA325 World maps, general atlases, etc.",87,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA341 - GA1776 Maps. By region or country",657,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA51 - GA87 Surveys (General)",34,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography",8433,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB111 - GB398.7 By region or country",460,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology",2036,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB450 - GB460 Coasts",416,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB461 - GB468.99 Reefs",30,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB471 - GB478.99 Islands",50,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB500 - GB555 Mountains. Orography",83,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB561 - GB649 Other natural landforms: floodplains, caves, deserts, dunes, etc.",858,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB5000 - GB5030 Natural disasters",351,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water",5355,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters",3429,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB1001 - GB1199.6 Groundwater. Hydrogeology",1249,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB1201 - GB1598 Rivers. Stream measurements",832,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB1601 - GB1798.9 Lakes. Limnology. Ponds. Lagoons",169,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB2401 - GB2598 Ice. Glaciers. Ice sheets. Sea ice",263,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB2601 - GB2798 Snow. Snow surveys",22,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB2801 - GB2998 Hydrometerology",21,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB980 - GB992 Watersheds. Runoff. Drainage",98,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography",3531,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC100 - GC103 Seawater",22,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC1000 - GC1023 Marine resources. Applied oceanography",247,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC1080 - GC1581 Marine pollution. Seawater pollution",198,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC109 - GC149 Chemical oceanography",104,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC150 - GC182 Physical oceanography",63,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC170 - GC190 Environmental policy",5,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC190 - GC190.5 Ocean-atmosphere interaction",56,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean",485,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC205 - GC226 Waves",183,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC228.5 - GC228.6 Ocean circulation",59,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC229 - GC296.8 Currents",78,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC297 - GC299 Water masses and ocean mixing",4,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC377 - GC399 Marine sediments",194,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC401 - GC881 Oceanography. By region",382,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC65 - GC78 Underwater exploration",61,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC70 - GC90 Environmental education",248,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC96 - GC97.8 Estuarine oceanography",102,
        "G - Geography. Anthropology. Recreation|GE1 - GE350 Environmental sciences",5035,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography",3653,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography|GF101 - GF127 Settlements",161,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography|GF500 - GF900 By region or country",1067,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography|GF53 - GF71 Environmental influences on humans",45,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology",23232,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology",11442,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN357 - GN367 Culture and cultural processes",522,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN378 - GN396 Collected dthnographies",501,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN397 - GN397.5 Applied anthropology",8,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN406 - GN517 Cultural traits, customs, and institutions",3885,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN537 - GN673 Ethnic groups and races",4036,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology",2266,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN269 - GN279 Race (General)",172,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN281 - GN289 Human evolution",841,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN51 - GN59 Anthropometry",179,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN62.8 - GN263 Human variation",454,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN700 - GN890 Prehistoric archaeology",5090,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore",10211,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject",1296,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR430 - GR487 Folklore relating to private life (including dreams, love, children, nursery rhymes, etc.)",109,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR500 - GR615 Supernatural beings, demonology, fairies, ghosts, charms, etc.",438,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR620 - GR640 Cosmic phenomena",22,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR650 - GR690 Geographical topics",19,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR700 - GR860 Animals, plants, and minerals",478,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR865 - GR874 Transportation, travel, commerce, etc.",2,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR890 - GR910 Occupations",14,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR931 - GR935 Signs and symbols",9,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR940 - GR941 Mythical places",14,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR72 - GR79 Folk literature (General)",378,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR99.6 - GR390 By region or country",7219,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)",7610,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT170 - GT476 Houses. Dwellings",139,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT2400 - GT3390.5 Customs relative to private life (including children, marriage, eating and drinking, funeral customs, etc.)",2537,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT3400 - GT5090 Customs relative to public and social life (including town life, court life, festivals, holidays, ceremonies of royalty, etc.)",1887,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT495 - GT499 Human body and its parts. Personal beauty",182,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT500 - GT2370 Costume. Dress. Fashion",2466,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5220 - GT5286 Customs relative to transportation and travel",39,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5320 - GT6737 Customs relative to special classes",128,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5320 - GT6737 Customs relative to special classes|GT5320 - GT5690 By birth, rank, etc.",3,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5320 - GT6737 Customs relative to special classes|GT5750 - GT6390 By occupation",81,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure",29523,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements",2096,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1203 - GV1218 Children's games and amusements",165,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1218.5 - GV1220.8 Toys",33,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements",1382,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1232 - GV1299 Card games: Poker, patience, whist, etc.",143,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1301 - GV1311 Gambling. Chance and banking games",54,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1312 - GV1469 Board games. Move games",346,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1469.15 - GV1469.62 Computer games. Video games. Fantasy games",753,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1470 - GV1511 Parties. Party games and stunts",180,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1470 - GV1511 Parties. Party games and stunts|GV1491 - GV1507 Puzzles",45,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1541 - GV1561 Parlor magic and tricks",122,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1564 - GV1565 Darts",1,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1580 - GV1799.4 Dancing",4004,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1800 - GV1860 Circuses, spectacles, etc. (including rodeos, waxworks, amusement parks, etc.)",519,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV181.35 - GV181.6 Recreation leadership. Administration of recreation services",161,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV182 - GV182.5 Recreational areas and facilities. Recreation centers",114,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation",1583,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV191.68 - GV198.9 Camping",131,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV198.94 - GV198.97 Dude ranches",7,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV199 - GV199.6 Hiking. Pedestrian tours",674,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV199.8 - GV200.3 Mountaineering",184,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV200.4 - GV200.5 Orienteering. Wilderness survival",11,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV200.6 - GV200.66 Caving. Spelunking",20,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training",2974,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV346 - GV351.5 School and college athletics. Intramural and interscholastic athletics",230,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV401 - GV433 Physical education facilities. Sports facilities (including gymnasiums, athletic fields, playgrounds, etc.)",259,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV435 - GV436.7 Physical measurements. Physical tests, etc.",122,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV450 - GV451.4 Nudism. Sunbathing",10,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV460 - GV555 Gymnastics. Gymnastic exercises (including calisthenics, heavy exercises, acrobatics, etc.)",683,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports",16522,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1020 - GV1038.2 Automobile travel. Motoring. Automobile racing",406,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1040 - GV1060.4 Cycling. Bicycling. Motorcycling",388,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1060.5 - GV1098 Track and field athletics",532,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1101 - GV1150.9 Fighting sports: Bullfighting, boxing, fencing, etc.",822,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1151 - GV1190 Shooting. Archery",78,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1195 - GV1198.99 Wrestling",171,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV712 - GV725 Athletic contests. Sports Events",1058,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV733 - GV734.5 Professionalism in sports. Professional sports (General)",24,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV743 - GV749 Athletic and sporting goods, supplies, etc.",27,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV750 - GV770.27 Air sports: Airplane flying, kiteflying, bungee-jumping, etc.",27,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV770.3 - GV840 Water sports: Canoeing, sailing, yachting, scuba diving, etc.",718,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV840.7 - GV857 Winter sports: Ice hockey, skiing, bobsledding, snowmobiling, etc.",439,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV861 - GV1017 Ball games: Baseball, football, golf, etc.",7385,
        "H - Social sciences",634882,
        "H - Social sciences|H1 - H99 Social sciences (General)",12981,
        "H - Social sciences|HA1 - HA4737 Statistics",7433,
        "H - Social sciences|HA1 - HA4737 Statistics|HA154 - HA4737 Statistical data",4166,
        "H - Social sciences|HA1 - HA4737 Statistics|HA154 - HA4737 Statistical data|HA154 - HA155 Universal statistics",38,
        "H - Social sciences|HA1 - HA4737 Statistics|HA154 - HA4737 Statistical data|HA175 - HA4737 By region or country",4055,
        "H - Social sciences|HA1 - HA4737 Statistics|HA29 - HA32 Theory and method of social science statistics",1895,
        "H - Social sciences|HA1 - HA4737 Statistics|HA36 - HA37 Statistical services. Statistical bureaus",40,
        "H - Social sciences|HA1 - HA4737 Statistics|HA38 - HA39 Registration of vital events. Vital records",39,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography",40062,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB131 - HB147 Methodology",2340,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB201 - HB206 Value. Utility",248,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB221 - HB236 Price",615,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB238 - HB251 Competition. Production. Wealth",253,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB3711 - HB3840 Business cycles. Economic fluctuations",2256,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB522 - HB715 Income. Factor shares",2092,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB71 - HB74 Economics as a science. Relation to other subjects",864,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB75 - HB130 History of economics",4988,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB801 - HB843 Consumption. Demand",494,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB846 - HB846.8 Welfare theory",260,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB848 - HB3697 Demography. Population. Vital events",12607,
        "H - Social sciences|HC1 - HC1085 Economic history and conditions",71400,
        "H - Social sciences|HC1 - HC1085 Economic history and conditions|HC72 - HC88 Economic growth, development, planning",6974,
        "H - Social sciences|HC1 - HC1085 Economic history and conditions|HC94 - HC1085 By region or country",57598,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor",142025,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD101 - HD1395.5 Land use",8110,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD101 - HD1395.5 Land use|HD1241 - HD1339 Land tenure",900,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD101 - HD1395.5 Land use|HD1361 - HD1395.5 Real estate business",1053,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture",12497,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1428 - HD1431 International cooperation",35,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1470 - HD1476 Size of farms",129,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1483 - HD1486 Agricultural associations, societies, etc.",99,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1491 - HD1492.5 Cooperative agriculture",682,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1493 - HD1493.5 Government owned and operated farms. State farms. Sovkhozes",44,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1501 - HD1542 Agricultural classes (including farm tenancy, agricultural laborers",1366,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1635 - HD1702 Utilization and culture of special classes of lands (including pasture lands, water resources development)",2005,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1711 - HD1741 Irrigation",68,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry",12493,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry|HD2331 - HD2336 Home labor. Home-based businesses",28,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry|HD2337 - HD2339 Sweatshops",14,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry|HD2340.8 - HD2346.5 Small and medium-sized businesses, artisans, handicrafts, trades",1523,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD28 - HD70 Management. Industrial management",31893,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class",42716,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD4861 - HD4895 Labor systems",537,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD4909 - HD5100.9 Wages",1662,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5106 - HD5267 Hours of labor (including overtime, shift work, sick leave, vacations)",448,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5306 - HD5474 Labor disputes. Strikes and lockouts",862,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5481 - HD5630.7 Industrial arbitration. Mediation and conciliation",227,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5650 - HD5660 Employee participation in management. Employee ownership. Industrial democracy. Works councils",272,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5701 - HD6000.9 Labor market. Labor supply. Labor demand (including unemployment, manpower policy, occupational training, employment agencies)",5645,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD6050 - HD6305 Classes of labor (including women, children, students, middle-aged and older persons, minorities)",5384,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD6350 - HD6940.7 Trade unions. Labor unions. Worker's associations",4316,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD6941 - HD6948 Employers' associations",6,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades",28669,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9000 - HD9495 Agricultural industries",8243,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9502 - HD9502.5 Energy industries. Energy policy. Fuel trade",2821,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9506 - HD9624 Mineral industries. Metal trade",6211,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9650 - HD9663 Chemistry industries",430,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9665 - HD9675 Pharmaceutical industry",599,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9680 - HD9714 Mechanical industries (including electric utilities, electronic industries, and machinery)",4540,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9715 - HD9717.5 Construction industry",633,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9720 - HD9975 Manufacturing industries",3908,
        "H - Social sciences|HE1 - HE9990 Transportation and communications",18695,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE1001 - HE5600 Railroads. Rapid transit systems",3004,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE199 - HE199.5 Freight (General)",178,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE305 - HE311 Urban transportation",819,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE323 - HE328 Transportation geography. Trade routes",48,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE331 - HE380 Traffic engineering. Roads and highways. Streets",2037,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE331 - HE380 Traffic engineering. Roads and highways. Streets|HE374 - HE377 Bridges",14,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE331 - HE380 Traffic engineering. Roads and highways. Streets|HE379 - HE380 Tunnels. Vehicular tunnels",1,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation",2207,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation|HE380.8 - HE560 Waterways",830,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation|HE561 - HE971 Shipping",1330,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation|HE561 - HE971 Shipping|HE730 - HE943 Merchant marine. Ocean shipping. Coastwise shipping",568,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5601 - HE5725 Automotive transportation (including trucking, bus lines, and taxicab service)",2036,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5746 - HE5749 Stage lines",5,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5751 - HE5870 Ferries",20,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5880 - HE5990 Express service",35,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE6000 - HE7500 Postal service. Stamps. Philately",690,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE8701 - HE9680.7 Telephone industry",295,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9713 - HE9715 Cellular telephone services industry. Wireless telephone",82,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9719 - HE9721 Artificial satellite telecommunications",25,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9723 - HE9737 Signaling",2,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9751 - HE9756 Messenger service",5,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9761 - HE9900 Air transportation. Airlines",840,
        "H - Social sciences|HF1 - HF6182 Commerce",59763,
        "H - Social sciences|HF1 - HF6182 Commerce|HF1021 - HF1027 Commercial geography. Economic geography",258,
        "H - Social sciences|HF1 - HF6182 Commerce|HF1040 - HF1054 Commodities. Commercial products",254,
        "H - Social sciences|HF1 - HF6182 Commerce|HF1701 - HF2701 Tariff. Free trade. Protectionism",1776,
        "H - Social sciences|HF1 - HF6182 Commerce|HF294 - HF343 Boards of trade. Chambers of commerce. Merchants' associations",169,
        "H - Social sciences|HF1 - HF6182 Commerce|HF3000 - HF4055 By region or country",4721,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business",35895,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5381 - HF5386 Vocational guidance. Career development",1698,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5387 - HF5387.5 Business ethics",876,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5410 - HF5417.5 Marketing. Disribution of products",7633,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5419 - HF5422 Wholesale trade",60,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5428 - HF5429.6 Retail trade",740,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5429.7 - HF5430.6 Shopping centers. Shopping malls",95,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5437 - HF5444 Purchasing. Selling. Sales personnel. Sales executives",1136,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5446 - HF5459 Canvassing. Peddling",17,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5460 - HF5469.5 Department stores. Mail order business. Supermarkets. Convenience stores",353,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5469.7 - HF5481 Markets. Fairs",323,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5482 - HF5482.4 Secondhand trade",15,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5482.6 - HF5482.65 Black market",6,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5484 - HF5495 Warehouses. Storage",52,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5520 - HF5541 Office equipment and supplies",15,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5546 - HF5548.6 Office management",3245,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5548.7 - HF5548.85 Industrial psychology",612,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5549 - HF5549.5 Personnel management. Employment management",2231,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5601 - HF5689 Accounting. Bookkeeping",5208,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5691 - HF5716 Business mathematics. Commercial arithmetic",247,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5717 - HF5734.7 Business communication",982,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5735 - HF5746 Business records management",183,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5761 - HF5780 Shipment of goods. Delivery of goods",116,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5801 - HF6182 Advertising",3047,
        "H - Social sciences|HG1 - HG9999 Finance",47182,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking",7535,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1621 - HG1638 Interest rates. Interest tables",173,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1641 - HG1643 Bank loans. Bank credit. Commercial loans",169,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1685 - HG1704 Drafts. Checks",24,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1706 - HG1708 Accounting. Bookkeeping",72,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1710 - HG1710.5 Electronic funds transfers",221,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1811 - HG2351 Special classes of banks and financial institutions",1487,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG2397 - HG3550 By region or country",3644,
        "H - Social sciences|HG1 - HG9999 Finance|HG201 - HG1496 Money",5692,
        "H - Social sciences|HG1 - HG9999 Finance|HG201 - HG1496 Money|HG451 - HG1496 By region or country",3024,
        "H - Social sciences|HG1 - HG9999 Finance|HG3691 - HG3769 Credit. Debt. Loans (including credit institutions, credit instruments, consumer credit, bankruptcy)",1078,
        "H - Social sciences|HG1 - HG9999 Finance|HG3810 - HG4000 Foreign exchange. International finance",10916,
        "H - Social sciences|HG1 - HG9999 Finance|HG3810 - HG4000 Foreign exchange. International finance|HG3879 - HG3898 International monetary system",6366,
        "H - Social sciences|HG1 - HG9999 Finance|HG4001 - HG4285 Finance management, Business finance. Corporation finance",3035,
        "H - Social sciences|HG1 - HG9999 Finance|HG4301 - HG4480.9 Trust services. Trust companies",71,
        "H - Social sciences|HG1 - HG9999 Finance|HG6105 - HG6270.9 Lotteries",59,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance",2855,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8053.5 - HG8054.45 Insurance for professions. Malpractice",23,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8075 - HG8107 Insurance business. Insurance management",141,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8111 - HG8123 Government policy. State supervision",20,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8205 - HG8220 Government insurance",11,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8501 - HG8745 By region or country",399,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8751 - HG9295 Life insurance",751,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9301 - HG9343 Accident insurance",10,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9371 - HG9399 Health insurance",298,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9651 - HG9899 Fire insurance",162,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9956 - HG9969 Casualty insurance",110,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9969.5 - HG9999 Other insurance (including automobile, burglary, disaster, title, etc.)",328,
        "H - Social sciences|HJ9 - HJ9940 Public finance",12228,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2005 - HJ2216 Income and expenditure. Budget",1284,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue",4346,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2321 - HJ2323 Tax incidence. Tax shifting. Tax equity",79,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2326 - HJ2327 Progressive taxation",8,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2336 - HJ2337 Tax exemption",13,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2361 - HJ3192.7 By region or country",1544,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ3801 - HJ3844 Revenue from sources other than taxation",81,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ3863 - HJ3925 Direct taxation",5,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ4113 - HJ4601 Property tax",389,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ4629 - HJ4830 Income tax",873,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ4919 - HJ4936 Capitation. Poll tax",15,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ5309 - HJ5510 Administrative fees. User charges. License fees",128,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ241 - HJ1620 By region or country",2163,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ6603 - HJ7390 Customs administration",347,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ7461 - HJ7980 Expenditures. Government spending",257,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ8001 - HJ8899 Public debts",1002,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ8001 - HJ8899 Public debts|HJ8101 - HJ8899 By region or country",785,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ9103 - HJ9695 Local finance. Municipal finance (including the revenue, budget, expenditures of counties, boroughs, municipalities, etc.)",900,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ9701 - HJ9940 Public accounting. Auditing",396,
        "H - Social sciences|HM401 - HM1281 Sociology (General)",16111,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology",4609,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology|HM1041 - HM1101 Social perception. Social cognition (including perception of the self and others, prejudices, stereotype)",255,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology|HM1106 - HM1171 Interpersonal relations. Social behavior",1485,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology|HM1176 - HM1281 Social influence. Social pressure",2170,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM435 - HM477 History of sociology. History of sociological theory",255,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM435 - HM477 History of sociology. History of sociological theory|HM461 - HM473 Schools of sociology. Schools of social thought",88,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM481 - HM554 Theory. Method. Relations to other subjects",867,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM621 - HM656 Culture",1704,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM661 - HM696 Social control",716,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM711 - HM806 Groups and organizations",2311,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM711 - HM806 Groups and organizations|HM756 - HM781 Community",242,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM711 - HM806 Groups and organizations|HM786 - HM806 Organizational sociology. Organization theory",238,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM811 - HM821 Deviant behavior. Social deviance",112,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM831 - HM901 Social change",2840,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform",25638,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform|HN30 - HN39 The church and social problems",310,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform|HN41 - HN46 Community centers. Social centers",20,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform|HN50 - HN995 By region or country",21268,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women",60757,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1073 - HQ1073.5 Thanatology. Death. Dying",216,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1075 - HQ1075.5 Sex role",793,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1088 - HQ1090.7 Men",608,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism",20714,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism|HQ1451 - HQ1870.7 By region or country",7430,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism|HQ1871 - HQ2030.7 Women's clubs",188,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life",10695,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ101 - HQ440.7 Prostitution",1510,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ19 - HQ30.7 Sexual behavior and attitudes. Sexuality",1444,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ31 - HQ64 Sex instruction and sexual ethics",1137,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ75 - HQ76.8 Homosexuality. Lesbianism",3518,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ2035 - HQ2039 Life skills. Coping skills. Everyday living skills",32,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ2042 - HQ2044 Life style",28,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ450 - HQ472 Erotica",557,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home",24446,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1001 - HQ1006 The state and marriage",6,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1051 - HQ1057 The church and marriage",16,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1058 - HQ1058.5 Widows and widowers. Widowhood",18,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1060 - HQ1064 Aged. Gerontology (Social aspects). Retirement",1396,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ750 - HQ755.5 Eugenics",266,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ755.7 - HQ759.92 Parents. Parenthood",2591,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ760 - HQ767.7 Family size",3842,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ767.8 - HQ792.2 Children. Child development (including child rearing, child care, child life)",5224,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ793 - HQ799.2 Youth. Adolescents. Teenagers",2810,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ799.5 - HQ799.9 Young men and women",430,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ799.95 - HQ799.97 Adulthood",83,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ800 - HQ800.4 Single people",130,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ801 - HQ801.83 Man-woman relationships. Courtship. Dating",407,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ809 - HQ809.3 Family violence",26,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ811 - HQ960.7 Divorce",404,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ961 - HQ967 Free love",17,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ981 - HQ996 Polygamy",46,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ998 - HQ999 Illegitimacy. Unmarried mothers",31,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.",1877,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS101 - HS330.7 Secret societies",172,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1201 - HS1350 Knights of Pythias",5,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes",367,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS1501 - HS1510 Benevolent and friendly societies and mutual assessment fraternities",30,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS1525 - HS1560 Religious socieities",20,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS1601 - HS2265 Race socieities",51,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS2301 - HS2460.7 Political and patriotic societies",246,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS2501 - HS3371 Clubs. Clubs and societies for special classes (including boys' societies, Boy Scouts, girls' societies)",427,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS351 - HS929 Freemasons",730,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS951 - HS1179 Odd Fellows",14,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races",22703,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city",15372,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT161 - HT165 Garden cities. The 'city beautiful'",61,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT165.5 - HT169.9 City planning",4707,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT170 - HT178 Urban renewal. Urban redevelopment",854,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT201 - HT221 City population (including children in cities, immigration)",57,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT251 - HT265 Mental and moral life",18,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT321 - HT325 The city as economic factor. City promotion",334,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT330 - HT334 Metropolitan areas",59,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT351 - HT352 Suburban cities and towns",86,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT361 - HT384 Urbanization. City and country",464,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT390 - HT395 Regional planning",1505,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT1501 - HT1595 Races (including race as a social group and race relations in general)",1279,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT401 - HT485 Rural groups. Rural sociology",411,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT51 - HT65 Human settlements. Communities",17,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes",4570,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT621 - HT635 Orgin of social classes",13,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT641 - HT657 Classes arising from birth",422,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT675 - HT690 Classes arising from occupation",154,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT713 - HT725 Caste system",216,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT751 - HT815 Serfdom",114,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT851 - HT1445 Slavery",2653,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT851 - HT1445 Slavery|HT1048 - HT1444 By region or country",1752,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology",70235,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV40 - HV69 Social service. Social work. Charity organization and practice (including social case work, private/public relief, institutional care, etc.)",2593,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV4961 - HV4995 Degeneration",40,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV4997 - HV5000 Substance abuse",249,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV5001 - HV5720.5 Alcoholism. Intemperance. Temperance reform",1819,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management",1970,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management|HV553 - HV639 Relief in case of disasters",1314,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management|HV553 - HV639 Relief in case of disasters|HV560 - HV583 Red Cross. Red Crescent",143,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management|HV553 - HV639 Relief in case of disasters|HV599 - HV639 Special types of disasters",476,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV5725 - HV5770 Tobacco habit",247,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV5800 - HV5840 Drug habits. Drug abuse",2449,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology",21236,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6035 - HV6197 Criminal anthropology (including criminal types, criminal psychology, prison psychology, causes of crime)",1250,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6201 - HV6249 Criminal classes",812,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6250 - HV6250.4 Victims of crimes. Victimology",347,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6251 - HV6773.55 Crimes and offenses",14571,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6774 - HV7220.5 Crimes and criminal classes",2008,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV640 - HV645 Refugee problems",1447,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV650 - HV670 Life saving",2,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV675 - HV677 Accidents. Prevention of accidents",112,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV680 - HV696 Free professional services (including medical charities)",378,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief",13264,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV3025 - HV3174 Special classes. By occupation",4,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV3025 - HV3174 Special classes. By occupation|HV3025 - HV3163 Mariners",4,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV3176 - HV3199 Special classes. By race or ethnic group",231,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4005 - HV4013 Immigrants",58,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4023 - HV4470.7 Poor in cities. Slums",650,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4480 - HV4630 Mendicancy. Vagabondism. Tramps. Homelessness",704,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4701 - HV4890.9 Protection of animals. Animal rights. Animal welfare",709,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4905 - HV5959 Animal experimentation. Anti-vivisection",99,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes",10713,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1421 - HV1441 Young Adults. Youth. Teenagers",347,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1442 - HV1448 Women",128,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1450 - HV1494 Aged",1047,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1551 - HV3024 People with disabilities (including blind, deaf, people with physical and mental disabilities)",3754,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV697 - HV700.7 Families. Mothers. Widow's pensions",688,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children",4486,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV835 - HV847 Foundlings",6,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV873 - HV887 Destitute, neglected, and abandoned children. Street children",1099,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV888 - HV907 Children with disabilities",387,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV931 - HV941 Fresh-air funds",4,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV959 - HV1420.5 Orphanages. Orphans",264,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration",16879,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7435 - HV7439 Gun control",234,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary",6185,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV7935 - HV8025 Administration and organization",930,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8031 - HV8080 Police duty. Methods of protection",1406,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8031 - HV8080 Police duty. Methods of protection|HV8079.5 - HV8079.55 Traffic control. Traffic accident investigation",19,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8081 - HV8099 Private detectives. Detective bureaus",47,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8130 - HV8280.7 By region or country",2798,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8290 - HV8291 Private security services",113,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections",8656,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections|HV9051 - HV9230.7 The juvenile offender. Juvenile delinquency. Reform schools, etc.",2041,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections|HV9261 - HV9430.7 Reformation and reclamation of adult prisoners",1033,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections|HV9441 - HV9920.7 By region or country",2490,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV9950 - HV9960 By region or country",530,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV85 - HV525 By region or country",4317,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism",14996,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX519 - HX550 Communism/socialism in relation to special topics",1366,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX626 - HX696 Communism: Utopian socialism, collective settlements",351,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX806 - HX811 Utopias. The ideal state",410,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX821 - HX970.9 Anarchism",975,
        "J - Political Science",166095,
        "J - Political Science|J1 - J981 General legislative and executive papers",1672,
        "J - Political Science|J1 - J981 General legislative and executive papers|J1 - J9 Gazettes",47,
        "J - Political Science|J1 - J981 General legislative and executive papers|J10 - J98 United States",833,
        "J - Political Science|J1 - J981 General legislative and executive papers|J10 - J98 United States|J80 - J82 Presidents' messages and other executive papers",69,
        "J - Political Science|J1 - J981 General legislative and executive papers|J100 - J981 Other regions and countries",766,
        "J - Political Science|JA1 - JA92 Political science (General)",7700,
        "J - Political Science|JA1 - JA92 Political science (General)|JA1 - JA26 Periodicals",348,
        "J - Political Science|JA1 - JA92 Political science (General)|JA27 - JA34 Societies",36,
        "J - Political Science|JA1 - JA92 Political science (General)|JA60 - JA64 Dictionaries and encyclopedias",125,
        "J - Political Science|JA1 - JA92 Political science (General)|JA71 - JA80.2 Theory. Relations to other subjects",3383,
        "J - Political Science|JA1 - JA92 Political science (General)|JA81 - JA84 History",707,
        "J - Political Science|JA1 - JA92 Political science (General)|JA86 - JA88 Study and teaching. Research",163,
        "J - Political Science|JC11 - JC607 Political theory",22675,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state",22675,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC109 - JC121 Medieval state",72,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC131 - JC273 Modern state",3403,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC311 - JC314 Nationalism. Nation state",1070,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC319 - JC323 Political geography",457,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC345 - JC347 Symbolism",21,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC348 - JC497 Forms of the state",5305,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC501 - JC607 Purpose, functions, and relations of the state",8068,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC51 - JC93 Ancient state",1242,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration",7068,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF1338 - JF2112 Public administration",3474,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF1338 - JF2112 Public administration|JF1411 - JF1521 Civil service",220,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF1338 - JF2112 Public administration|JF2011 - JF2112 Political parties",478,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government",3570,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government",824,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government|JF251 - JF289 Executive. Heads of state",120,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government|JF331 - JF341 Parliamentary government",49,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government|JF441 - JF619 Legislation. Legislative process. Law",579,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF51 - JF56 General works. History",448,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF800 - JF1177 Political rights. Political participation",1412,
        "J - Political Science|JJ1000 - JJ1019 Political institutions and public administration",11,
        "J - Political Science|JJ1000 - JJ1019 Political institutions and public administration|JJ1000 - JJ1019 North America",11,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration",50119,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States",49909,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics",2888,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics|JK1756 - JK1761 Citizenship",220,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics|JK1846 - JK1936 Suffrage",568,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics|JK1961 - JK2248 Electoral system",1296,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK2255 - JK2391 Political parties",1834,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK2403 - JK9593 State government",3510,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration",38127,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1001 - JK1443 Congress. Legislative branch",32870,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1001 - JK1443 Congress. Legislative branch|JK1154 - JK1276 Senate",222,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1001 - JK1443 Congress. Legislative branch|JK1308 - JK1443 House of Representatives",340,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1606 - JK1685 Government property, etc.",191,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK501 - JK901 Executive branch",2972,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK501 - JK901 Executive branch|JK631 - JK873 Civil Service. Departments and agencies",951,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK9663 - JK9993 Confederate States of America",210,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration",6019,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1 - JL500 Canada",692,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1200 - JL1299 Mexico",486,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1400 - JL1679 Central America",258,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1850 - JL3899 South America",3158,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL599.5 - JL839 West Indies. Caribbean Area",103,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration",19699,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1 - JN97 Europe (General)",3679,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN101 - JN1179 Great Britain",4069,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1187 - JN1371 Scotland",119,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1400 - JN1571.5 Ireland",186,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1601 - JN2191 Austria-Hungary. Austria. Hungary",249,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN2210 - JN2229 Czech Republic. Czechoslovakia",162,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN2301 - JN3007 France",1185,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN3201 - JN4980 Germany",2557,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN5001 - JN5191 Greece",43,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN5201 - JN5690 Italy",614,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN5701 - JN5999 Netherlands",76,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6101 - JN6371 Belgium",50,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6500 - JN6598 Soviet Union. Russia. Former Soviet Republics",1324,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6630 - JN6639 Ukraine",52,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6640 - JN6649 Belarus",5,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6680 - JN6689 Moldova",3,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6690 - JN6699 Russia (Federation)",548,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6730 - JN6739 Latvia",7,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6750 - JN6769 Poland",128,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7011 - JN7066 Scandinavia. Northern Europe",43,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7101 - JN7367 Denmark",23,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7370 - JN7379 Greenland",1,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7390 - JN7399 Finland",9,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7401 - JN7695 Norway",29,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7721 - JN7997 Sweden",74,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN8101 - JN8399 Spain",552,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN8423 - JN8661 Portugal",65,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN8701 - JN9599 Switzerland",88,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN9600 - JN9689 Balkan States",306,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration",10411,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia",6782,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ1070 - JQ1199 Central Asia. Including former republics of the Soviet Union",172,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ1499 - JQ1749 East Asia. Including China, Japan, Korea",3011,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ1758 - JQ1852 Middle East. Including Turkey, Iran, Israel, Arabian Peninsula",1090,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ200 - JQ620 India",1362,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1870 - JQ3981 Africa",2503,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ3995 - JQ6651 Australia. New Zealand. Pacific Ocean islands",678,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government",6395,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS141 - JS271 Municipal government and local government other than municipal",108,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS1701 - JS1800 Canada",61,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS1840 - JS2058 West Indies. Caribbean Area",22,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS2101 - JS2143 Mexico",55,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS2145 - JS2219 Central America",10,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS2300 - JS2778 South America",176,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS300 - JS1583 United States",2809,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS3000 - JS6949.8 Europe",1606,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS55 - JS67 History",26,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS6950 - JS7509 Asia",684,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS7525 - JS7819 Africa",168,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS8001 - JS8490 Australia. New Zealand. Pacific Ocean islands",36,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration",8636,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization",1806,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization|JV412 - JV461 Administration and organization",42,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization|JV500 - JV5399 Colonizing nations",1014,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization|JV61 - JV151 History",179,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration",6830,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6001 - JV6006 Periodicals. Serials",93,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6021 - JV6032 History",81,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6061 - JV6149 Emigration",117,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6201 - JV6348 Immigration",840,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6403 - JV7127 United States",1763,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV7200 - JV7539 Canada, Latin America, etc.",812,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV7590 - JV8349 Europe",1771,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV8490 - JV8758 Asia",354,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV8790 - JV9025 Africa",209,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV9029 - JV9036 Atlantic Ocean islands",4,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV9100 - JV9269 Australia. New Zealand",94,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV9290 - JV9470 Pacific Ocean islands",9,
        "J - Political Science|JZ2 - JZ6530 International relations",11509,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1249 - JZ1254 Relation to other disciplines and topics",291,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations",4830,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations|JZ1328 - JZ1395 By period",56,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations|JZ1400 - JZ1454 Diplomatic and consular service",144,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations|JZ1464 - JZ2060 By country, territory, or region",1875,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ24 - JZ38 Societies. Associations, etc.",24,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ3675 - JZ3875 State territory and its different parts",39,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ3675 - JZ3875 State territory and its different parts|JZ3686 - JZ3875 International waters",27,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations",1323,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4841 - JZ4848 Political non-governmental organizations. NGOs",193,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4850 - JZ5490 Intergovernmental organizations. IGOs",1052,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4850 - JZ5490 Intergovernmental organizations. IGOs|JZ4853 - JZ4934 The League of Nations",104,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4850 - JZ5490 Intergovernmental organizations. IGOs|JZ4935 - JZ5160 The United Nations",665,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5.5 - JZ18 Periodicals",120,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change",3307,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ5514 - JZ5526 Societies. Associations, etc.",29,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ5527 - JZ5532 Congresses and conferences",29,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ5586 - JZ6009 International security. Disarmament",1469,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ6010 - JZ6299 Pacific settlement of international disputes",166,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ63 - JZ1153 Sources",35,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ63 - JZ1153 Sources|JZ221 - JZ1153 By region or country",17,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ6360 - JZ6377 Non-military coercion",476,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ6378 - JZ6405 The armed conflict. War and order",166,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ6422 - JZ6422.5 Neutrality",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence",405305,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence",45678,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K1 - K36.5 Periodicals",11342,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K100 - K103 Legal education",101,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K109 - K110 Law societies. International bar associations",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K115 - K130 The legal profession",193,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K140 - K165 History of law",167,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K190 - K195 Ethnological jurisprudence. Primitive law",58,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law",3397,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K212 - K213 Methodology",136,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K215 - K218 History",35,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K237 - K264 The concept of law",345,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K270 - K274 Acts and events",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K280 - K286 Sources of law",42,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K288 - K296 Interpretation and construction of law. Lacunae in law",68,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K300 - K304 Classification of law. Typology",28,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory",1225,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K325 - K328 Historical jurisprudence",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K330 - K344 Positivism",116,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K366 - K380 Sociology of law. Sociological jurisprudence",436,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K400 - K474 Natural law",393,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K486 - K487 Relation of law to other topics",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K37 - K44 Bibliography",83,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K50 - K54 Dictionaries. Words and phrases",174,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law",17832,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law",1515,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1010 - K1014 The merchant. Business enterprises",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1021 - K1022 Commercial agency",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts",541,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1026 - K1045 Sale of goods",121,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1054 - K1065.5 Negotiable instruments",18,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1066 - K1089 Banking",179,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1094 - K1096 Loan of money",22,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1100 - K1109 Secured transactions",33,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1112 - K1116 Investments",103,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1130 - K1132 Carriage of goods and passengers. Carriers",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1150 - K1231 Maritime law",214,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1150 - K1231 Maritime law|K1195 - K1223 Maritime social legislation",25,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1150 - K1231 Maritime law|K1226 - K1231 Marine insurance",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1241 - K1287 Insurance",39,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1301 - K1366 Business associations",406,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1370 - K1395 Insolvency and bankruptcy. Creditors' rights",59,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1401 - K1578 Intellectual property",1395,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1401 - K1578 Intellectual property|K1411 - K1485 Copyright",372,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1401 - K1578 Intellectual property|K1500 - K1578 Industrial property",498,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation",543,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation|K1701 - K1841 Labor law",428,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation|K1861 - K1929 Social insurance",45,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation|K1960 - K1973 Public welfare. Public assistance",25,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2100 - K2385 Courts. Procedure",498,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2100 - K2385 Courts. Procedure|K2110 - K2155 Court organization and procedure",113,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2100 - K2385 Courts. Procedure|K2201 - K2385 Civil procedure",265,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2400 - K2405 Arbitration and award",525,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law",3571,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3171 - K3179 Constitutional principles",214,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3184 - K3188 Form and structure of government",30,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3224 - K3278 Individual and state",2517,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3280 - K3282 Church and state",50,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government",149,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government|K3290 - K3304 The people. Election law",45,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government|K3310 - K3329 The legislature",45,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government|K3332 - K3363 Heads of state and the central government",41,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3400 - K3431 Administrative law",103,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3400 - K3431 Administrative law|K3402 - K3417 The administrative process",52,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3400 - K3431 Administrative law|K3420 - K3431 Administrative organization",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3440 - K3460 Civil service. Government officials and employees",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3476 - K3560 Public property. Public restraint on private property",408,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3566 - K3578 Public health",71,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3581 - K3598 Environmental law",663,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3601 - K3611 Medical legislation",128,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3615 - K3622 Veterinary laws. Veterinary medicine and hygiene. Prevention of cruelty to animals",39,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3625 - K3649 Food. Drugs. Cosmetics",112,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3661 - K3674 Public safety",106,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3700 - K3705 Control of social activities",45,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3740 - K3762 Education",24,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3770 - K3795 Science and arts. Research",135,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3820 - K3836 Economic constitution, policy, planning, and development",416,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law",1442,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3842 - K3862 Trade regulations. Control of trade practices",273,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3870 - K3918 rimary production. Extractive industries",198,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3921 - K3925 Manufacturing industries",34,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3926 - K3935 Food processing industries",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3941 - K3974 Trade and commerce",265,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3978 - K3992 Public utilities",124,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K4011 - K4343 Transportation and communication",420,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K4360 - K4375 Professions and occupations",31,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4430 - K4675 Public finance",1023,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4430 - K4675 Public finance|K4453 - K4640 National revenue",881,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4430 - K4675 Public finance|K4650 - K4675 State and local finance",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4700 - K4705 Government measures in time of war, national emergency, or economic crisis",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4720 - K4780 National defense. Military law",40,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4720 - K4780 National defense. Military law|K4725 - K4734 The military establishment. Armed forces",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4720 - K4780 National defense. Military law|K4740 - K4760 Military criminal law and procedure",21,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure",1715,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure|K5015.4 - K5350 Criminal law",1224,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure|K5401 - K5570 Criminal procedure",330,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure|K5575 - K5582 Juvenile criminal law and procedure",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K524 - K525 Treaties and other international agreements",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K540 - K546 Trials",75,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K578 - K579 Concepts applying to several branches of law",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K583 - K591 Legal systems compared",147,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K592 - K597 Regional divisions. Interregional comparative law",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K600 - K615 Private law",72,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K600 - K615 Private law|K605 - K615 Unification",27,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law",1592,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K625 - K709 Persons",666,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K720 - K792 Property",205,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K795 - K798 Trusts and trustees",38,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K805 - K821 Succession upon death",29,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K830 - K968 Obligations",583,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K830 - K968 Obligations|K840 - K917 Contracts",288,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K830 - K968 Obligations|K923 - K968 Torts",238,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K68 - K70 Directories",27,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws",507,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7051 - K7054 International unification, approximation, and harmonization",22,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7060 - K7081 Choice of law",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons",69,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7125 - K7140 Natural persons",46,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7145 - K7148 Juristic persons. Associations",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7155 - K7197 Domestic relations. Family law",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7155 - K7197 Domestic relations. Family law|K7157 - K7179 Marriage. Husband and wife",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7155 - K7197 Domestic relations. Family law|K7181 - K7197 Parent and child. Guardian and ward",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7200 - K7218 Property",11,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7230 - K7245 Succession upon death",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7260 - K7338 Obligations",32,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7260 - K7338 Obligations|K7265 - K7305 Contracts",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7260 - K7338 Obligations|K7315 - K7338 Torts",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law",67,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law|K7350 - K7444 Commercial contracts",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law|K7449 - K7460 Maritime law",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law|K7485 - K7495 Business associations. Business corporations",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law|K7510 - K7512 Insolvency and bankruptcy. Creditors' rights",19,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7550 - K7582 Intellectual property",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7550 - K7582 Intellectual property|K7555 - K7557 Copyright",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7550 - K7582 Intellectual property|K7570 - K7582 Industrial property",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7585 - K7595 Social legislation",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7611 - K7688 Civil procedure. International civil procedure",83,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K85 - K89 Legal research",118,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence",84,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB162 - KB250 Legal systems compared",21,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB270 - KB280 Theory, philosophy, and science of religious law",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB1572 - KB1690 Courts and procedure",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB2101 - KB2862 Constitutions and religion. Constitutional and administrative law",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB524 - KB530 Persons",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB531 - KB619 Domestic relations. Family law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB632 - KB636.2 Inheritance and succession",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB810 - KB962.8 Obligations. Contracts and transactions",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah",159,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM1 - KBM523.72 Halakah",40,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri",118,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM1468 - KBM1547 Social laws and legislation",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM1572 - KBM1942 Courts and procedure",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM2070 - KBM2614 Constitutional law. Constitutional principles of the Jewish community",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM3098 - KBM3122 Medical legislation",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM3127 - KBM3134 Environmental law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM3790 - KBM4855 Criminal law and procedure",15,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM524.12 - KBM524.26 The concept of Jewish law",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM524.32 - KBM524.34 Methodology of law development",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM524.6 - KBM530 Persons",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM531 - KBM619 Domestic relations. Family law",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM632 - KBM636.2 Inheritance and succession",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM639 - KBM1424 Dinei mamonot",13,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh",1417,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP100 - KBP136.8 Sources",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP173.25 - KBP0.6 Islamic law and other disciplines or subjects",1164,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP42 - KBP43 Legal education. Study and teaching",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP50 - KBP69 History, development and application of Islamic law",60,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP70 - KBP75.4 Biography",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law",324,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR190 - KBR2154.5 Sources",70,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR2155 - KBR2157 Canon law and other disciplines or subjects",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR2160 - KBR2204.5 Canonical jurisprudence. Canonical science",13,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR2205 - KBR2206.3 Influence of other legal systems on Canon law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR2224 - KBR2295 Ius ecclesiasticum privatum",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR2310 - KBR3026 Constitution of the Church",61,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR27 - KBR41.7 Official acts of the Holy See",31,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3040 - KBR3070 The teaching office of the church. Magisterium. De ecclesiae munere docendi",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3077 - KBR3165 Sacraments. Administration of sacraments. De sacramentis et administratione",27,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3180 - KBR3182 Sacramentals. Sacramentalia",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3184 - KBR3256 Other acts of divine worship. De ceteris actibus Cultus Divini",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3320 - KBR3460 Church property. Church economics and finance. Administration",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3500 - KBR3774 Penal (Criminal) law. De lege poenali",26,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3780 - KBR3983 Judiciary. Ecclesiastical courts and procedure. De processibus",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR4000 - KBR4090 Church and state relationships. De relationibus inter ecclesiam et status. Ius publicum ecclesiae",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR42 - KBR54.5 Decisions of ecclesiastical tribunals and courts, and related materials",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See",422,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2 - KBU19 Bibliography",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2160 - KBU2204 Canonical jurisprudence. Theory and science of canon law",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2210 - KBU2212 The codes of canon law",15,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2215 - KBU2308 General norms and principles. De normis generalibus",22,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2310 - KBU3026 Constitution of the Church",77,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU26.8 - KBU41.5 Official acts of the Holy See",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3040 - KBU3070 The teaching office of the Church. Magisterium. De ecclesiae munere docendi",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3075 - KBU3165 Sacraments. Administration of sacraments. De sacramentis et administratione",98,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3180 - KBU3182 Sacramentals. Sacramentalia",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3184 - KBU3256 Other acts of divine worship. De ceteris actibus Cultus Divini",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3264 - KBU3280 Social work of the Church. Public welfare. Caritas",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3320 - KBU3460 Church property. Church economics and finance",18,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3500 - KBU3774 Sanctions in the Church. Criminal law. De sanctionibus in Ecclesia. De lege poenali",29,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3780 - KBU3985 Courts and procedure. De processibus",41,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU4000 - KBU4097 Church and state relationships. De relationibus inter ecclesiam et status. Ius publicum ecclesiae",53,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU4112 - KBU4820 Local Church government",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KD - Law of the United Kingdom and Ireland",14221,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KD - Law of the United Kingdom and Ireland|KD51 - KD9500 England and Wales",14216,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KDZ1 - KDZ4999 Law of America. North America",359,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KDZ1 - KDZ4999 Law of America. North America|KDZ1101 - KDZ1199 Organization of American States (OAS)",41,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KDZ1 - KDZ4999 Law of America. North America|KDZ2001 - KDZ2499.2 Bermuda",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KDZ1 - KDZ4999 Law of America. North America|KDZ3001 - KDZ3499 Greenland",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KE - Law of Canada",1909,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KE - Law of Canada|KE1 - KE9450 Federal law. Common and collective provincial law",1907,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States",260671,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF0001 - KF999",198224,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF1 - KF9827 Federal law. Common and collective state law",29,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF1000 - KF1999",13889,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF2000 - KF2999",4486,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF3000 - KF3999",10526,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF4000 - KF4999",11184,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF5000 - KF5999",4467,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF6000 - KF6999",7544,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF7000 - KF7999",1211,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF8000 - KF8999",9435,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KG1 - KG999 Latin America (General)",381,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KH1 - KH999 South America (General)",75,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KJ - Europe",221,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KJ - Europe|KJ2 - KJ1040 History of Law",212,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica",311,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient",308,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL147 - KL177 Ancient legal systems compared",27,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL190 - KL420 Sources",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL2 - KL135 General",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL2200 - KL2499 Babylonia",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL2800 - KL3099 Egypt",22,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL4110 - KL4399 Greek law",157,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL4700 - KL4999 Hittite law",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL5300 - KL5599 Persia",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL700 - KL2215 Mesopotamia. Assyro",41,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLA1 - KLA9999 Russia. Soviet Union",1423,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLB1 - KLB6499 Russia (Federation, 1992",1311,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLD1 - KLD490 Armenia (Republic)",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLE1 - KLE490 Azerbaijan",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLF1 - KLF490 Belarus (Republic)",41,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLH1 - KLH490 Georgia (Republic)",29,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLM1 - KLM490 Moldova",49,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLN1 - KLN489 Russian S.F.S.R. (to 1991)",75,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLP1 - KLP4989 Ukraine (1919-1991)",26,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLR1 - KLR490 Kazakhstan",42,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLS1 - KLS490 Kyrgyzstan",25,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLT1 - KLT490 Tadjikistan",15,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLV1 - KLV490 Turkmenistan",17,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLW1 - KLW490 Uzbekistan",44,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KM - Asia and Eurasia, Africa, Pacific Area, and Antarctica. Asia",165,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KM - Asia and Eurasia, Africa, Pacific Area, and Antarctica. Asia|KM1 - KM999 General",88,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KN - South Asia. Southeast Asia. East Asia",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KQ - Africa",19,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KQ - Africa|KQ2 - KQ197 History of law",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KQ - Africa|KQ2010 - KQ9000 Law of indigenous peoples",11,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KU1 - KU4999 Australia",603,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KUQ1 - KUQ4990 New Zealand",473,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KV - Pacific area",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KWX - Antarctica",25,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations",7833,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1165 - KZ1208 Trials",328,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1165 - KZ1208 Trials|KZ1168 - KZ1208 War crime trials",324,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1234 - KZ1236 Legal research. Legal bibliography",28,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1249 - KZ1252 International law and other disciplines",54,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1255 - KZ1273 Theory and principles",200,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1255 - KZ1273 Theory and principles|KZ1267 - KZ1273 Domain of the law of nations",76,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1284 - KZ1285.5 Methodology",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1287 - KZ1296 Codification of the law of nations",88,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1298 - KZ1304 The law of treaties. System of treaty law",120,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1319 - KZ1327 International legal regimes",17,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium",413,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium|KZ1330 - KZ1339 Peace of Westphalia to the French Revolution (1648",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium|KZ1345 - KZ1369 French Revolution to the American Civil War (1789",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium|KZ1373 - KZ1387.2 American Civil War to the First Conference of the Hague (1861-1899)",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium|KZ2064 - KZ3085 Publicists. Writers on public international law",392,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ2 - KZ5.5 Bibliography",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ24 - KZ38 Societies, etc.",38,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ24 - KZ38 Societies, etc.|KZ27 - KZ37 National",21,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3092 - KZ3405 20th century",371,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3092 - KZ3405 20th century|KZ3110 - KZ3405 Publicists. Writers on public international law",333,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3670 - KZ3881 Objects of the law of nations. Territory and its different parts",229,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members",1189,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations",1169,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4002 - KZ4080 The state",360,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4112 - KZ4820 By state",199,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs",524,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs|KZ4853 - KZ4934 The League of Nations",85,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs|KZ4935 - KZ5275 The United Nations",322,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs|KZ5330 - KZ5490 Regional organizations",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement",1185,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security",518,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes",496,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5637 - KZ5645 Conventional arms control",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5647 - KZ5686 Nuclear (Strategic) arms limitation",207,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5687 - KZ5788.5 Nuclear weapon free zones and zones of peace",21,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5834 - KZ5865 Other weapons of mass destruction",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5870 - KZ5893 Mutual and balanced reduction of armed forces",14,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ60 - KZ62.5 Intergovernmental congresses and conferences",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium",1335,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements",113,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ119 - KZ165 To 1920",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ170 - KZ173 -1920",21,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ176 - KZ182.5 Boundary treaties",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ183 - KZ183.5 Treaties of arbitration, investigation, etc.",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ184 - KZ194 Peace treaties",58,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ199 - KZ218 Judicial decisions and arbitral awards. Law reports",145,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ221 - KZ1152 By region or country",936,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes",1208,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6360 - KZ6373 Non-military coercion",140,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6374 - KZ6377 Threat of force",106,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli",894,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6427 - KZ6437 Warfare on land",44,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6440 - KZ6530 Humanitarian law",199,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6540 - KZ6660 Warfare on sea",169,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6665 - KZ6714 Air warfare",18,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6730 - KZ6785 The end of war. Armistice. Surrender. Postliminy",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea",688,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1040 - KZA1065 Intergovernmental congresses and conferences",24,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1118 - KZA1122 Treaties and other international agreements",55,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1340 - KZA1417 Concepts and principles",72,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1340 - KZA1417 Concepts and principles|KZA1348 - KZA1405 Mare liberum doctrine",59,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1430 - KZA1690 Maritime boundaries",175,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1430 - KZA1690 Maritime boundaries|KZA1630 - KZA1664 Continental shelf",31,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA3481 - KZA3900 Marine resources conservation and development",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA4130 - KZA4205 Public order of the oceans",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space",186,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD1118 - KZD1122 Treaties and other international agreements",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD1340 - KZD1400 Concepts and principles. Theory",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD1340 - KZD1400 Concepts and principles. Theory|KZD1390 - KZD1400 Regulated use theory",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD1420 - KZD1455 Boundaries",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space|KZD3489.5 - KZD3608 Space resources",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space|KZD4030 - KZD4326 Public order in space and outer space",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space|KZD4030 - KZD4326 Public order in space and outer space|KZD4080 - KZD4210 Space flight",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD5614 - KZD6715 Un-peaceful uses of outer space",11,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD5614 - KZD6715 Un-peaceful uses of outer space|KZD5648 - KZD5680.2 Disarmament and demilitarization regimes in outer space",2,
        "L - Education",124389,
        "L - Education|L7 - L991 Education (General)",2730,
        "L - Education|L7 - L991 Education (General)|L111 - L791 Official documents, reports, etc.",672,
        "L - Education|L7 - L991 Education (General)|L7 - L97 Periodicals. Societies",1432,
        "L - Education|L7 - L991 Education (General)|L797 - L898 Educational exhibitions and museums",12,
        "L - Education|L7 - L991 Education (General)|L900 - L991 Directories of educational institutions",493,
        "L - Education|LA5 - LA2396 History of education",13391,
        "L - Education|LA5 - LA2396 History of education|LA173 - LA186 Higher education",176,
        "L - Education|LA5 - LA2396 History of education|LA201 - LA398 United States",4110,
        "L - Education|LA5 - LA2396 History of education|LA2301 - LA2396 Biography",1015,
        "L - Education|LA5 - LA2396 History of education|LA31 - LA135 By period",480,
        "L - Education|LA5 - LA2396 History of education|LA410 - LA2284 Other regions or countries",7284,
        "L - Education|LA5 - LA2396 History of education|LA5 - LA25 General",260,
        "L - Education|LB5 - LB3640 Theory and practice of education",64760,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1025 - LB1050.75 Teaching (Principles and practice)",14354,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1025 - LB1050.75 Teaching (Principles and practice)|LB1049.9 - LB1050.75 Reading (General)",1817,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1050.9 - LB1091 Educational psychology",3275,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1101 - LB1139 Child study",1190,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1139.2 - LB1139.5 Early childhood education",1037,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1140 - LB1140.5 Preschool education. Nursery schools",630,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1141 - LB1489 Kindergarten",195,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1501 - LB1547 Primary education",659,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1555 - LB1602 Elementary or public school education",6146,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1603 - LB1696.6 Secondary education. High schools",1943,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators",4668,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1771 - LB1773 Certification of teachers",76,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1775 - LB1785 Professional aspects of teaching and school administrators. Vocational guidance",1141,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1805 - LB2151 State teachers colleges",494,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1805 - LB2151 State teachers colleges|LB1811 - LB1987 United States",428,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1805 - LB2151 State teachers colleges|LB1991 - LB2151 Other regions or countries",65,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB2165 - LB2278 Teacher training in universities and colleges",278,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education",10288,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2326.4 - LB2330 Institutions of higher education",656,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2331.7 - LB2335.8 Teaching personnel",853,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2335.86 - LB2335.88 Trade unions",16,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2335.95 - LB2337 Endowments, trusts, etc.",108,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2337.2 - LB2340.8 Student financial aid",426,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2341 - LB2341.95 Supervision and administration. Business management",1102,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2351 - LB2359 Admissions and entrance requirements",385,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2361 - LB2365 Curriculum",306,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2366 - LB2367.75 College examinations",86,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2371 - LB2372 Graduate education",238,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2381 - LB2391 Academic degrees",214,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2799 - LB2799.3 Educational consultants and consulting",19,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization",13306,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB2831.6 - LB2831.99 Administrative personnel",715,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB2832 - LB2844.1 Teaching personnel",1014,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB2844.52 - LB2844.63 Trade unions",95,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB3011 - LB3095 School management and discipline",4054,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB3011 - LB3095 School management and discipline|LB3045 - LB3048 Textbooks",130,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB3011 - LB3095 School management and discipline|LB3050 - LB3060.87 Educational tests, measurements, evaluations and examinations",1620,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3201 - LB3325 School architecture and equipment. School physical facilities. Campus planning",489,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3497 - LB3499 Hygiene in universities and colleges",23,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3525 - LB3575 Special days",16,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3602 - LB3640 School life. Student manners and customs",589,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB5 - LB45 General",2557,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB51 - LB885 Systems of individual educators and writers",1843,
        "L - Education|LC8 - LC6691 Special aspects of education",30114,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1200 - LC1203 Inclusive education",369,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons",11342,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC1401 - LC2572 Women",1002,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2574 - LC2576 Gays. Lesbians. Bisexuals",55,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2580 - LC2582 Student",13,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2601 - LC2611 Education in developing countries",176,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2630 - LC2638 Asian Americans. Asians in the United States",54,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2667 - LC2698 Latin Americans. Hispanic Americans",321,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2667 - LC2698 Latin Americans. Hispanic Americans|LC2680 - LC2688 Mexican Americans. Mexicans in the United States",86,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2667 - LC2698 Latin Americans. Hispanic Americans|LC2690 - LC2698 Puerto Ricans. Puerto Ricans in the United States",8,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2699 - LC2913 Blacks. African Americans",1400,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3001 - LC3501 Asians",145,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3503 - LC3520 Romanies. Gypsies",23,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3530 - LC3540 Lapps",4,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3551 - LC3593 Jews",13,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3701 - LC3740 Immigrants or ethnic and linguistic minorities. Bilingual schools and bilingual education",1333,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3745 - LC3747 Children of immigrants (First generation)",78,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3950 - LC4806.5 Exceptional children and youth. Special education",5371,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3950 - LC4806.5 Exceptional children and youth. Special education|LC3991 - LC4000 Gifted children and youth",712,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3950 - LC4806.5 Exceptional children and youth. Special education|LC4001 - LC4806.5 Children and youth with disabilities. Learning disabled children and youth",3791,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education",1620,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC251 - LC318 Moral education. Character building",547,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control",1073,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education",773,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education|LC446 - LC454 Orthodox Eastern Church",1,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education|LC461 - LC510 Roman Catholic",395,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education|LC531 - LC629 Protestant",119,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC701 - LC775 Jewish education",71,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC901 - LC915 Islamic education",197,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5161 - LC5163 Fundamental education",5,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education",2520,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5451 - LC5493 Aged education",25,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5501 - LC5560 Evening schools",20,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5701 - LC5771 Vacation schools. Summer schools",40,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5800 - LC5808 Distance education",352,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5900 - LC6101 Correspondence schools",42,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6201 - LC6401 University extension",233,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6501 - LC6560.4 Lyceums and lecture courses. Forums",105,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6571 - LC6581 Radio and television extension courses. Instruction by radio and television",19,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6601 - LC6660.4 Reading circles and correspondence clubs",52,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education",9743,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC129 - LC139 Compulsory education",66,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC142 - LC148.5 Attendance. Dropouts",377,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC149 - LC161 Literacy. Illiteracy",992,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC165 - LC182 Higher education and the state",369,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology",4378,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology|LC212 - LC212.86 Discrimination in education",719,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology|LC212.9 - LC212.93 Sex differences in education",120,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology|LC213 - LC214.53 Educational equalization. Right to education",986,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school",918,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school|LC225 - LC226.7 Home and school",283,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school|LC230 - LC235 Parent-teacher associations. Home and school associations",29,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school|LC237 - LC238.4 College-university and the community",137,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC241 - LC245 Foundations, endowments, funds",51,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC65 - LC67.68 Economic aspects of education",525,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC68 - LC70 Demographic aspects of education",20,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC71 - LC120.4 Education and the state",1930,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC71 - LC120.4 Education and the state|LC107 - LC120.4 Public school question. Secularization. Religious instruction in the public schools",213,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC71 - LC120.4 Education and the state|LC72 - LC72.5 Academic freedom",135,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education",592,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC25 - LC33 Self-education. Self-culture",60,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC37 - LC44.3 Home education",168,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC45 - LC45.8 Nonformal education",64,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC47 - LC58.7 Private school education",149,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC47 - LC58.7 Private school education|LC58 - LC58.7 Preparatory schools. Preparatory school education",14,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education",3569,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1001 - LC1024 Humanistic education. liberal education",399,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1001 - LC1024 Humanistic education. liberal education|LC1022 - LC1022.25 Computer-assisted education",2,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1025 - LC1027 Collective education",2,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1031 - LC1034.5 Competency based education",112,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1035 - LC1035.8 Basic education. Basic skills education",33,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1036 - LC1036.8 Community education",25,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1037 - LC1037.8 Career education",127,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1041 - LC1048 Vocational education (General)",693,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1049 - LC1049.8 Cooperative education",25,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1051 - LC1072 Professional education",113,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1081 - LC1087.4 Industrial education (General)",238,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1090 - LC1091 Political education",298,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1099 - LC1099.5 Multicultural education (General)",887,
        "L - Education|LD13 - LD7501 Individual institutions",3553,
        "L - Education|LD13 - LD7501 Individual institutions|LD13 - LD7501 United States",3553,
        "L - Education|LD13 - LD7501 Individual institutions|LD13 - LD7501 United States|LD13 - LD7251 Universities. Colleges",3419,
        "L - Education|LD13 - LD7501 Individual institutions|LD13 - LD7501 United States|LD13 - LD7251 Universities. Colleges|LD7020 - LD7251 Women's colleges",90,
        "L - Education|LE3 - LE78 Individual institutions",616,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)",616,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE11 - LE13 Central America",27,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE15 - LE17 West Indies",59,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America",339,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE21 - LE23 Argentina",100,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE27 - LE29 Bolivia",2,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE31 - LE33 Brazil",18,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE36 - LE38 Chile",34,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE41 - LE43 Colombia",22,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE46 - LE48 Ecuador",9,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE61 - LE63 Paraguay",9,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE66 - LE68 Peru",36,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE71 - LE73 Uruguay",17,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE76 - LE78 Venezuela",87,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE3 - LE5 Canada",77,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE7 - LE9 Mexico",104,
        "L - Education|LF14 - LF5627 Individual institutions",2348,
        "L - Education|LF14 - LF5627 Individual institutions|LF1341 - LF1537 Austria",85,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain",1025,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF1140 - LF1257 Wales",5,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF14 - LF797 England",929,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF800 - LF957 Ireland",33,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF960 - LF1137 Scotland",34,
        "L - Education|LF14 - LF5627 Individual institutions|LF1541 - LF1549 Czech Republic",53,
        "L - Education|LF14 - LF5627 Individual institutions|LF1550 - LF1550.8 Slovakia",3,
        "L - Education|LF14 - LF5627 Individual institutions|LF1561 - LF1697 Hungary",14,
        "L - Education|LF14 - LF5627 Individual institutions|LF1705 - LF1709 Finland",1,
        "L - Education|LF14 - LF5627 Individual institutions|LF1711 - LF2397 France",93,
        "L - Education|LF14 - LF5627 Individual institutions|LF2402 - LF3197 Germany",390,
        "L - Education|LF14 - LF5627 Individual institutions|LF3211 - LF3247 Greece",7,
        "L - Education|LF14 - LF5627 Individual institutions|LF3248 - LF3897 Italy",93,
        "L - Education|LF14 - LF5627 Individual institutions|LF3911 - LF4067 Belgium",17,
        "L - Education|LF14 - LF5627 Individual institutions|LF4071 - LF4197 Netherlands",17,
        "L - Education|LF14 - LF5627 Individual institutions|LF4203 - LF4209 Poland",34,
        "L - Education|LF14 - LF5627 Individual institutions|LF4251 - LF4437 Russia (Federation)",269,
        "L - Education|LF14 - LF5627 Individual institutions|LF4440 - LF4441 Estonia",14,
        "L - Education|LF14 - LF5627 Individual institutions|LF4445 - LF4446 Lithuania",4,
        "L - Education|LF14 - LF5627 Individual institutions|LF4449.2 - LF4449.5 Ukraine",13,
        "L - Education|LF14 - LF5627 Individual institutions|LF4451 - LF4487 Denmark",3,
        "L - Education|LF14 - LF5627 Individual institutions|LF4493 - LF4537 Norway",1,
        "L - Education|LF14 - LF5627 Individual institutions|LF4539 - LF4607 Sweden",15,
        "L - Education|LF14 - LF5627 Individual institutions|LF4610 - LF4827 Spain",85,
        "L - Education|LF14 - LF5627 Individual institutions|LF4831 - LF4887 Portugal",23,
        "L - Education|LF14 - LF5627 Individual institutions|LF4901 - LF5047 Switzerland",21,
        "L - Education|LF14 - LF5627 Individual institutions|LF5051 - LF5627 Turkey and the Baltic states",34,
        "L - Education|LG21 - LG961 Individual institutions",553,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia",418,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG171 - LG172 Indochina",3,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG181 - LG184 Indonesia",2,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG200 - LG227 Philippines",9,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG240 - LG277 Japan",21,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG281 - LG285 Korea",4,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG302.2 - LG320 Former Soviet republics in Asia",6,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG341 - LG345 Israel. Palestine",9,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG351 - LG357 Lebanon",10,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG361 - LG367 Syria",1,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG51 - LG53 China",251,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG55 - LG57 Taiwan",31,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG60 - LG170.2 India. Pakistan. Bangladesh. Burma. Sri Lanka. Nepal",30,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa",97,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG405 - LG411 South Africa",4,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG421 - LG423 Uganda",7,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG431 - LG438 Natal",2,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG461 - LG462 Zimbabwe",1,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG471 - LG475 Transvaal",5,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG481 - LG505 West Africa",17,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG481 - LG505 West Africa|LG481 - LG483 Nigeria",10,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG541 - LG543 Madagascar",1,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG545 - LG547 Rwanda",1,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG551 - LG552 Senegal",5,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG553 - LG554 Benin",5,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG559 - LG560 Ivory Coast",1,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG581 - LG593 German Africa (Former)",4,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG631 - LG632 Morocco",1,
        "L - Education|LG21 - LG961 Individual institutions|LG715 - LG720 Australia",17,
        "L - Education|LG21 - LG961 Individual institutions|LG741 - LG745 New Zealand",4,
        "L - Education|LH1 - LH9 College and school magazines and papers",239,
        "L - Education|LJ3 - LJ165 Student fraternities and societies, United States",174,
        "L - Education|LT6 - LT501 Textbooks",50,
        "M - Music",205469,
        "M - Music|M1 - M5000 Music",124297,
        "M - Music|M1 - M5000 Music|M1 - M2.3 Collections",5140,
        "M - Music|M1 - M5000 Music|M1 - M2.3 Collections|M2 - M2.3 Collections of musical sources",4681,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music",52729,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music",36613,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1500 - M1527.8 Dramatic music",7845,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1528 - M1529.5 Duets, trios, etc., for solo voices",654,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1530 - M1546.5 Choruses with orchestra or other ensemble",1148,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1547 - M1600 Choruses, part-songs, etc., with accompaniment of keyboard or other solo instrument, or unaccompanied",3475,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1611 - M1624.8 Songs",7673,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1625 - M1626 Recitations with music",202,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1627 - M1853 National music",13774,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1900 - M1978 Songs (part and solo) of special character",627,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1990 - M1998 Secular music for children",380,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music",15921,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2000 - M2007 Oratorios",718,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2010 - M2017.6 Services",2111,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2018 - M2019.5 Duets, trios, etc. for solo voices",331,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2020 - M2036 Choruses, cantatas, etc.",2721,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2060 - M2101.5 Choruses, part-songs, etc., with accompaniment of keyboard or other solo instrument, or unaccompanied",6500,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2102 - M2114.8 Songs",1024,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2115 - M2146 Hymnals. Hymn collections",770,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual",361,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2147 - M2155.6 Roman Catholic Church",274,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2156 - M2160.87 Orthodox churches",28,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2161 - M2183 Protestant churches",24,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2186 - M2187 Jewish",20,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2190 - M2196 Sacred vocal music for children",102,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2198 - M2199 Gospel, revival, temperance, etc. songs M5000 Unidentified compositions",784,
        "M - Music|M1 - M5000 Music|M3 - M3.3 Collected works of individual composers",3591,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music",64307,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1000 - M1075 Orchestra",13153,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1100 - M1160 String orchestra",2735,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1200 - M1269 Band",611,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1350 - M1353 Reduced orchestra",19,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1356 - M1356.2 Dance orchestra and instrumental ensembles",299,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1375 - M1420 Instrumental music for children",251,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M6 - M175.5 Solo instruments",17547,
        "M - Music|ML1 - ML3930 Literature on music",66340,
        "M - Music|ML1 - ML3930 Literature on music|ML100 - ML109 Dictionaries. Encyclopedias",1311,
        "M - Music|ML1 - ML3930 Literature on music|ML110 - ML111.5 Music librarianship",194,
        "M - Music|ML1 - ML3930 Literature on music|ML112 - ML112.5 Music printing and publishing",121,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography",5125,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography|ML113 - ML118 International",234,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography|ML136 - ML158 Catalogs. Discography",2109,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography|ML158.4 - ML158.6 Video recordings",4,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism",44209,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music",4439,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music|ML1499 - ML1554 Choral music",103,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music|ML1600 - ML2881 Secular vocal music",2588,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music|ML2900 - ML3275 Sacred vocal music",1557,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods",1412,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods|ML162 - ML169 Ancient",134,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods|ML169.8 - ML190 Medieval. Renaissance",849,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods|ML193 - ML197 -1601",314,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country",3835,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country|ML198 - ML239 America",752,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country|ML240 - ML325 Europe",2177,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country|ML330 - ML345 Asia",644,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3300 - ML3354 Program music",15,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3400 - ML3465 Dance music",75,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3469 - ML3541 Popular music",4174,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3544 - ML3775 National music",2960,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML385 - ML429 Biography",22127,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML430 - ML455 Composition",353,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music",3314,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML1100 - ML1165 Chamber music",127,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML1200 - ML1270 Orchestra",287,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML1299 - ML1354 Band",123,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML465 - ML471 By period",40,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country",228,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country|ML475 - ML486 America",31,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country|ML489 - ML522 Europe",75,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country|ML525 - ML541 Asia",70,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments",2182,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML1030 - ML1049 Percussion instruments",159,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML1049.8 - ML1091 Mechanical and other instruments",135,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML1091.8 - ML1093 Electronic instruments",80,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML549.8 - ML649 Organ",404,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML649.8 - ML747 Piano, clavichord, harpsichord, etc.",371,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML749.5 - ML927 Bowed string instruments",250,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML929 - ML990 Wind instruments",307,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML999 - ML1015 Plucked instruments",81,
        "M - Music|ML1 - ML3930 Literature on music|ML25 - ML28 Societies and organizations",190,
        "M - Music|ML1 - ML3930 Literature on music|ML32 - ML33 Institutions",11,
        "M - Music|ML1 - ML3930 Literature on music|ML35 - ML38 Festivals. Congresses",164,
        "M - Music|ML1 - ML3930 Literature on music|ML3800 - ML3923 Philosophy and physics of music",4335,
        "M - Music|ML1 - ML3930 Literature on music|ML3800 - ML3923 Philosophy and physics of music|ML3845 - ML3877 Aesthetics",1005,
        "M - Music|ML1 - ML3930 Literature on music|ML3800 - ML3923 Philosophy and physics of music|ML3880 - ML3915 Criticism",65,
        "M - Music|ML1 - ML3930 Literature on music|ML3928 - ML3930 Literature for children",24,
        "M - Music|ML1 - ML3930 Literature on music|ML40 - ML44 Programs",52,
        "M - Music|ML1 - ML3930 Literature on music|ML47 - ML54.8 Librettos. Scenarios",4322,
        "M - Music|ML1 - ML3930 Literature on music|ML62 - ML90 Special aspects. Including writings of musicians",1212,
        "M - Music|ML1 - ML3930 Literature on music|ML93 - ML96.5 Manuscripts, autographs, etc.",306,
        "M - Music|MT1 - MT960 Musical instruction and study",9475,
        "M - Music|MT1 - MT960 Musical instruction and study|MT1 - MT5 History and criticism",961,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques",2776,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT180 - MT198 Organ",92,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT200 - MT208 Reed organ",3,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT220 - MT255 Piano",594,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments",397,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT260 - MT279.7 Violin",190,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT280 - MT298 Viola",40,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT300 - MT318 Violoncello",84,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT320 - MT334 Double bass",45,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments",679,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT340 - MT359 Flute",241,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT360 - MT379 Oboe",34,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT380 - MT392 Clarinet (A, Bb, C, Eb, etc.)",59,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT400 - MT415 Bassoon",29,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments",517,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT540 - MT557 Harp",16,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT560 - MT570 Banjo",59,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT580 - MT599 Guitar",351,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT600 - MT612 Mandolin",14,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT620 - MT634 Zither",4,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT640 - MT654 Lute, balalaika, etc.",45,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT655 - MT725 Percussion and other instruments",253,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT728 - MT728.3 Chamber music",14,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT733 - MT733.6 Band",59,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT740 - MT810 Instrumental techniques for children",58,
        "M - Music|MT1 - MT960 Musical instruction and study|MT20 - MT32 Special methods",21,
        "M - Music|MT1 - MT960 Musical instruction and study|MT40 - MT67 Composition. Elements and techniques of music",906,
        "M - Music|MT1 - MT960 Musical instruction and study|MT40 - MT67 Composition. Elements and techniques of music|MT58 - MT67 Forms",151,
        "M - Music|MT1 - MT960 Musical instruction and study|MT5.5 - MT7 Music theory",900,
        "M - Music|MT1 - MT960 Musical instruction and study|MT70 - MT74 Instrumentation and orchestration",106,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique",659,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique|MT825 - MT850 Systems and methods",67,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique|MT855 - MT883 Special techniques",200,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique|MT898 - MT915 Techniques for children",9,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works",1542,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT110 - MT115 Oratorios, cantatas, etc.",20,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT125 - MT130 Orchestral music",72,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT140 - MT145 Chamber and solo instrumental music",55,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT95 - MT100 Opera, ballet, etc.",124,
        "M - Music|MT1 - MT960 Musical instruction and study|MT918 - MT948 School music",95,
        "M - Music|MT1 - MT960 Musical instruction and study|MT955 - MT956 Musical theater",77,
        "N - Fine Arts",158659,
        "N - Fine Arts|N1 - N9211 Visual arts",55095,
        "N - Fine Arts|N1 - N9211 Visual arts|N1 - N58 General",1723,
        "N - Fine Arts|N1 - N9211 Visual arts|N400 - N3990 Art museums, galleries, etc.",3969,
        "N - Fine Arts|N1 - N9211 Visual arts|N4390 - N5098 Exhibitions",702,
        "N - Fine Arts|N1 - N9211 Visual arts|N5198 - N5299 Private collections and collectors",923,
        "N - Fine Arts|N1 - N9211 Visual arts|N5300 - N7418 History",32735,
        "N - Fine Arts|N1 - N9211 Visual arts|N61 - N72 Theory. Philosophy. Aesthetics of the visual arts",1049,
        "N - Fine Arts|N1 - N9211 Visual arts|N7420 - N7525.8 General works",4206,
        "N - Fine Arts|N1 - N9211 Visual arts|N7560 - N8266 Special subjects of art",5562,
        "N - Fine Arts|N1 - N9211 Visual arts|N81 - N390 Study and teaching. Research",941,
        "N - Fine Arts|N1 - N9211 Visual arts|N8350 - N8356 Art as a profession. Artists",205,
        "N - Fine Arts|N1 - N9211 Visual arts|N8510 - N8553 Art studios, materials, etc.",102,
        "N - Fine Arts|N1 - N9211 Visual arts|N8554 - N8585 Examination and conservation of works of art",185,
        "N - Fine Arts|N1 - N9211 Visual arts|N8600 - N8675 Economics of art",690,
        "N - Fine Arts|N1 - N9211 Visual arts|N8700 - N9165 Art and the state. Public art",486,
        "N - Fine Arts|NA1 - NA9428 Architecture",25769,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA1 - NA60 General",418,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA100 - NA130 Architecture and the state",276,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA190 - NA1555.5 History",9838,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2000 - NA2320 Study and teaching. Research",126,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2335 - NA2360 Competitions",37,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2400 - NA2460 Museums. Exhibitions",26,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2500 - NA2599 General works",1778,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2599.5 - NA2599.9 Architectural criticism",53,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2695 - NA2793 Architectural drawing and design",815,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2835 - NA4050 Details and decoration",866,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings",8166,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4100 - NA4145 Classed by material",75,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4150 - NA4160 Classed by form",11,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use",8067,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA4170 - NA7020 Public buildings",5026,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA4170 - NA7020 Public buildings|NA4590 - NA5621 Religious architecture",2412,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA7100 - NA7884 Domestic architecture. Houses. Dwellings",2802,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA7910 - NA8125 Clubhouses, guild houses, etc.",9,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA8200 - NA8260 Farm architecture",126,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA8300 - NA8480 Outbuildings, gates, fences, etc.",104,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA9000 - NA9428 Aesthetics of cities. City planning and beautifying",2943,
        "N - Fine Arts|NB1 - NB1952 Sculpture",8673,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1 - NB50 General",129,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1120 - NB1133 Study and teaching",1,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1134 - NB1134.4 Competitions",1,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1135 - NB1150 General works",63,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1160 - NB1195 Designs and technique",54,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1199 - NB1200 Restoration of sculptures",11,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1203 - NB1270 Special materials",282,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1272 - NB1291 Mobiles, color, sculpture gardens, etc.",149,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms",548,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1293 - NB1310 Portrait sculpture",122,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1312 - NB1313 Equestrian statues",4,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1330 - NB1685 Sculptural monuments",95,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1750 - NB1793 Religious monuments and shrines",2,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1800 - NB1880 Sepulchral monuments",267,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1910 - NB1952 Special subjects",313,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB60 - NB1115 History. Including collective biography",7105,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration",9046,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1 - NC45 General. Including collective biography",358,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1280 - NC1284 Printed ephemera. Imagerie populaire",15,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1300 - NC1766 Pictorial humor, caricature, etc.",1717,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1800 - NC1850 Posters",233,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1860 - NC1896 Greeting cards, postcards, invitations, book jackets, etc.",160,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC390 - NC670 Study and teaching",48,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC50 - NC266 History of drawing",3077,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC673 - NC677 Competitions",1,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC703 - NC725 General works",97,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC730 - NC758 Technique",213,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC760 - NC825 Special subjects",186,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC845 - NC915 Graphic art materials",120,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC950 - NC996 Illustration",855,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC997 - NC1003 Commercial art. Advertising art",590,
        "N - Fine Arts|ND25 - ND3416 Painting",32949,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1115 - ND1120 Study and teaching",3,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1130 - ND1156 General works",335,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects",1917,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1290 - ND1293 Human figure",21,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1300 - ND1337 Portraits",636,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1340 - ND1367 Landscape painting",479,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1370 - ND1375 Marine painting",37,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1380 - ND1383 Animals. Birds",9,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1385 - ND1388 Sports. Hunting, fishing, etc.",1,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1390 - ND1393 Still life",53,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1400 - ND1403 Flowers. Fruit. Trees",18,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1410 - ND1460 Other subjects",367,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1470 - ND1625 Technique and materials",246,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1630 - ND1662 Examination and conservation of paintings",78,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1700 - ND2495 Watercolor painting",1018,
        "N - Fine Arts|ND25 - ND3416 Painting|ND25 - ND48 General",102,
        "N - Fine Arts|ND25 - ND3416 Painting|ND2550 - ND2733 Mural painting",382,
        "N - Fine Arts|ND25 - ND3416 Painting|ND2889 - ND3416 Illuminating of manuscripts and books",1739,
        "N - Fine Arts|ND25 - ND3416 Painting|ND49 - ND813 History",22083,
        "N - Fine Arts|NE1 - NE3002 Print media",5217,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving",3004,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE1 - NE90 General",251,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE218 - NE330 Engraved portraits. Self",30,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE390 - NE395 Collected works",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE400 - NE773 History of printmaking",2305,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE830 - NE898 General works",151,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE951 - NE962 Special subjects",73,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE965 - NE965.3 Tradesmen's cards",3,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE975 - NE975.4 Competitions",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving",1018,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1000 - NE1027 General",12,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1030 - NE1196.3 History",421,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1220 - NE1233 General works",23,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1310 - NE1326.5 Japanese prints",299,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1330 - NE1336 Linoleum block prints",11,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1350 - NE1352 Other materials used in relief printing",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving",112,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving|NE1400 - NE1422 General",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving|NE1620 - NE1630 General works",5,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving|NE1634 - NE1749 History",29,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving|NE1750 - NE1775 Copper engraving",6,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving|NE1850 - NE1879 Color prints",36,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint",617,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE1940 - NE1975 General",7,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE1980 - NE2055.5 History",346,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE2120 - NE2140 General works",30,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE2141 - NE2149 Special subjects",4,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2236 - NE2240.6 Serigraphy",41,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2242 - NE2246 Monotype (Printmaking)",9,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2250 - NE2570 Lithography",396,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2685 - NE2685.8 Lumiprints",1,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2800 - NE2880 Printing of engravings",9,
        "N - Fine Arts|NE1 - NE3002 Print media|NE3000 - NE3002 Copying art. Copying machine art",3,
        "N - Fine Arts|NK1 - NK9990 Decorative arts",14340,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1 - NK570 General",316,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1135 - NK1149.5 Arts and crafts movement",73,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design",1182,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1160 - NK1174 General",79,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1175 - NK1498 History",629,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1505 - NK1535 General works",343,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1548 - NK1590 Special subjects for design",71,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1648 - NK1678 Religious art",110,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1700 - NK2195 Interior decoration. House decoration",472,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1700 - NK2195 Interior decoration. House decoration|NK1700 - NK2138 General. History, etc.  Including special rooms",454,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1700 - NK2195 Interior decoration. House decoration|NK2190 - NK2192 Church decoration",7,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK2200 - NK2750 Furniture",749,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK2775 - NK2898 Rugs and carpets",177,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK2975 - NK3049 Tapestries",92,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3175 - NK3296.3 Upholstery. Drapery",7,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3375 - NK3496.3 Wallpapers",31,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries",9149,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK3700 - NK4695 Ceramics",3289,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK4700 - NK4890 Costume",80,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK5100 - NK5440 Glass",892,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK5500 - NK6060 Glyptic arts",443,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK6400 - NK8459 Metalwork",1702,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK8800 - NK9505.5 Textiles",1081,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK9600 - NK9955 Woodwork",306,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK600 - NK806 History",343,
        "N - Fine Arts|NX1 - NX820 Arts in general",7352,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX1 - NX260 General",2217,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX280 - NX410 Study and teaching. Research",237,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX420 - NX430 Exhibitions",24,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX440 - NX632 History of the arts",3512,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX650 - NX694 Special subjects, characters, persons, religious arts, etc.",850,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX700 - NX750 Patronage of the arts",228,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX760 - NX770 Administration of the arts",60,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX798 - NX820 Arts centers and facilities",14,
        "P - Language and literature",1184172,
        "P - Language and literature|P1 - P1091 Philology. Linguistics",42433,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P1 - P85 General",8722,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar",21000,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P118 - P118.75 Language acquisition",1516,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P121 - P149 Science of language (Linguistics)",3144,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P201 - P299 Comparative grammar",4002,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P301 - P301.5 Style. Composition. Rhetoric",418,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P302 - P302.87 Discourse analysis",1533,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P306 - P310 Translating and interpreting",1538,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P321 - P324.5 Etymology",190,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P325 - P325.5 Semantics",736,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P326 - P326.5 Lexicology",110,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P327 - P327.5 Lexicography",174,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P375 - P381 Linguistic geography",172,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P501 - P769 Indo-European (Indo-Germanic) philology",549,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P87 - P96 Communication. Mass media",6850,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P87 - P96 Communication. Mass media|P95 - P95.6 Oral communication. Speech",723,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P901 - P1091 Extinct ancient or medieval languages",629,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P98 - P98.5 Computational linguistics. Natural language processing",487,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P99 - P99.4 Semiotics. Signs and symbols",694,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P99.5 - P99.6 Nonverbal communication",72,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature",33470,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA1 - PA199 Classical philology",2287,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA1000 - PA1179 Medieval and modern Greek language",265,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA2001 - PA2915 Latin philology and language",2114,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA201 - PA899 Greek philology and language",1263,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3000 - PA3049 Classical literature",1349,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature",11786,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3051 - PA3285 Literary history",1695,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3300 - PA3516 Collections",868,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3520 - PA3564 Criticism, interpretation, etc.",98,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3601 - PA3681 Translations",623,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3818 - PA4505 Individual authors",8617,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA5000 - PA5660 Byzantine and modern Greek literature",984,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA5000 - PA5660 Byzantine and modern Greek literature|PA5301 - PA5637 Individual authors",694,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature",10982,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6001 - PA6095.5 Literary history",1080,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6101 - PA6140 Collections",446,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6141 - PA6144 Criticism, interpretation, etc.",52,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6155 - PA6191 Translations",342,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6202 - PA6971 Individual authors",9097,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA8001 - PA8595 Medieval and modern Latin literature",2639,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA8001 - PA8595 Medieval and modern Latin literature|PA8200 - PA8595 Individual authors",1963,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages",2979,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1 - PB431 Modern languages",1218,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature",1760,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1101 - PB1200 Goidelic. Gaelic",4,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1201 - PB1449 Irish",864,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1501 - PB1709 Gaelic (Scottish Gaelic, Erse)",176,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1801 - PB1867 Manx",13,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group",541,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group|PB2101 - PB2499 Welsh. Cymric",412,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group|PB2501 - PB2621 Cornish",23,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group|PB2801 - PB2932 Breton. Armorican",82,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group|PB3001 - PB3029 Gaulish",11,
        "P - Language and literature|PC1 - PC5498 Romanic languages",18191,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC1 - PC400 General",1406,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC1001 - PC1977 Italian",1611,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC1981 - PC1984 Sardinian",24,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French",4607,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms",1650,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC2813 - PC2898 Old French",206,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC3201 - PC3366 Provencal (Old)",504,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC3371 - PC3420.5 Modern patois of South France",210,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC3420.8 - PC3495 Langue d'oc dialects",76,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC3721 - PC3761 Slang. Argot",139,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC3801 - PC3976 Catalan",4045,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC4001 - PC4977 Spanish",4091,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC5001 - PC5498 Portuguese",1173,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC601 - PC872 Romanian",1089,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC901 - PC986 Raeto-Romance. Including Romansh",137,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages",2561,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1 - PD780 General",1499,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1001 - PD1350 Old Germanic dialects",91,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1001 - PD1350 Old Germanic dialects|PD1101 - PD1211 Gothic",82,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian",974,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD2201 - PD2393 Old Norse. Old Icelandic and Old Norwegian",145,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD2401 - PD2446 Modern Icelandic",74,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD2501 - PD2999 Norwegian",176,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD3001 - PD3929 Danish",83,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD5001 - PD5929 Swedish",225,
        "P - Language and literature|PE1 - PE3729 English language",14601,
        "P - Language and literature|PE1 - PE3729 English language|PE1001 - PE1693 Modern English",10859,
        "P - Language and literature|PE1 - PE3729 English language|PE101 - PE458 Anglo-Saxon. Old English",443,
        "P - Language and literature|PE1 - PE3729 English language|PE1700 - PE3602 Dialects. Provincialisms, etc.",1643,
        "P - Language and literature|PE1 - PE3729 English language|PE3701 - PE3729 Slang. Argot, etc.",223,
        "P - Language and literature|PE1 - PE3729 English language|PE501 - PE693 Middle English",190,
        "P - Language and literature|PE1 - PE3729 English language|PE814 - PE896 Early Modern English",31,
        "P - Language and literature|PF1 - PF5999 West Germanic languages",5088,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF1 - PF979 Dutch",430,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF1001 - PF1184 Flemish",6,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF1401 - PF1541 Friesian",73,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German",4581,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF3801 - PF3991 Old High German",291,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF3992 - PF4010 Old Saxon",60,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF4043 - PF4350 Middle High German",142,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF4501 - PF4596 Early Modern German",51,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF5000 - PF5951 Dialects. Provincialism, etc.",800,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF5971 - PF5999 Slang. Argot, etc.",48,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language",92710,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic",91159,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1 - PG499 Slavic philology and languages (General)",1640,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1151 - PG1199 Macedonian",391,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1201 - PG1749 Serbo-Croatian",6237,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1801 - PG1962 Slovenian",508,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2001 - PG2826 Russian language",4702,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2830 - PG2847 Belarusian",781,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature",51225,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism",7830,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG2900 - PG2998 General",2682,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3001 - PG3026 Special periods",2554,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3041 - PG3065 Poetry",702,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3071 - PG3089 Drama",137,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3091 - PG3099 Prose",633,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections",2520,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3199 - PG3205 General",417,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3211 - PG3219 Translations",86,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3223 - PG3229.2 Special periods",486,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3230 - PG3238 Poetry",923,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3240 - PG3255 Drama",110,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3260 - PG3299 Prose",531,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works",39700,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3300 - PG3308 Early to 1700",274,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3310 - PG3319 18th century",388,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3320 - PG3447 1800-1870",7516,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3450 - PG3470 1870-1917",3317,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3475 - PG3476 1917-1960",5,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3477 - PG3490 1961-2000",14461,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3491.2 - PG3493.96 -2001",3121,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3500 - PG3505 Provincial, local, etc.",277,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3515 - PG3550 Outside the Russian Federation",1013,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG3801 - PG3987 Ukrainian",2385,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG4001 - PG5146 Czech",10122,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG500 - PG585 Slavic literature (General)",483,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG5201 - PG5546 Slovak",2580,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG5631 - PG5689 Sorbian (Wendic)",76,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG6001 - PG7446 Polish",7772,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG601 - PG716 Church Slavic",453,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG7900 - PG7925 Lechitic dialects",48,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG801 - PG1146 Bulgarian",1990,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic",1269,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic|PG8201 - PG8208 Old Prussian",13,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic|PG8501 - PG8772 Lithuanian",320,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic|PG8801 - PG9146 Latvian",876,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG9501 - PG9665 Albanian",287,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language",4942,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH1 - PH87 General",206,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH101 - PH405 Finnish",361,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH1201 - PH1409 Ugric languages",35,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH2001 - PH3445 Hungarian",3543,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH3801 - PH3820 Samoyedic languages",11,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH5001 - PH5490 Basque",284,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects",511,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH1001 - PH1079 Permic",48,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH1101 - PH1109 Udmurt",35,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH501 - PH509 Karelian",21,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH531 - PH539 Ludic",1,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH541 - PH549 Veps",2,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH551 - PH559 Ingrian",3,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH561 - PH569 Votic",2,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH581 - PH589 Livonian",2,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH601 - PH671 Estonian",308,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH701 - PH735 Sami",22,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH751 - PH785 Mordvin",24,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH801 - PH836 Mari",31,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH91 - PH98.5 Finnic. Baltic-Finnic",18,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature",17023,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1 - PJ489 General",725,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1 - PJ489 General|PJ1 - PJ195 Languages",561,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1 - PJ489 General|PJ306 - PJ489 Literature",163,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology",615,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology|PJ1091 - PJ1109 Egyptian writing and its decipherment",57,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology|PJ1111 - PJ1446 Language",117,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology|PJ1481 - PJ1989 Literature. Inscriptions",332,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2001 - PJ2199 Coptic",54,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2340 - PJ2399 Libyco-Berber languages. Berber languages",103,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2340 - PJ2399 Libyco-Berber languages. Berber languages|PJ2353 - PJ2367 Libyan group",3,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2340 - PJ2399 Libyco-Berber languages. Berber languages|PJ2369 - PJ2399 Berber languages",78,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2401 - PJ2594 Cushitic languages",118,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ3001 - PJ3097 Semitic philology and literature",193,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4001 - PJ4091 Sumerian",219,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4101 - PJ4197 West and North Semitic languages",105,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4101 - PJ4197 West and North Semitic languages|PJ4171 - PJ4197 Phoenician-Punic",20,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew",3667,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ4543 - PJ4937 Language (Biblical and modern)",655,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ4951 - PJ4996 Medieval Hebrew",8,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5001 - PJ5060 Literature",1983,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5001 - PJ5060 Literature|PJ5050 - PJ5055.51 Individual authors and works",1472,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5061 - PJ5192 Other languages used by Jews",976,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5061 - PJ5192 Other languages used by Jews|PJ5111 - PJ5192 Yiddish",923,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic",152,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic",52,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic|PJ5211 - PJ5219.5 Biblical (Chaldaic)",13,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic|PJ5241 - PJ5249 Christian Palestinian",2,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic|PJ5251 - PJ5259 Jewish Palestinian",9,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic|PJ5271 - PJ5279 Samaritan",6,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic|PJ5281 - PJ5289 Neo-Aramaic",13,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5301 - PJ5329.5 East Aramaic",13,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5301 - PJ5329.5 East Aramaic|PJ5321 - PJ5329.5 Mandaean",7,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ601 - PJ989 Special groups",57,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ601 - PJ989 Special groups|PJ601 - PJ621 Christian Oriental",4,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ601 - PJ989 Special groups|PJ701 - PJ989 Islamic",53,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ991 - PJ995 Afroasiatic languages",27,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature",17976,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK1 - PK85 General",46,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages",10712,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1001 - PK1095 Pali",35,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK101 - PK185 General",171,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1201 - PK1409.5 Prakrit",23,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1421 - PK1429.5 Apabhrams'a",22,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1471 - PK1490 Middle Indo-Aryan dialects",4,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages",9835,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects",9749,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1550 - PK1569 Assamese",33,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1651 - PK1799 Bengali",958,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1801 - PK1831.95 Bihari",109,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1841 - PK1870.95 Gujarati",133,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures",7291,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK1931 - PK1970 Hindi language",558,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK1971 - PK1979.5 Urdu language",113,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK1981 - PK2000 Hindustani language",21,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK2030 - PK2142 Hindi, Hindustani literatures",4124,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK2151 - PK2212 Urdu literature",2475,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2261 - PK2270.9 Lahnda",13,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2351 - PK2418 Marathi",45,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2461 - PK2479 Marwari",7,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2561 - PK2579.5 Oriya",221,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2591 - PK2610 Pahari",107,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2631 - PK2659 Panjabi",86,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2701 - PK2708.9 Rajasthani",38,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2781 - PK2790 Sindhi",42,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2801 - PK2891 Sinhalese (Singhalese)",44,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2892 - PK2892.95 Siraiki",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2896 - PK2899 Romani",32,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK201 - PK379 Vedic",82,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK401 - PK976 Sanskrit",534,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature",1598,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK2901 - PK2979 General",629,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit",596,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit|PK3791 - PK3799 Individual authors and works",370,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit|PK3801 - PK4251 Special subjects",7,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit|PK4471 - PK4485 Translations",28,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK4501 - PK4681 Pali literature",22,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK4990 - PK5046 Prakrit literature",34,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK5401 - PK5471 Modern Indo-Aryan literature",288,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature",4675,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6001 - PK6099 General",80,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6101 - PK6119 Avestan",51,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6121 - PK6129 Old Persian",13,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6135 - PK6199.9 Middle Iranian languages",51,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6135 - PK6199.9 Middle Iranian languages|PK6141 - PK6199.5 Pahlavi",35,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian",4183,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian|PK6201 - PK6399 Language",333,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian|PK6400 - PK6599.7 Literature",3855,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian|PK6400 - PK6599.7 Literature|PK6450.9 - PK6562.35 Individual authors or works",3064,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6701 - PK6821 Afghan (Pashto, Pushto, Pushtu, etc.)",102,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania",60110,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages",2278,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages|PL21 - PL396 Turkic languages",1885,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages|PL400 - PL431 Mongolian languages",252,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages|PL450 - PL481 Tungus Manchu languages",60,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature",40812,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL1001 - PL1960 Chinese language",3927,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature",36874,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL2250 - PL2443 History and criticism",6158,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL2450 - PL2659 Collections",4905,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL2661 - PL2979 Individual authors and works",24016,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL3030 - PL3208 Provincial, local, colonial, etc.",1225,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3301 - PL3311 Non-Chinese languages of China",14,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3501 - PL3509 Non-Aryan languages of India and Southeastern Asia in general",39,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages",328,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages",309,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3561 - PL3801 Tibeto-Himalayan languages",188,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3561 - PL3801 Tibeto-Himalayan languages|PL3601 - PL3775 Tibetan",175,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3561 - PL3801 Tibeto-Himalayan languages|PL3781 - PL3801 Himalayan languages",7,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3851 - PL4001 Assam and Burma",50,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4051 - PL4054 Karen languages",3,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4070 - PL4074 Miao-Yao languages",14,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages",341,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4301 - PL4470 Mon-Khmer (Mon-Anam) languages",291,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4301 - PL4470 Mon-Khmer (Mon-Anam) languages|PL4371 - PL4379 Vietnamese. Annamese",197,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4301 - PL4470 Mon-Khmer (Mon-Anam) languages|PL4423 - PL4470 Bru, Chrau, Khasi, Muong, etc.",20,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4471 - PL4471.5 Nicobarese",2,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4490 - PL4498 Chamic languages",3,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4501 - PL4587 Munda languages (Kolarian languages)",29,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4601 - PL4890 Dravidian languages",2786,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL490 - PL495 Far Eastern languages and literature",51,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania",1812,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages",1652,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL5051 - PL5497 Malayan (Indonesian) languages",662,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL5501 - PL6135 Philippine languages",290,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6145 - PL6167 Taiwan languages",11,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6191 - PL6341 Micronesian and Melanesian languages",188,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6401 - PL6551 Polynesian languages",153,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6601 - PL6621 Papuan languages",50,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL7001 - PL7101 Australian languages",94,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature",5784,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL501 - PL699 Japanese language",1110,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature",4676,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL700 - PL751.5 History and criticism",557,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL752 - PL783 Collections",438,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL784 - PL866 Individual authors and works",3320,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL885 - PL889 Local literature",32,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature",3467,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8000 - PL8009 Languages",216,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8009.5 - PL8014 Literature",527,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8015 - PL8021 Languages. By region or country",38,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8024 - PL8027 Special families of languages",142,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8035 - PL8844 Special languages (alphabetically)",2328,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature",1829,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL901 - PL949 Korean language",584,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature",1242,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL950.2 - PL969.5 History and criticism",153,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL969.8 - PL985 Collections",182,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL986 - PL993 Individual authors and works",660,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL997 - PL998 Local literature",2,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages",4453,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM1 - PM94 Hyperborean languages of Arctic Asia and America",148,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)",923,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)|PM231 - PM355 American languages of British North America",19,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)|PM401 - PM501 American languages of the United States (and Mexico)",14,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)|PM549 - PM2711 Special languages of the United States and Canada (alphabetically)",604,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM3001 - PM4566 Languages of Mexico and Central America",1436,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM5001 - PM7356 Languages of South America and the West Indies",981,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM7801 - PM7895 Mixed languages",678,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM7801 - PM7895 Mixed languages|PM7831 - PM7875 Creole languages",509,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM8001 - PM8995 Artificial languages",233,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM8001 - PM8995 Artificial languages|PM8201 - PM8298 Esperanto",81,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM9001 - PM9021 Secret languages",1,
        "P - Language and literature|PN1 - PN6790 Literature (General)",145161,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1 - PN9 Periodicals",756,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN101 - PN245 Authorship",3935,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN101 - PN245 Authorship|PN172 - PN239 Technique. Literary composition, etc.",1282,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN101 - PN245 Authorship|PN241 - PN241.5 Translating as a literary pursuit",284,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry",3726,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1031 - PN1049 Theory, philosophy, relations, etc.",1338,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1065 - PN1085 Relations to, and treatment of, special subjects",291,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1110 - PN1279 History and criticism",816,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1301 - PN1333 Epic poetry",88,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1341 - PN1347 Folk poetry",38,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1351 - PN1389 Lyric poetry",138,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1560 - PN1590 The performing arts. Show business",395,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1560 - PN1590 The performing arts. Show business|PN1585 - PN1589 Centers for the performing arts",19,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama",71151,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1635 - PN1650 Relation to, and treatment of, special subjects",103,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1660 - PN1693 Technique of dramatic composition",328,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1720 - PN1861 History",465,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1865 - PN1988 Special types",1311,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1990 - PN1992.92 Broadcasting",6592,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1990 - PN1992.92 Broadcasting|PN1991 - PN1991.9 Radio broadcasts",840,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1990 - PN1992.92 Broadcasting|PN1992 - PN1992.92 Television broadcasts",5542,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1992.93 - PN1992.95 Nonbroadcast video recordings",101,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1993 - PN1999 Motion pictures",40138,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1993 - PN1999 Motion pictures|PN1997 - PN1997.85 Plays, scenarios, etc.",12070,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater",20552,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2061 - PN2071 Art of acting",629,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2085 - PN2091 The stage and accessories",98,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period",226,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period|PN2131 - PN2145 Ancient",5,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period|PN2152 - PN2160 Medieval",23,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period|PN2171 - PN2179 Renaissance",22,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period|PN2181 - PN2193 Modern",170,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2219.3 - PN3030 Special regions or countries",14831,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN3151 - PN3171 Amateur theater",227,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN3175 - PN3191 College and school theatricals",40,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN3203 - PN3299 Tableaux, pageants, 'Happenings,' etc.",163,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN20 - PN30 Societies",38,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction",4283,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3329 - PN3352 Philosophy, theory, etc.",459,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3355 - PN3383 Technique. Authorship",1052,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3427 - PN3448 Special kinds of fiction. Fiction genres",861,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3451 - PN3503 History",398,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.",1863,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4071 - PN4095 Study and teaching",105,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4177 - PN4191 Debating",216,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4199 - PN4321 Recitations (in English)",200,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4331 - PN4355 Recitations in foreign languages",7,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history",10150,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN1008.2 - PN1009.5 Juvenile literature",1122,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN451 - PN497 Biography",675,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN500 - PN519 Collections",1239,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN597 - PN605 Special relations, movements, and currents of literature",237,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period",4004,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN611 - PN649 Ancient",32,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)",1506,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)|PN683 - PN687 Legends",367,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)|PN688 - PN691 Poetry",87,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)|PN692 - PN693 Prose. Prose fiction",16,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN695 - PN779 Modern",2439,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN695 - PN779 Modern|PN715 - PN749 Renaissance (1500-1700)",257,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN801 - PN820 Romance literature",219,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN821 - PN840 Germanic literature",41,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN851 - PN884 Comparative literature",589,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN905 - PN1008 Folk literature",207,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN905 - PN1008 Folk literature|PN980 - PN995 Fables",158,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN45 - PN57 Theory. Philosophy. Esthetics",10101,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.",16444,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4735 - PN4748 Relation to the state. Government and the press. Liberty of the press",219,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4775 - PN4784 Technique. Practical journalism",870,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4825 - PN4830 Amateur journalism",9,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4832 - PN4836 Magazines and other periodicals",119,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4840 - PN5648 By region or country",11499,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN59 - PN72 Study and teaching",266,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature",15512,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6066 - PN6069 Special classes of authors",36,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations",660,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations|PN6081 - PN6084 English",285,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations|PN6086 - PN6089 French",28,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations|PN6090 - PN6110 German",29,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6099 - PN6110 Poetry",797,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6110.5 - PN6120 Drama",500,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6120.15 - PN6120.95 Fiction",184,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6121 - PN6129 Orations",70,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6130 - PN6140 Letters",45,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6141 - PN6145 Essays",57,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6146.5 - PN6231 Wit and humor",1953,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6146.5 - PN6231 Wit and humor|PN6157 - PN6222 By region or country",1235,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6233 - PN6238 Anacreontic literature",13,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6244 - PN6246 Literary extracts. Commonplace books",29,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6249 - PN6258 Ana",16,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6259 - PN6268 Anecdotes. Table talk",116,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6269 - PN6278 Aphorisms. Apothegms",258,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6279 - PN6288 Epigrams",81,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6288.5 - PN6298 Epitaphs",61,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6299 - PN6308 Maxims",79,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6309 - PN6318 Mottoes",9,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6319 - PN6328 Sayings, bon mots, etc.",13,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6329 - PN6338 Thoughts",63,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6340 - PN6348 Toasts",8,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6348.5 - PN6358 Emblems, devices",87,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6366 - PN6377 Riddles, acrostics, charades, conundrums, etc.",150,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6400 - PN6525 Proverbs",1830,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6700 - PN6790 Comic books, strips, etc.",3258,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN80 - PN99 Criticism",2810,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature",249258,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature",75322,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism",8508,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ1 - PQ150 General",2279,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ151 - PQ221 Medieval. Old French",751,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ226 - PQ310 Modern",2642,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ400 - PQ491 Poetry",758,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ500 - PQ591 Drama",593,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ601 - PQ771 Prose and prose fiction",1397,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1100 - PQ1297 Collections",1740,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1300 - PQ1595 Old French literature (To ca. 1500/1550)",2964,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1300 - PQ1595 Old French literature (To ca. 1500/1550)|PQ1300 - PQ1391 Collections",395,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature",54122,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ1600 - PQ1709 16th century",2098,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ1710 - PQ1935 17th century",2985,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ1947 - PQ2147 18th century",3519,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2149 - PQ2551 19th century",11701,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2600 - PQ2651 1900-1960",20560,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2660 - PQ2686 1961-2000",11840,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2700 - PQ2726 -2001",1401,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ3800 - PQ3999 Provincial, local, colonial, etc.",8178,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ781 - PQ841 Folk literature",10,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature",33132,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism",4143,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4001 - PQ4063 General",1471,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4064 - PQ4075 Early to 1500",123,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4077 - PQ4088 Modern",663,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4091 - PQ4131 Poetry",615,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4133 - PQ4160 Drama",296,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4161 - PQ4185 Prose",447,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4186 - PQ4199 Folk literature",20,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4201 - PQ4263 Collections",1409,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4265 - PQ4556 Individual authors and works to 1400",4326,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4561 - PQ4664 Individual authors, 1400-1700",2197,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4675 - PQ4734 Individual authors, 1701-1900",3269,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4800 - PQ4851 Individual authors, 1900-1960",8109,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4860 - PQ4886 Individual authors, 1961-2000",7197,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4900 - PQ4926 Individual authors, 2001-",1665,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ5901 - PQ5999 Regional, provincial, local, etc.",299,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature",121881,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism",4910,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6001 - PQ6056 General",1478,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6058 - PQ6060 Early to 1500",153,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6061 - PQ6073 Modern",876,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6075 - PQ6098 Poetry",603,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6098.7 - PQ6129 Drama",627,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6131 - PQ6153 Prose",738,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6155 - PQ6167 Folk literature",30,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6170 - PQ6269 Collections",20126,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6271 - PQ6498 Individual authors and works to 1700",6045,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6500 - PQ6576 Individual authors, 1700-ca. 1868",2555,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6600 - PQ6647 Individual authors, 1868-1960",9434,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6650 - PQ6676 Individual authors, 1961-2000",6614,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6700 - PQ6726 Individual authors, 2001-",1315,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ7000 - PQ8929 Provincial, local, colonial, etc.",72153,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ7000 - PQ8929 Provincial, local, colonial, etc.|PQ7081 - PQ8560 Spanish America",71469,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature",19076,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism",662,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9000 - PQ9034 General",324,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9035 - PQ9055 Special periods",150,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9061 - PQ9081 Poetry",102,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9083 - PQ9095 Drama",18,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9097 - PQ9119 Prose",42,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9121 - PQ9128 Folk literature",4,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9131 - PQ9188 Collections",490,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9191 - PQ9255 Individual authors and works, 1500-1700",579,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9262 - PQ9288 Individual authors, 1961-2000",1789,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9300 - PQ9326 Individual authors, 2001-",183,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9400 - PQ9999 Provincial, local, colonial, etc.",10411,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9400 - PQ9999 Provincial, local, colonial, etc.|PQ9500 - PQ9698.43 Brazil",9592,
        "P - Language and literature|PR1 - PR9680 English literature",191566,
        "P - Language and literature|PR1 - PR9680 English literature|PR1 - PR56 Literary history and criticism",1309,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature",8948,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1119 - PR1151 By period",981,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1170 - PR1228 Poetry",3182,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1241 - PR1273 Drama",3076,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1281 - PR1309 Prose (General)",248,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1321 - PR1329 Oratory",17,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1341 - PR1349 Letters",41,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1361 - PR1369 Essays",254,
        "P - Language and literature|PR1 - PR9680 English literature|PR111 - PR116 Women authors",277,
        "P - Language and literature|PR1 - PR9680 English literature|PR125 - PR138.5 Relations to other literatures and countries",391,
        "P - Language and literature|PR1 - PR9680 English literature|PR1490 - PR1799 Anglo-Saxon literature",821,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period",6004,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR171 - PR236 Anglo-Saxon (Beginnings through 1066)",330,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR251 - PR369 Medieval. Middle English (1066-1500)",826,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern",4815,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR421 - PR429 Elizabethan era (1550-1640)",735,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR431 - PR439 17th century",300,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR441 - PR449 18th century",812,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR451 - PR469 19th century",1448,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR471 - PR479 20th century",773,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR481 - PR488 21st century",12,
        "P - Language and literature|PR1 - PR9680 English literature|PR1803 - PR2165 Anglo-Norman period. Early English. Middle English",2444,
        "P - Language and literature|PR1 - PR9680 English literature|PR2199 - PR3195 English renaissance (1500-1640)",14363,
        "P - Language and literature|PR1 - PR9680 English literature|PR3291 - PR3785 17th and 18th centuries (1640-1770)",10671,
        "P - Language and literature|PR1 - PR9680 English literature|PR3991 - PR5990 19th century, 1770/1800-1890/1900",38323,
        "P - Language and literature|PR1 - PR9680 English literature|PR500 - PR614 Poetry",2489,
        "P - Language and literature|PR1 - PR9680 English literature|PR500 - PR614 Poetry|PR521 - PR614 By period",1766,
        "P - Language and literature|PR1 - PR9680 English literature|PR57 - PR78 Criticism",144,
        "P - Language and literature|PR1 - PR9680 English literature|PR6000 - PR6049 1900-1960",34596,
        "P - Language and literature|PR1 - PR9680 English literature|PR6050 - PR6076 1961-2000",27957,
        "P - Language and literature|PR1 - PR9680 English literature|PR6100 - PR6126 -2001",6216,
        "P - Language and literature|PR1 - PR9680 English literature|PR621 - PR744 Drama",1830,
        "P - Language and literature|PR1 - PR9680 English literature|PR621 - PR744 Drama|PR641 - PR744 By period",1589,
        "P - Language and literature|PR1 - PR9680 English literature|PR750 - PR890 Prose",4067,
        "P - Language and literature|PR1 - PR9680 English literature|PR750 - PR890 Prose|PR767 - PR818 By period",269,
        "P - Language and literature|PR1 - PR9680 English literature|PR8309 - PR9680 English literature: Provincial, local, etc.",30549,
        "P - Language and literature|PR1 - PR9680 English literature|PR901 - PR907.2 Oratory",7,
        "P - Language and literature|PR1 - PR9680 English literature|PR911 - PR918 Letters",39,
        "P - Language and literature|PR1 - PR9680 English literature|PR921 - PR928 Essays",44,
        "P - Language and literature|PR1 - PR9680 English literature|PR931 - PR938 Wit and humor",134,
        "P - Language and literature|PR1 - PR9680 English literature|PR951 - PR981 Folk literature",86,
        "P - Language and literature|PS1 - PS3626 American literature. Canadian literature",186064,
        "P - Language and literature|PS1 - PS3626 American literature. Canadian literature|PS1 - PS3626 American literature",186064,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature",59996,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature",48968,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1 - PT80 Literary history and criticism",777,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections",2044,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1100 - PT1141 General",826,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1151 - PT1241 Poetry",418,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1251 - PT1299 Drama",80,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1301 - PT1360 Prose",247,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1371 - PT1374 Early to 1950. Old and Middle High German",35,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1375 - PT1479 Middle High German",251,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works",37003,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT1501 - PT1695 Middle High German, ca. 1050-1450/1500",1630,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT1701 - PT1797 1500-ca. 1700",671,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT1799 - PT2592 1700-ca. 1860/70",10144,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT2600 - PT2653 1860/70-1960",15442,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT2660 - PT2688 1961-2000",8681,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT3701 - PT3971 Provincial, local, colonial, etc.",1344,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT3701 - PT3971 Provincial, local, colonial, etc.|PT3701 - PT3746 East Germany",302,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature",7000,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT175 - PT230 Medieval",737,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT236 - PT405 Modern",1849,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT500 - PT597 Poetry",486,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT605 - PT709 Drama",535,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT711 - PT871 Prose",939,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT881 - PT951 Folk literature",266,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT881 - PT951 Folk literature|PT923 - PT937 Faust legend",14,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature",1705,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism",223,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5001 - PT5112 General",79,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5121 - PT5185 Special periods",88,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5201 - PT5243 Poetry",18,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5250 - PT5295 Drama",14,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5300 - PT5348 Prose",18,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5351 - PT5395 Folk literature",18,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5400 - PT5547 Collections",165,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5901 - PT5980 Provincial, local, foreign",31,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830",315,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830|PT6000 - PT6199 Literary history and criticism",23,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830|PT6300 - PT6397 Collections",15,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830|PT6400 - PT6466.36 Individual authors or works",277,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature",145,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature|PT6500 - PT6530 Literary history and criticism",29,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature|PT6550 - PT6575 Collections",16,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature|PT6590 - PT6592.36 Individual authors or works",100,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature",184,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General",184,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General|PT7001 - PT7087 Literary history and criticism",150,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General|PT7088 - PT7089 Folk literature",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General|PT7090 - PT7099 Collections",30,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian",995,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism",343,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism|PT7170 - PT7176 Poetry",40,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism|PT7177 - PT7211 Prose",109,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism|PT7177 - PT7211 Prose|PT7181 - PT7193 Sagas",97,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7220 - PT7262.5 Collections",257,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7298 - PT7309 Religious works",15,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7312 - PT7318 Scientific and learned literature",26,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7326 - PT7338 Individual authors or works before 1540",19,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature",238,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7351 - PT7418 Literary history and criticism",21,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7420 - PT7438 Folk literature",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7450 - PT7495 Collections",25,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7500 - PT7511 Individual authors or works",4,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7500 - PT7511 Individual authors or works|PT7500 - PT7501 16th-18th centuries",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7500 - PT7511 Individual authors or works|PT7510 - PT7511 19th-20th centuries",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7520 - PT7550 Provincial, local, foreign",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7581 - PT7599 Faroese literature",8,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7581 - PT7599 Faroese literature|PT7581 - PT7592 Literary history and criticism",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7581 - PT7599 Faroese literature|PT7593 - PT7596.5 Collections",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7581 - PT7599 Faroese literature|PT7598 - PT7599 Individual authors or works",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature",2128,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT7601 - PT7869 Literary history and criticism",182,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT7900 - PT7930 Folk literature",13,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT7945 - PT8046 Collections",87,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works",1786,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works|PT8060 - PT8098 16th-18th centuries",106,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works|PT8100 - PT8167 19th century",562,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works|PT8176 - PT8176.36 1961-2000",303,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8205 - PT8260 Provincial, local, foreign",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature",2357,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism",112,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism|PT8420 - PT8456 Special periods",24,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism|PT8460 - PT8489 Poetry",10,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism|PT8500 - PT8534 Drama",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism|PT8540 - PT8574 Prose",12,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8600 - PT8637 Folk literature",9,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8650 - PT8733 Collections",48,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works",1915,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works|PT8750 - PT8775 16th-18th centuries",6,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works|PT8800 - PT8942 19th century",732,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works|PT8951 - PT8951.36 1961-2000",388,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature",2948,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism",205,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9320 - PT9370 Special periods",53,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9375 - PT9404 Poetry",37,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9415 - PT9449 Drama",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9460 - PT9499 Prose",23,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9509 - PT9542 Folk literature",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections",70,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9565 - PT9570 Translations",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9580 - PT9599 Poetry",37,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9605 - PT9625 Drama",5,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9626 - PT9639 Prose",10,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works",2503,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9650 - PT9651 Medieval",5,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9674 - PT9715 16th-18th centuries",49,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9725 - PT9850 19th century",754,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9870 - PT9875 1900-1960",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9876 - PT9876.36 1961-2000",612,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9950 - PT9999 Provincial, local, foreign",16,
        "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres",63284,
        "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres|PZ1 - PZ4 Fiction in English",32770,
        "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres|PZ5 - PZ90 Juvenile belles lettres",23282,
        "Q - Science",341445,
        "Q - Science|Q1 - Q390 Science (General)",31181,
        "Q - Science|Q1 - Q390 Science (General)|Q1 - Q295 General",25678,
        "Q - Science|Q1 - Q390 Science (General)|Q300 - Q390 Cybernetics",5297,
        "Q - Science|Q1 - Q390 Science (General)|Q300 - Q390 Cybernetics|Q350 - Q390 Information theory",541,
        "Q - Science|QA1 - QA939 Mathematics",104621,
        "Q - Science|QA1 - QA939 Mathematics|QA1 - QA43 General",12944,
        "Q - Science|QA1 - QA939 Mathematics|QA101 - QA141.8 Elementary mathematics. Arithmetic",1293,
        "Q - Science|QA1 - QA939 Mathematics|QA150 - QA272.5 Algebra",11809,
        "Q - Science|QA1 - QA939 Mathematics|QA273 - QA280 Probabilities. Mathematical statistics",9795,
        "Q - Science|QA1 - QA939 Mathematics|QA299.6 - QA433 Analysis",15506,
        "Q - Science|QA1 - QA939 Mathematics|QA299.6 - QA433 Analysis|QA303 - QA316 Calculus",1332,
        "Q - Science|QA1 - QA939 Mathematics|QA440 - QA699 Geometry. Trigonometry. Topology",8251,
        "Q - Science|QA1 - QA939 Mathematics|QA47 - QA59 Tables",172,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines",43340,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines|QA75 - QA76.95 Calculating machines",43146,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines|QA75 - QA76.95 Calculating machines|QA75.5 - QA76.95 Electronic computers. Computer science",43073,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines|QA75 - QA76.95 Calculating machines|QA75.5 - QA76.95 Electronic computers. Computer science|QA76.75 - QA76.76 Computer software",1829,
        "Q - Science|QA1 - QA939 Mathematics|QA801 - QA939 Analytic mechanics",2322,
        "Q - Science|QB1 - QB991 Astronomy",10320,
        "Q - Science|QB1 - QB991 Astronomy|QB1 - QB139 General",3331,
        "Q - Science|QB1 - QB991 Astronomy|QB140 - QB237 Practical and spherical astronomy",255,
        "Q - Science|QB1 - QB991 Astronomy|QB275 - QB343 Geodesy",303,
        "Q - Science|QB1 - QB991 Astronomy|QB349 - QB421 Theoretical astronomy and celestial mechanics",292,
        "Q - Science|QB1 - QB991 Astronomy|QB455 - QB456 Astrogelogy",7,
        "Q - Science|QB1 - QB991 Astronomy|QB460 - QB466 Astrophysics",695,
        "Q - Science|QB1 - QB991 Astronomy|QB468 - QB480 Non-optical methods of astronomy",429,
        "Q - Science|QB1 - QB991 Astronomy|QB495 - QB903 Descriptive astronomy",4177,
        "Q - Science|QB1 - QB991 Astronomy|QB495 - QB903 Descriptive astronomy|QB500.5 - QB785 Solar system",2050,
        "Q - Science|QB1 - QB991 Astronomy|QB495 - QB903 Descriptive astronomy|QB799 - QB903 Stars",1584,
        "Q - Science|QB1 - QB991 Astronomy|QB980 - QB991 Cosmogony. Cosmology",729,
        "Q - Science|QC1 - QC999 Physics",37014,
        "Q - Science|QC1 - QC999 Physics|QC1 - QC75 General",6540,
        "Q - Science|QC1 - QC999 Physics|QC120 - QC168.85 Descriptive and experimental mechanics",684,
        "Q - Science|QC1 - QC999 Physics|QC170 - QC197 Atomic physics. Constitution and properties of matter (including molecular physics, relativity, quantum theory, and solid state physics)",7913,
        "Q - Science|QC1 - QC999 Physics|QC221 - QC246 Acoustics. Sound",422,
        "Q - Science|QC1 - QC999 Physics|QC251 - QC338.5 Heat",851,
        "Q - Science|QC1 - QC999 Physics|QC251 - QC338.5 Heat|QC310.15 - QC319 Thermodynamics",404,
        "Q - Science|QC1 - QC999 Physics|QC350 - QC467 Optics. Light",2789,
        "Q - Science|QC1 - QC999 Physics|QC350 - QC467 Optics. Light|QC450 - QC467 Spectroscopy",927,
        "Q - Science|QC1 - QC999 Physics|QC474 - QC496.9 Radiation physics (General)",748,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism",4258,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity",3202,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC669 - QC675.8 Electromagnetic theory",163,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC676 - QC678.6 Radio waves (Theory)",15,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC701 - QC715.4 Electric discharge",248,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC717.6 - QC718.8 Plasma physics. Ionized gasses",566,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC750 - QC766 Magnetism",841,
        "Q - Science|QC1 - QC999 Physics|QC770 - QC798 Nuclear and particle physics. Atomic energy. Radioactivity",4315,
        "Q - Science|QC1 - QC999 Physics|QC770 - QC798 Nuclear and particle physics. Atomic energy. Radioactivity|QC793 - QC793.5 Elementary particle physics",1230,
        "Q - Science|QC1 - QC999 Physics|QC770 - QC798 Nuclear and particle physics. Atomic energy. Radioactivity|QC794.95 - QC798 Radioactivity and radioactive substances",139,
        "Q - Science|QC1 - QC999 Physics|QC801 - QC809 Geophysics. Cosmic physics",403,
        "Q - Science|QC1 - QC999 Physics|QC81 - QC114 Weights and measures",1528,
        "Q - Science|QC1 - QC999 Physics|QC811 - QC849 Geomagnetism",161,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)",6311,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)|QC974.5 - QC976 Meteorological optics",53,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)|QC980 - QC999 Climatology and weather",2247,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)|QC980 - QC999 Climatology and weather|QC994.95 - QC999 Weather forecasting",121,
        "Q - Science|QD1 - QD999 Chemistry",21658,
        "Q - Science|QD1 - QD999 Chemistry|QD1 - QD65 General (including alchemy)",3864,
        "Q - Science|QD1 - QD999 Chemistry|QD146 - QD197 Inorganic chemistry",1518,
        "Q - Science|QD1 - QD999 Chemistry|QD241 - QD441 Organic chemistry",5889,
        "Q - Science|QD1 - QD999 Chemistry|QD241 - QD441 Organic chemistry|QD415 - QD436 Biochemistry",758,
        "Q - Science|QD1 - QD999 Chemistry|QD450 - QD801 Physical and theoretical chemistry",6612,
        "Q - Science|QD1 - QD999 Chemistry|QD450 - QD801 Physical and theoretical chemistry|QD625 - QD655 Radiation chemistry",39,
        "Q - Science|QD1 - QD999 Chemistry|QD450 - QD801 Physical and theoretical chemistry|QD701 - QD731 Photochemistry",244,
        "Q - Science|QD1 - QD999 Chemistry|QD71 - QD142 Analytical chemistry",2718,
        "Q - Science|QD1 - QD999 Chemistry|QD901 - QD999 Crystallography",1149,
        "Q - Science|QE1 - QE996.5 Geology",28223,
        "Q - Science|QE1 - QE996.5 Geology|QE1 - QE350.62 General (including geographical divisions)",13946,
        "Q - Science|QE1 - QE996.5 Geology|QE351 - QE399.2 Mineralogy",1452,
        "Q - Science|QE1 - QE996.5 Geology|QE420 - QE499 Petrology",2107,
        "Q - Science|QE1 - QE996.5 Geology|QE500 - QE639.5 Dynamic and structural geology",5396,
        "Q - Science|QE1 - QE996.5 Geology|QE500 - QE639.5 Dynamic and structural geology|QE521 - QE545 Volcanoes and earthquakes",1561,
        "Q - Science|QE1 - QE996.5 Geology|QE500 - QE639.5 Dynamic and structural geology|QE601 - QE613.5 Structural geology",734,
        "Q - Science|QE1 - QE996.5 Geology|QE640 - QE699 Stratigraphy",2182,
        "Q - Science|QE1 - QE996.5 Geology|QE701 - QE760 Paleontology",2126,
        "Q - Science|QE1 - QE996.5 Geology|QE760.8 - QE899.2 Paleozoology",2733,
        "Q - Science|QE1 - QE996.5 Geology|QE901 - QE996.5 Paleobotany",637,
        "Q - Science|QH1 - QH278.5 Natural history (General)",11537,
        "Q - Science|QH1 - QH278.5 Natural history (General)|QH1 - QH198 General (including nature conservation, geographical distribution)",10594,
        "Q - Science|QH1 - QH278.5 Natural history (General)|QH201 - QH278.5 Microscopy",855,
        "Q - Science|QH301 - QH705.5 Biology (General)",21828,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH359 - QH425 Evolution",2022,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH426 - QH470 Genetics",3689,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH471 - QH489 Reproduction",106,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH501 - QH531 Life",1550,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH540 - QH549.5 Ecology",5237,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH573 - QH671 Cytology",3112,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH705 - QH705.5 Economic biology",12,
        "Q - Science|QK1 - QK989 Botany",22409,
        "Q - Science|QK1 - QK989 Botany|QK1 - QK474.5 General (including geographical distribution)",10100,
        "Q - Science|QK1 - QK989 Botany|QK474.8 - QK495 Spermatophyta. Phanerogams",919,
        "Q - Science|QK1 - QK989 Botany|QK474.8 - QK495 Spermatophyta. Phanerogams|QK494 - QK494.5 Gymnosperms",62,
        "Q - Science|QK1 - QK989 Botany|QK504 - QK635 Cryptogams",4641,
        "Q - Science|QK1 - QK989 Botany|QK640 - QK673 Plant anatomy",698,
        "Q - Science|QK1 - QK989 Botany|QK710 - QK899 Plant physiology",2555,
        "Q - Science|QK1 - QK989 Botany|QK900 - QK989 Plant ecology",1534,
        "Q - Science|QL1 - QL991 Zoology",25099,
        "Q - Science|QL1 - QL991 Zoology|QL1 - QL355 General (including geographical distribution)",5037,
        "Q - Science|QL1 - QL991 Zoology|QL360 - QL599.82 Invertebrates",6656,
        "Q - Science|QL1 - QL991 Zoology|QL360 - QL599.82 Invertebrates|QL461 - QL599.82 Insects",3503,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates",10763,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL614 - QL639.8 Fishes",1650,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL640 - QL669.3 Reptiles and amphibians",1208,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL671 - QL699 Birds",3994,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL700 - QL739.8 Mammals",3720,
        "Q - Science|QL1 - QL991 Zoology|QL750 - QL795 Animal behavior",1935,
        "Q - Science|QL1 - QL991 Zoology|QL750 - QL795 Animal behavior|QL791 - QL795 Stories and anecdotes",72,
        "Q - Science|QL1 - QL991 Zoology|QL799 - QL799.5 Morphology",38,
        "Q - Science|QL1 - QL991 Zoology|QL801 - QL950.9 Anatomy",632,
        "Q - Science|QL1 - QL991 Zoology|QL951 - QL991 Embryology",508,
        "Q - Science|QM1 - QM695 Human anatomy",2645,
        "Q - Science|QM1 - QM695 Human anatomy|QM1 - QM511 General",1576,
        "Q - Science|QM1 - QM695 Human anatomy|QM531 - QM549 Regional anatomy",191,
        "Q - Science|QM1 - QM695 Human anatomy|QM550 - QM577.8 Human and comparative histology",355,
        "Q - Science|QM1 - QM695 Human anatomy|QM601 - QM695 Human embryology",481,
        "Q - Science|QP1 - QP801 Physiology",21344,
        "Q - Science|QP1 - QP801 Physiology|QP1 - QP345 General (including influence of the environment)",7988,
        "Q - Science|QP1 - QP801 Physiology|QP351 - QP495 Neurophysiology and neuropsychology",6248,
        "Q - Science|QP1 - QP801 Physiology|QP501 - QP801 Animal biochemistry",7116,
        "Q - Science|QR1 - QR502 Microbiology",6799,
        "Q - Science|QR1 - QR502 Microbiology|QR1 - QR74.5 General",1612,
        "Q - Science|QR1 - QR502 Microbiology|QR100 - QR130 Microbial ecology",738,
        "Q - Science|QR1 - QR502 Microbiology|QR180 - QR189.5 Immunology",1780,
        "Q - Science|QR1 - QR502 Microbiology|QR355 - QR502 Virology",585,
        "Q - Science|QR1 - QR502 Microbiology|QR75 - QR99.5 Bacteria",801,
        "Q - Science|QR1 - QR502 Microbiology|QR99.6 - QR99.8 Cyanobacteria",37,
        "Q - Science|QS1 - QS681 Human Anatomy",9,
        "Q - Science|QS1 - QS681 Human Anatomy|QS1 - QS132 Anatomy",2,
        "Q - Science|QS1 - QS681 Human Anatomy|QS504 - QS539 Histology",3,
        "Q - Science|QS1 - QS681 Human Anatomy|QS604 - QS681 Embryology",3,
        "Q - Science|QT1 - QT275 Physiology",19,
        "Q - Science|QT1 - QT275 Physiology|QT1 - QT33.1 Reference Works. General Works",2,
        "Q - Science|QT1 - QT275 Physiology|QT104 - QT172 Human Physiology",4,
        "Q - Science|QT1 - QT275 Physiology|QT180 - QT245 Physiology. Hygiene",1,
        "Q - Science|QT1 - QT275 Physiology|QT250 - QT275 Leisure Activities. Sports Medicine",3,
        "Q - Science|QT1 - QT275 Physiology|QT34 - QT37.5 Physics. Mathematics. Engineering",8,
        "Q - Science|QU1 - QU500 Biochemistry",37,
        "Q - Science|QU1 - QU500 Biochemistry|QU1 - QU54 Reference Works. General Works",3,
        "Q - Science|QU1 - QU500 Biochemistry|QU100 - QU133 Biochemistry of the Human Body",4,
        "Q - Science|QU1 - QU500 Biochemistry|QU135 - QU144 Enzymes",2,
        "Q - Science|QU1 - QU500 Biochemistry|QU145 - QU220 Vitamins",5,
        "Q - Science|QU1 - QU500 Biochemistry|QU55 - QU70 Proteins. Amino Acids. Peptides",16,
        "Q - Science|QU1 - QU500 Biochemistry|QU75 - QU99 Carbohydrates. Lipids",7,
        "Q - Science|QV1 - QV835 Pharmacology",43,
        "Q - Science|QV1 - QV835 Pharmacology|QV1 - QV55 Reference Works. General Works",12,
        "Q - Science|QV1 - QV835 Pharmacology|QV150 - QV160 Cardiovascular Agents. Renal Agents",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV180 - QV195 Hematologic Agents",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV220 - QV243 Local Anti-Infective Agents. Dyes. Tars",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV247 - QV269 Anti-Inflammatory Agents. Anti-Infective Agents",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV270 - QV285 Water. Electrolytes",2,
        "Q - Science|QV1 - QV835 Pharmacology|QV350 - QV370 Anti-Bacterial Agents. Tissue Extracts",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV60 - QV75 Dermatologic Agents. Gastrointestinal Agents",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV600 - QV667 Toxicology",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics",19,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics|QV701 - QV737 General Pharmacy and Pharmaceutics",2,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics|QV738 - QV772 Drug Standardization. Pharmacognosy. Medicinal Plants",11,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics|QV773 - QV835 Pharmaceutical Processes. Packaging. Labeling",4,
        "Q - Science|QW1 - QW949 Microbiology. Immunology",24,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW1 - QW300 Microbiology",11,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW1 - QW300 Microbiology|QW1 - QW52 Reference Works. General Works",5,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW1 - QW300 Microbiology|QW160 - QW170 Viruses",2,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW1 - QW300 Microbiology|QW180 - QW190 Fungi. Bacterial Spores",1,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW1 - QW300 Microbiology|QW55 - QW85 Environmental Microbiology",2,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW501 - QW949 Immunology",13,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW501 - QW949 Immunology|QW570 - QW630.5 Antigens and Antibodies. Toxins and Antitoxins",6,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW501 - QW949 Immunology|QW640 - QW730 Immune Responses",2,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW501 - QW949 Immunology|QW800 - QW949 Immunotherapy and Hypersensitivity",2,
        "Q - Science|QX1 - QX675 Parasitology",1,
        "Q - Science|QX1 - QX675 Parasitology|QX1 - QX45 Reference Works. General Works",1,
        "Q - Science|QY1 - QY490 Clinical Patholgy",6,
        "Q - Science|QY1 - QY490 Clinical Patholgy|QY1 - QY39 Reference Works. General Works",4,
        "Q - Science|QY1 - QY490 Clinical Patholgy|QY50 - QY110 Laboratory Animals. Laboratory Techniques",2,
        "Q - Science|QZ1 - QZ380 Pathology",20,
        "Q - Science|QZ1 - QZ380 Pathology|QZ1 - QZ39 Reference Works. General Works",3,
        "Q - Science|QZ1 - QZ380 Pathology|QZ200 - QZ380 Neoplasms. Cysts",14,
        "Q - Science|QZ1 - QZ380 Pathology|QZ40 - QZ109 Pathogenesis. Etiology",3,
        "R - Medicine",181253,
        "R - Medicine|R5 - R920 Medicine (General)",21824,
        "R - Medicine|R5 - R920 Medicine (General)|R131 - R687 History of medicine. Medical expeditions",4611,
        "R - Medicine|R5 - R920 Medicine (General)|R690 - R697 Medicine as a profession. Physicians",371,
        "R - Medicine|R5 - R920 Medicine (General)|R722 - R722.32 Missionary medicine. Medical missionaries",34,
        "R - Medicine|R5 - R920 Medicine (General)|R723 - R726 Medical philosophy. Medical ethics",1777,
        "R - Medicine|R5 - R920 Medicine (General)|R726.5 - R726.8 Medicine and disease in relation to psychology, terminal care, dying",551,
        "R - Medicine|R5 - R920 Medicine (General)|R728 - R733 Practice of medicine. Medical practice economics",809,
        "R - Medicine|R5 - R920 Medicine (General)|R735 - R854 Medical education. Medical schools. Research",2873,
        "R - Medicine|R5 - R920 Medicine (General)|R856 - R857 Biomedical engineering. Electronics. Instrumentation",715,
        "R - Medicine|R5 - R920 Medicine (General)|R858 - R859.7 Computer applications to medicine",889,
        "R - Medicine|R5 - R920 Medicine (General)|R895 - R920 Medical physics. Medical radiology. Nuclear medicine",469,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine",32217,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state",8364,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA407 - RA409.5 Health status indicators. Medical statistics and surveys",1589,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA410 - RA410.9 Medical economics. Economics of medical care. Employment",1335,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA411 - RA415 Provisions for personal medical care. Medical care plans",859,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA418 - RA418.5 Medicine and society. Social medicine. Medical sociology",1034,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1001 - RA1171 Forensic medicine. Medical jurisprudence. Legal medicine",1110,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1190 - RA1270 Toxiciology. Poisons",2121,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine",16730,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA565 - RA600 Environmental health (including sewage disposal, air pollution, nuisances, water supply)",1384,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA601 - RA602 Food and food supply in relation to public health",103,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA604 - RA618 Parks, public baths, public carriers, buildings, etc.",42,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA619 - RA637 Disposal of the dead. Undertaking. Burial. Cremation. Cemeteries",49,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA639 - RA642 Transmission of disease",259,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA643 - RA645 Disease (Communicable and noninfectious) and public health",3420,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA645.3 - RA645.37 Home health care services",181,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA645.5 - RA645.9 Emergency medical services",215,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA646 - RA648.3 War and public health",59,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA648.5 - RA767 Epidemics. Epidemology. Quarantine. Disinfection",1012,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA771 - RA771.7 Rural health and hygiene. Rural health services",93,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA773 - RA788 Personal health and hygiene",1853,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA790 - RA790.95 Mental health. Mental illness prevention",1348,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA791 - RA954 Medical geography. Climatology. Meteorology",446,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA960 - RA1000.5 Medical centers. Hospitals. Dispensaries. Clinics (including ambulance service and nursing homes)",3186,
        "R - Medicine|RB1 - RB214 Pathology",4493,
        "R - Medicine|RB1 - RB214 Pathology|RB127 - RB150 Manifestation of disease",1113,
        "R - Medicine|RB1 - RB214 Pathology|RB151 - RB214 Theories of disease. Etiology. Pathogenesis",1090,
        "R - Medicine|RB1 - RB214 Pathology|RB24 - RB33 Pathology anatomy and histology",139,
        "R - Medicine|RB1 - RB214 Pathology|RB37 - RB56.5 Clinical pathology. Laboratory technique",1125,
        "R - Medicine|RC31 - RC1245 Internal medicine",65784,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC110 - RC216 Infectious and parasitic diseases",2493,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC254 - RC282 Neoplasms. Tumors. Oncology (including cancer and carcinogens)",7165,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC306 - RC320.5 Tuberculosis",472,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC321 - RC571 Neurosciences. Biological psychiatry. Neuropsychiatry",32159,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC321 - RC571 Neurosciences. Biological psychiatry. Neuropsychiatry|RC346 - RC429 Neurology. Diseases of the nervous system",5563,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC321 - RC571 Neurosciences. Biological psychiatry. Neuropsychiatry|RC346 - RC429 Neurology. Diseases of the nervous system|RC423 - RC429 Speech and language disorders",971,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC49 - RC52 Psychosomatic medicine",217,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine",15180,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC581 - RC607 Immunologic diseases. Allergy",1099,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC620 - RC627 Nutritional diseases. Deficiency diseases",149,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC627.5 - RC632 Metabolic diseases",526,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC633 - RC647.5 Diseases of the blood and blood-forming organs",874,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC648 - RC665 Diseases of the endocrine glands",1138,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC666 - RC701 Diseases of the circulatory (cardiovascular) system",4091,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC705 - RC779 Diseases of the respiratory system",1123,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC799 - RC869 Diseases of the digestive system. Gastroenterology",1945,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC870 - RC923 Diseases of the genitourinary system. Urology",1734,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC924 - RC924.5 Diseases of the connective tissues",37,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC925 - RC935 Diseases of the musculoskeletal system",1152,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC71 - RC78.7 Examination. Diagnosis (including radiography)",1011,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC71 - RC78.7 Examination. Diagnosis (including radiography)|RC78 - RC78.5 Radiography. Roentgenography",438,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC86 - RC88.9 Medical emergencies. Critical care. Intensive care. First aid",899,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC91 - RC103 Diseases due to physical and chemical agents",53,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions",3091,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC1000 - RC1020 Submarine medicine",22,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC1030 - RC1160 Transportation medicine (including automotive, aviation, and space medicine)",395,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC1200 - RC1245 Sports medicine",722,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC952 - RC954.6 Geriatrics",828,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC955 - RC962 Arctic medicine. Tropical medicine",202,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC963 - RC969 Industrial medicine. Industrial hygiene",685,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC970 - RC986 Military medicine. Naval medicine",133,
        "R - Medicine|RD1 - RD811 Surgery",10556,
        "R - Medicine|RD1 - RD811 Surgery|RD1 - RD31.7 General works",935,
        "R - Medicine|RD1 - RD811 Surgery|RD101 - RD104 Fractures (General)",165,
        "R - Medicine|RD1 - RD811 Surgery|RD118 - RD120.5 Plastic surgery. Reparative surgery",413,
        "R - Medicine|RD1 - RD811 Surgery|RD120.6 - RD129.8 Transplantation of organs, tissues, etc.",460,
        "R - Medicine|RD1 - RD811 Surgery|RD137 - RD145 Surgery in childhood, adolescence, pregnancy, old age",222,
        "R - Medicine|RD1 - RD811 Surgery|RD151 - RD498 Military and naval surgery",99,
        "R - Medicine|RD1 - RD811 Surgery|RD32 - RD33.9 Operative surgery. Technique of surgical operations",355,
        "R - Medicine|RD1 - RD811 Surgery|RD49 - RD52 Surgical therapeutics. Preoperative and postoperative care",102,
        "R - Medicine|RD1 - RD811 Surgery|RD520 - RD599.5 Surgery by region, system, or organ",3633,
        "R - Medicine|RD1 - RD811 Surgery|RD63 - RD76 Operating rooms and theaters. Instruments, apparatus, and appliances",118,
        "R - Medicine|RD1 - RD811 Surgery|RD651 - RD678 Neoplasms. Tumors. Oncology",268,
        "R - Medicine|RD1 - RD811 Surgery|RD680 - RD688 Diseases of the locomotor system (Surgical treatment)",145,
        "R - Medicine|RD1 - RD811 Surgery|RD701 - RD811 Orthopedic surgery",1349,
        "R - Medicine|RD1 - RD811 Surgery|RD701 - RD811 Orthopedic surgery|RD792 - RD811 Physical rehabilitation",78,
        "R - Medicine|RD1 - RD811 Surgery|RD75 - RD79 Examinations. Diagnosis",103,
        "R - Medicine|RD1 - RD811 Surgery|RD78.3 - RD87.3 Anesthesiology",706,
        "R - Medicine|RD1 - RD811 Surgery|RD91 - RD91.5 Asepsis and antisepsis. Sterilization (Operative)",12,
        "R - Medicine|RD1 - RD811 Surgery|RD92 - RD97.8 Emergency surgery. Wounds and injuries",669,
        "R - Medicine|RD1 - RD811 Surgery|RD98 - RD98.4 Surgical complications",40,
        "R - Medicine|RD1 - RD811 Surgery|RD99 - RD99.35 Surgical nursing",71,
        "R - Medicine|RE1 - RE994 Opthamology",2345,
        "R - Medicine|RE1 - RE994 Opthamology|RE91 - RE912 Particular diseases of the eye",956,
        "R - Medicine|RE1 - RE994 Opthamology|RE918 - RE921 Color vision tests, charts, etc.",3,
        "R - Medicine|RE1 - RE994 Opthamology|RE925 - RE939 Refraction and errors of refraction and accommodation",60,
        "R - Medicine|RE1 - RE994 Opthamology|RE939.2 - RE981 Optometry. Opticians. Eyeglasses",117,
        "R - Medicine|RE1 - RE994 Opthamology|RE986 - RE988 Artificial eyes and other prostheses",8,
        "R - Medicine|RE1 - RE994 Opthamology|RE991 - RE991 Ocular therapeutics",2,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology",1401,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology|RF110 - RF320 Otology. Diseases of the ear",753,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology|RF341 - RF437 Rhinology. Diseases of the nose, accessory sinuses, and nasopharynx",94,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology|RF460 - RF547 Laryngology. Diseases of the throat",156,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics",6127,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG104 - RG104.7 Operative gynecology",116,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG133 - RG137.6 Conception. Artificial insemination. Contraception",875,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG159 - RG208 Functional and systemic disorders. Endocrine gynecology",283,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG211 - RG483 Abnormalities and diseases of the female genital organs",204,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG484 - RG485 Urogynecology and obstetric urology. Urogynecologic surgery",35,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG491 - RG499 Diseases of the breast",171,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics",3193,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG551 - RG591 Pregnancy",625,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG600 - RG650 The embryo and fetus",810,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG651 - RG721 Labor. Parturition",199,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG725 - RG791 Obstetric operations. Operative obstetrics",219,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG801 - RG871 Puerperal state",99,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG940 - RG991 Maternal care. Prenatal care services",648,
        "R - Medicine|RJ1 - RJ570 Pediatrics",11045,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ101 - RJ103 Child health. Child health services",321,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ125 - RJ145 Physiology of children and adolescents",482,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ206 - RJ235 Nutrition and feeding of children and adolescents",456,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ242 - RJ243 Hospital care",49,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ245 - RJ247 Nursing of children. Pediatric nursing",200,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ250 - RJ250.3 Premature infants",60,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ251 - RJ325 Newborn infants (including physiology, care, treatment, diseases)",514,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ370 - RJ550 Diseases of children and adolescents",7091,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ370 - RJ550 Diseases of children and adolescents|RJ499 - RJ507 Mental disorders. Child psychiatry",4254,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ47.3 - RJ47.4 Genetic aspects",14,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ50 - RJ51 Examination. Diagnosis",79,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ52 - RJ53 Therapeutics",20,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ59 - RJ60 Infant and neonatal morbidity and mortality",30,
        "R - Medicine|RK1 - RK715 Dentistry",3508,
        "R - Medicine|RK1 - RK715 Dentistry|RK301 - RK493 Oral and dental medicine. Pathology. Diseases",708,
        "R - Medicine|RK1 - RK715 Dentistry|RK501 - RK519 Operative dentistry. Restorative dentistry",199,
        "R - Medicine|RK1 - RK715 Dentistry|RK520 - RK528 Orthodontics",308,
        "R - Medicine|RK1 - RK715 Dentistry|RK529 - RK535 Oral surgery",99,
        "R - Medicine|RK1 - RK715 Dentistry|RK58 - RK59.3 Practice of dentistry. Dental economics",120,
        "R - Medicine|RK1 - RK715 Dentistry|RK60.7 - RK60.8 Preventive dentistry",62,
        "R - Medicine|RK1 - RK715 Dentistry|RK641 - RK667 Prosthetic dentistry. Prosthodontics",333,
        "R - Medicine|RL1 - RL803 Dermatology",1134,
        "R - Medicine|RL1 - RL803 Dermatology|RL110 - RL120 Therapeutics",29,
        "R - Medicine|RL1 - RL803 Dermatology|RL130 - RL169 Diseases of the glands, hair, nails",57,
        "R - Medicine|RL1 - RL803 Dermatology|RL201 - RL331 Hyperemias, inflammations, and infections of the skin",145,
        "R - Medicine|RL1 - RL803 Dermatology|RL391 - RL489 Atrophies. Hypertrophies",10,
        "R - Medicine|RL1 - RL803 Dermatology|RL701 - RL751 Diseases due to psychosomatic and nerve disorders. Dermatoneuroses",17,
        "R - Medicine|RL1 - RL803 Dermatology|RL760 - RL785 Diseases due to parasites",15,
        "R - Medicine|RL1 - RL803 Dermatology|RL87 - RL94 Care and hygiene",42,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology",7915,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM146 - RM146.7 Misues of therapeutic drugs. Medication Errors",27,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM147 - RM180 Administration of drugs and other therapeutic agents",510,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM182 - RM190 Other therapeutic procedures (including acupuncture, pneumatic aspiration, spinal puncture, pericardial puncture)",227,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM214 - RM258 Diet therapy. Diet and dietetics in disease. Dietary cookbooks",770,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM260 - RM263 Chemotherapy",165,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM265 - RM267 Antibiotic therapy. Antibiotics",52,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM270 - RM282 Immunotherapy. Serum therapy",58,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM283 - RM298 Endocrinotherapy. Organotherapy",78,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM300 - RM666 Drugs and their actions",2684,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM671 - RM671.5 Nonprescription drugs. Patent medicines",36,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM695 - RM893 Physical medicine. Physical therapy (including massage, exercise, occupational therapy, hydrotherapy, phototherapy, radiotherapy, thermotherapy, elect",1490,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM930 - RM931 Rehabilitation therapy",139,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica",3840,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS125 - RS131.9 Formularies. Collected prescriptions",186,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS139 - RS141.9 Pharmacopoeias",72,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS151.2 - RS151.9 Dispensatories",35,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica",2333,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS160 - RS167 Pharmacognosy. Pharmaceutical substances (plant, animal, and inorganic)",464,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS189 - RS190 Assay methods. Standardization. Analysis",189,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS192 - RS199 Pharmaceutical technology",74,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS200 - RS201 Pharmaceutical dosage forms",46,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS250 - RS252 Commercial preparations. Patent medicines",9,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS355 - RS356 Pharmaceutical supplies",3,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS400 - RS431 Pharmaceutical chemistry",559,
        "R - Medicine|RT1 - RT120 Nursing",5529,
        "R - Medicine|RT1 - RT120 Nursing|RT89 - RT120 Specialties in nursing",696,
        "R - Medicine|RV1 - RV431 Botanic, Thomsonian, and eclectic medicine",40,
        "R - Medicine|RX1 - RX681 Homeopathy",94,
        "R - Medicine|RX1 - RX681 Homeopathy|RX211 - RX581 Diseases, treatment, etc.",15,
        "R - Medicine|RX1 - RX681 Homeopathy|RX601 - RX675 Materia medica and therapeutics",11,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine",266,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ201 - RZ275 Chiropractic",63,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ301 - RZ397.5 Osteopathy",39,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ400 - RZ408 Mental healing",81,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ409.7 - RZ999 Miscellaneous systems and treatments (including magnetotherapy, mesmerism, naturopathy, organomic medicine, phrenology, radiesthesia, etc.)",61,
        "S - Agriculture",59880,
        "S - Agriculture|S1 - S946.5 Agriculture (General)",18490,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S107 - S109 Economic botany",5,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S113.2 - S118.46 Seeds. Seed technology",5,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S119 - S124 Propagation (including breeding, selection, grafting, air layering)",8,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S419 - S482 History",1584,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S530 - S559 Agricultural education",817,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S560 - S571.5 Farm economics. Farm management. Agricultural mathematics",306,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S583 - S587.73 Agricultural chemistry. Agricultural chemicals",284,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S588.4 - S589.6 Agricultural physics",45,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S589.75 - S589.76 Agriculture and the environment",75,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S589.8 - S589.87 Plant growing media. Potting soils",1,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S590 - S599.9 Soils. Soil science (Including soil surveys, soil chemistry, soil structure, soil-plant relationships)",2406,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S600 - S600.7 Agricultural meteorology. Crops and climate",125,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S602 - S604.37 Methods and systems of culture. Cropping systems",80,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S604.5 - S604.64 Agricultural conservation",35,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S604.8 - S621.5 Melioration: Improvement, reclamation, fertilization, irrigation, etc. of lands",409,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S604.8 - S621.5 Melioration: Improvement, reclamation, fertilization, irrigation, etc. of lands|S606 - S621.5 Special classes of lands and reclamation methods (including woodlands, burning of lands, deserts, saline environments, moors)",259,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S622 - S627 Soil conservation and protection",355,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S631 - S667 Fertilizers and improvement of the soil",269,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S671 - S760.5 Farm machinery and farm engineering",206,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S71 - S87 History",31,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S770 - S790.3 Agricultural structures. Farm buildings",7,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S900 - S946.5 Conservation of natural resources (Including land conservation)",553,
        "S - Agriculture|SB1 - SB1110 Plant culture",15072,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB170 - SB172.5 Tree crops",24,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB175 - SB177 Food crops",67,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB183 - SB317 Field crops (including cereals, forage crops, grasses, legumes, root crops, sugar plants, textile plants, alkaloidal plants, medicinal plants)",1941,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB317.5 - SB319.86 Horticulture. Horticultural crops",143,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB320 - SB353.5 Vegetables",630,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB354 - SB402 Fruit culture and orchard care",672,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB354 - SB402 Fruit culture and orchard care|SB381 - SB386 Berries and Small Fruits",21,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB354 - SB402 Fruit culture and orchard care|SB387 - SB399 Grape Culture, Viticulture",115,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants",2714,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB406.7 - SB406.83 Plant propagation",3,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB409 - SB413 Culture of Individual plants",245,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB414.6 - SB417 Greenhouses and greenhouse culture",79,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB418 - SB418.4 Container gardening",35,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB419 - SB419.3 Indoor gardening and houseplants",124,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB421 - SB439.8 Classes of plants (including annuals, climbers, ferns, lawns, perennials, shrubs)",1205,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB441 - SB441.75 Flower shows. Exhibitions",3,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB442.8 - SB443.4 Marketing, cut flower industry",20,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB444 - SB446.6 Horticultural service industry",8,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB449 - SB450.87 Flower arrangement and decoration",121,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB450.9 - SB467.8 Gardens and gardening",1815,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB469 - SB476 Landscape gardening. Landscape architecture",971,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB481 - SB485 Parks and public reservations (including works on theory, management, history)",503,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases",3509,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB610 - SB615 Weeds, parasitic plants, etc.",332,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB617 - SB618 Poisonous plants",22,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB621 - SB795 Plant pathology",838,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB818 - SB945 Economic entomology",428,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB950 - SB990.5 Pest control and treatment of diseases. Plant protection",825,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB992 - SB998 Economic zoology applied to crops. Agricultural zoology (including animals injurious and beneficial to plants)",57,
        "S - Agriculture|SD1 - SD669.5 Forestry",8553,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD131 - SD247.5 History of forestry. Forest conditions",1607,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD250 - SD363.3 Forestry education",151,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD390 - SD390.43 Forest soils",33,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD390.5 - SD390.7 Forest meteorology. Forest microclimatology",20,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD391 - SD410.9 Sylviculture",826,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD411 - SD428 Conservation and protection",674,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD430 - SD557 Exploitation and utilization",654,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD561 - SD669.5 Administration. Policy",270,
        "S - Agriculture|SF1 - SF1100 Animal culture",5215,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF101 - SF103.5 Brands and branding, and other means of identifying",8,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF105 - SF109 Breeding",93,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF111 - SF113 Cost, yield, and profit. Accounting",2,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF114 - SF121 Exhibitions",7,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF170 - SF180 Working animals",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF191 - SF275 Cattle",495,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF191 - SF275 Cattle|SF221 - SF250 Horses",121,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF191 - SF275 Cattle|SF250.5 - SF275 Horse sports. Horse shows",160,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF361 - SF361.73 Donkeys",6,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF371 - SF379 Sheep. Wool",109,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF380 - SF388 Goats",25,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF391 - SF397.83 Swine",79,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF402 - SF405 Fur-bearing animals",13,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF405.5 - SF407 Laboratory animals",78,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF408 - SF408.6 Zoo animals",17,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF41 - SF55 History",51,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets",692,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF421 - SF440.2 Dogs. Dog racing",373,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF441 - SF450 Cats",120,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF451 - SF455 Rabbits and hares",18,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF456 - SF458.83 Fishes. Aquariums",55,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF461 - SF473 Birds",33,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF481 - SF507 Poultry. Eggs",164,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF508 - SF510 Game birds",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF511 - SF511.5 Ostrich",3,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF515 - SF515.5 Reptiles",1,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF521 - SF539.8 Bee culture",170,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF541 - SF560 Sericulture. Silk culture",35,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine",1667,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF756.5 - SF769.5 Special preclinical sciences (including veterinary genetics, ethology, anatomy, physiology, embryology)",188,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF780.2 - SF780.7 Veterinary microbiology, bacteriology, virology, mycology",21,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF781 - SF809 Communicable diseases of animals (General)",80,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF811 - SF909 Veterinary medicine of special organs, regions, and systems",97,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF911 - SF914.4 Veterinary surgery",60,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF911 - SF914.4 Veterinary surgery|SF914.3 - SF914.4 Veterinary traumatology. Veterinary emergencies",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF915 - SF919.5 Veterinary pharmacology",58,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF951 - SF997.5 Diseases of special classes of animals",485,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF84 - SF84.64 Economic zoology",18,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF84.82 - SF85.6 Rangelands. Range management. Grazing",113,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF95 - SF99 Feeds and feeding. Animal nutrition",133,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling",4457,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture",625,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture|SH151 - SH179 Fish culture",368,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture|SH151 - SH179 Fish culture|SH171 - SH179 Diseases and adverse factors",152,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture|SH33 - SH134.6 By region or country",103,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries",2527,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH213 - SH216.55 By oceans and seas",61,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH219 - SH321 By region or country",602,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH327.5 - SH327.7 Fishery resources. Fishery conservation",48,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH328 - SH329 Fishery management. Fishery policy",259,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH334.5 - SH334.7 Fishery technology",6,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH334.9 - SH336.5 Fishery processing",55,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH343.2 - SH343.3 Fishery oceanography. Fishery meteorology",7,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH344 - SH344.8 Methods and gear. Catching of fish",48,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH346 - SH351 Fishery for individual species",45,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH360 - SH363 Seal fisheries. Fur sealing",12,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH365 - SH380.92 Shellfish fisheries. Shellfish culture",164,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH381 - SH385 Whaling",122,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH388.7 - SH391.5 Algae culture. Seaweed",35,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH400 - SH400.8 Seafood gathering",4,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH401 - SH691 Angling (including tackle, casting, methods of angling, angling for special kinds of fish)",387,
        "S - Agriculture|SK1 - SK663 Hunting",1377,
        "S - Agriculture|SK1 - SK663 Hunting|SK281 - SK293 Special methods and types of hunting (including bolos, game calling, tracking, trapping, dressing)",64,
        "S - Agriculture|SK1 - SK663 Hunting|SK281 - SK293 Special methods and types of hunting (including bolos, game calling, tracking, trapping, dressing)|SK284 - SK287 Fox hunting",33,
        "S - Agriculture|SK1 - SK663 Hunting|SK281 - SK293 Special methods and types of hunting (including bolos, game calling, tracking, trapping, dressing)|SK291 - SK292 Coursing",1,
        "S - Agriculture|SK1 - SK663 Hunting|SK295 - SK305 Big game",43,
        "S - Agriculture|SK1 - SK663 Hunting|SK311 - SK335 Bird hunting. Fowling",127,
        "S - Agriculture|SK1 - SK663 Hunting|SK351 - SK579 Wildlife management. Game protection",447,
        "S - Agriculture|SK1 - SK663 Hunting|SK37 - SK39.5 Shooting",7,
        "S - Agriculture|SK1 - SK663 Hunting|SK40 - SK268 By country",275,
        "S - Agriculture|SK1 - SK663 Hunting|SK590 - SK593 Wild animal trade",10,
        "S - Agriculture|SK1 - SK663 Hunting|SK650 - SK664 Wildlife-related recreation",4,
        "T - Technology.",159746,
        "T - Technology.|T1 - T995 Technology (General)",13486,
        "T - Technology.|T1 - T995 Technology (General)|T11.95 - T12.5 Industrial directories",71,
        "T - Technology.|T1 - T995 Technology (General)|T14.7 - T33 History of technology",792,
        "T - Technology.|T1 - T995 Technology (General)|T173.2 - T174.5 Technological change",906,
        "T - Technology.|T1 - T995 Technology (General)|T175 - T178 Industrial research. Research and development",355,
        "T - Technology.|T1 - T995 Technology (General)|T201 - T342 Patents. Trademarks",475,
        "T - Technology.|T1 - T995 Technology (General)|T351 - T385 Mechanical drawing. Engineering graphics",404,
        "T - Technology.|T1 - T995 Technology (General)|T391 - T995 Exhibitions. Trade shows. World's fairs",377,
        "T - Technology.|T1 - T995 Technology (General)|T55 - T55.3 Industrial satety. Industrial accident prevention",246,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering",4744,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T57 - T57.97 Applied mathematics. Quantitative methods",1629,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T57 - T57.97 Applied mathematics. Quantitative methods|T57.6 - T57.97 Operations research. Systems analysis",1517,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T58.5 - T58.64 Information technology",1795,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T58.5 - T58.64 Information technology|T58.6 - T58.62 Management information systems",641,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T58.7 - T58.8 Production capacity. Manufacturing capacity",9,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T59 - T59.2 Standardization",20,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T59.7 - T59.77 Human engineering in industry. Man-machine systems",57,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T60 - T60.8 Work measurement. Methods engineering",96,
        "T - Technology.|T1 - T995 Technology (General)|T61 - T173 Technical education. Technical schools",534,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)",21685,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA1001 - TA1280 Transportation engineering",383,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA1501 - TA1820 Applied optics. Photonics",6153,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA166 - TA167 Human engineering",340,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA170 - TA171 Environmental engineering",187,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA177.4 - TA185 Engineering economy",73,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA190 - TA195 Management of engineering works",107,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA197 - TA198 Engineering meteorology",2,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA2001 - TA2040 Plasma engineering. Applied plasma dynamics",30,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA213 - TA215 Engineering machinery, tools, and implements",2,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA329 - TA348 Engineering mathematics. Engineering analysis",1053,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA349 - TA359 Mechanics of engineering. Applied mechanics",1127,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA365 - TA367 Acoustics in engineering. Acoustical engineering",60,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA401 - TA492 Materials of engineering and construction. Mechanics of materials",6372,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA501 - TA625 Surveying",279,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA630 - TA695 Structural engineering (General)",1266,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA703 - TA712 Engineering geology. Rock mechanics. Soil mechanics. Underground construction",732,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA715 - TA787 Earthwork. Foundations",125,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA800 - TA820 Tunneling. Tunnels",57,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.",3654,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC160 - TC181 Technical hydraulics",387,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC183 - TC201 General preliminary operations. Dredging. Submarine building",14,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC203 - TC380 Harbors and coast protective works. Coastal engineering. Lighthouses",317,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC401 - TC506 River, lake, and water-supply engineering (General)",933,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC530 - TC537 River protective works. Regulation. Flood control",81,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC540 - TC558 Dams. Barrages",137,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC601 - TC791 Canals and inland navigation. Waterways",270,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC801 - TC978 Irrigation engineering. Reclamation of wasteland. Drainage",1204,
        "T - Technology.|TC1501 - TC1800 Ocean engineering",113,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.",13047,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD1020 - TD1066 Hazardous substances and their disposal",259,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD159 - TD168 Municipal engineering",155,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD169 - TD171.8 Environmental protection",740,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD172 - TD193.5 Environmental pollution",959,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD194 - TD195 Environmental effects of industries and plants",326,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes",4580,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes|TD419 - TD428 Water pollution",878,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes|TD429.5 - TD480.7 Water purification. Water treatment and conditioning. Saline water conversion",644,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes|TD481 - TD493 Water distribution systems",94,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD511 - TD780 Sewage collection and disposal systems",892,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD783 - TD812.5 Municipal refuse. Solid wastes",768,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD813 - TD870 Street cleaning. Litter and its removal",23,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD878 - TD894 Special types of environmental pollution (including soil, air, and noise pollution)",1635,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD895 - TD899 Industrial and factory sanitation",620,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD895 - TD899 Industrial and factory sanitation|TD896 - TD899 Industrial and factory wastes",616,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD920 - TD934 Rural and farm sanitary engineering",108,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD940 - TD949 Low temperature sanitary engineering",1,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements",2986,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE175 - TE176.5 Highway design. Interchanges and intersections",125,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE177 - TE178.8 Roadside development. Landscaping",29,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE200 - TE205 Materials for roadmaking",33,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE206 - TE209.5 Location engineering",9,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE210 - TE228.3 Construction details (including foundations, maintenance, equipment)",322,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE250 - TE278.8 Pavements and paved roads",122,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE279.5 - TE298 Pedestrian facilities",48,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE279.5 - TE298 Pedestrian facilities|TE280 - TE295 Sidewalks. Footpaths. Flagging",3,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation",1104,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF1300 - TF1620 High speed ground transportation",29,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF200 - TF320 Railway construction",113,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF340 - TF499 Railway equipment and supplies",31,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF501 - TF668 Railway operation and management",77,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF670 - TF851 Local and light railways",117,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF670 - TF851 Local and light railways|TF840 - TF851 Elevated railways and subways",42,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF855 - TF1127 Electric railways",47,
        "T - Technology.|TG1 - TG470 Bridge engineering.",432,
        "T - Technology.|TH1 - TH9745 Building construction",2971,
        "T - Technology.|TH1 - TH9745 Building construction|TH1000 - TH1725 Systems of building construction.",278,
        "T - Technology.|TH1 - TH9745 Building construction|TH2025 - TH3000 Details in building design and construction (including walls, roofs)",148,
        "T - Technology.|TH1 - TH9745 Building construction|TH3301 - TH3411 Maintenance and repair",77,
        "T - Technology.|TH1 - TH9745 Building construction|TH4021 - TH4977 Buildings: Construction with reference to use (including public buildings, dwellings)",424,
        "T - Technology.|TH1 - TH9745 Building construction|TH5011 - TH5701 Construction by phase of work",70,
        "T - Technology.|TH1 - TH9745 Building construction|TH6014 - TH6081 Environmental engineering of buildings. Sanitary engineering of buildings",77,
        "T - Technology.|TH1 - TH9745 Building construction|TH6101 - TH6887 Plumbing and pipefitting",67,
        "T - Technology.|TH1 - TH9745 Building construction|TH7005 - TH7699 Heating and ventilation. Air conditioning",309,
        "T - Technology.|TH1 - TH9745 Building construction|TH7700 - TH7975 Illumination. Lighting",55,
        "T - Technology.|TH1 - TH9745 Building construction|TH8001 - TH8581 Decoration and decorative furnishings",4,
        "T - Technology.|TH1 - TH9745 Building construction|TH845 - TH895 Architectural engineering. Structural engineering of buildings",181,
        "T - Technology.|TH1 - TH9745 Building construction|TH900 - TH915 Construction equipment in buildings",12,
        "T - Technology.|TH1 - TH9745 Building construction|TH9025 - TH9745 Protection of fuildings (including protection from dampness, fire, burglary)",504,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery",7879,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1040 - TJ1119 Machinery exclusive of prime movers",213,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1125 - TJ1345 Machine shops and machine shops practice",313,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1350 - TJ1418 Hoisting and conveying machinery",27,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1425 - TJ1475 Lifting and pressing machinery",4,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1480 - TJ1496 Agricultural machinery. Farm machinery",5,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1501 - TJ1519 Sewing machines",6,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ163.12 - TJ163.25 Power resources",740,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ163.26 - TJ163.5 Energy conservation",237,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ170 - TJ179 Mechanics applied to machinery. Dynamics",76,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ181 - TJ210 Mechanical movements",56,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ210.2 - TJ211.47 Mechanical devices and figures. Automata. Ingenious mechanisms. Robots (General)",1201,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ212 - TJ225 Control engineering systems. Automatic machinery (General)",1296,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ227 - TJ240 Machine design and drawing",44,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ241 - TJ254.7 Machine construction (General)",66,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ255 - TJ265 Heat engines",197,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ266 - TJ267.5 Turbines. Turbomachines (General)",29,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ268 - TJ740 Steam engineering",239,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ268 - TJ740 Steam engineering|TJ603 - TJ695 Locomotives",74,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ751 - TJ805 Miscellaneous motors and engines (including gas, gasoline, diesel engines)",144,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ807 - TJ830 Renewable energy sources",1179,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ836 - TJ927 Hydraulic machinery",172,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ940 - TJ940.5 Vacuum technology",54,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ950 - TJ1030 Pneumatic machinery",26,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.",31738,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK1001 - TK1841 Production of electric energy or power. Powerplants. Central stations",1419,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK2000 - TK2891 Dynamoelectric machinery and auxiliaries (including generators, transformers, motors)",251,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK2896 - TK2985 Production of electricity by direct electricity conversion",653,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK3001 - TK3521 Distribution or transmission of electric power",618,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK301 - TK399 Electric meters",18,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK4001 - TK4102 Applications of electric power",127,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK4125 - TK4399 Electric lighting",70,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK452 - TK454.4 Electric apparatus and materials. Electric circuits. Electric networks",111,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK4601 - TK4661 Electric heating",24,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK5101 - TK6720 Telecommunication (including telegraphy, telephone, radio, radar, television)",15246,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK7800 - TK8360 Electronics",10960,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK7800 - TK8360 Electronics|TK7885 - TK7895 Computer engineering. Computer hardware",868,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK7800 - TK8360 Electronics|TK8300 - TK8360 Photoelectronic devices (General)",410,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK9001 - TK9401 Nuclear engineering. Atomic power",1190,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK9900 - TK9971 Electricity for amateurs. Amateur constructors' manuals",54,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics",9066,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL1 - TL484 Motor vehicles. Cycles",2260,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL500 - TL777 Aeronautics. Aeronautical engineering",4156,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL780 - TL785.8 Rocket propulsion. Rockets",217,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL787 - TL4050 Astronautics. Space travel",2426,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.",8797,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN400 - TN580 Ore deposits and mining of particular metals",722,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN600 - TN799 Metallurgy",821,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN799.5 - TN948 Nonmetallic minerals",2608,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN950 - TN997 Building and ornamental stones",133,
        "T - Technology.|TP1 - TP1185 Chemical technology.",9723,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP1080 - TP1185 Polymers and polymer manufacture",462,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP155 - TP156 Chemical engineering",496,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP200 - TP248 Manufacture and use of chemicals",394,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP248.13 - TP248.65 Biotechnology",1185,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP250 - TP261 Industrial electrochemistry",36,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP267.5 - TP301 Explosives and pyrotechnics",118,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP315 - TP360 Fuel",865,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP368 - TP456 Food processing and manufacture",989,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP480 - TP498 Low temperature engineering. Cyrogenic engineering. Refrigeration",121,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP500 - TP660 Fermentation industries. Beverages. Alcohol",804,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP670 - TP699 Oils, fats, and waxes",323,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP670 - TP699 Oils, fats, and waxes|TP690 - TP692.5 Petroleum refining. Petroleum products",198,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP700 - TP746 Illuminating industries (Nonelectric)",39,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP751 - TP762 Gas industry",89,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP785 - TP869 Clay industries. Ceramics. Glass",645,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP875 - TP888 Cement industries",41,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP890 - TP933 Textile bleaching, dyeing, printing, etc.",146,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP934 - TP945 Paints, pigments, varnishes, etc.",74,
        "T - Technology.|TR1 - TR1050 Photography",13344,
        "T - Technology.|TR1 - TR1050 Photography|TR250 - TR265 Cameras",46,
        "T - Technology.|TR1 - TR1050 Photography|TR287 - TR500 Photographic Processing",166,
        "T - Technology.|TR1 - TR1050 Photography|TR504 - TR508 Transparencies, Diapositives",23,
        "T - Technology.|TR1 - TR1050 Photography|TR510 - TR545 Color Photography",48,
        "T - Technology.|TR1 - TR1050 Photography|TR550 - TR581 Studio and Laboratory",40,
        "T - Technology.|TR1 - TR1050 Photography|TR590 - TR620 Lighting",96,
        "T - Technology.|TR1 - TR1050 Photography|TR624 - TR835 Applied photography (Including artistic, commercial, medical photography, photocopying processes)",8869,
        "T - Technology.|TR1 - TR1050 Photography|TR845 - TR899 Cinematography. Motion pictures",1136,
        "T - Technology.|TR1 - TR1050 Photography|TR925 - TR1050 Photomechanical processes",132,
        "T - Technology.|TS1 - TS2301 Manufactures",7305,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1060 - TS1070 Furs",1,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1080 - TS1268 Paper manufacture and trade",500,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1300 - TS1865 Textile industries",684,
        "T - Technology.|TS1 - TS2301 Manufactures|TS155 - TS194 Production management. Operations management",3834,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1870 - TS1935 Rubber industry",107,
        "T - Technology.|TS1 - TS2301 Manufactures|TS195 - TS198.8 Packaging",76,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1950 - TS1982 Animal products",121,
        "T - Technology.|TS1 - TS2301 Manufactures|TS200 - TS770 Metal manufactures. Metalworking",1184,
        "T - Technology.|TS1 - TS2301 Manufactures|TS2120 - TS2159 Cereals and grain. Milling industry",34,
        "T - Technology.|TS1 - TS2301 Manufactures|TS2220 - TS2283 Tobacco industry",46,
        "T - Technology.|TS1 - TS2301 Manufactures|TS2284 - TS2288 Animal feeds and feed mills. Pet food industry",1,
        "T - Technology.|TS1 - TS2301 Manufactures|TS800 - TS937 Wood technology. Lumber",403,
        "T - Technology.|TS1 - TS2301 Manufactures|TS800 - TS937 Wood technology. Lumber|TS840 - TS915 Wood products. Furniture",158,
        "T - Technology.|TS1 - TS2301 Manufactures|TS800 - TS937 Wood technology. Lumber|TS920 - TS937 Chemical processing of wood",44,
        "T - Technology.|TS1 - TS2301 Manufactures|TS940 - TS1047 Leather industries. Tanning",77,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts",2655,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT161 - TT170.7 Manual training. School shops",22,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT174 - TT176 Articles for children",40,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT180 - TT200 Woodworking. Furniture making. Upholstering",125,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT201 - TT203 Lathework. Turning",3,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT205 - TT267 Metalworking",68,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT300 - TT382.8 Painting. Wood finishing",39,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT341 - TT641 Nutrition. Foods and food supply",795,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT490 - TT695 Clothing manufacture. Dressmaking. Tailoring",72,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT697 - TT927 Home arts. Homecrafts (including sewing, embroidery, decorative crafts)",942,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT950 - TT979 Hairdressing. Beauty culture. Barbers' work",68,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT980 - TT999 Laundry work",6,
        "T - Technology.|TX1 - TX1110 Home economics.",9619,
        "T - Technology.|TX1 - TX1110 Home economics.|TX1100 - TX1105 Mobile home living",2,
        "T - Technology.|TX1 - TX1110 Home economics.|TX642 - TX840 Cookery",4223,
        "T - Technology.|TX1 - TX1110 Home economics.|TX851 - TX885 Dining-room service",7,
        "T - Technology.|TX1 - TX1110 Home economics.|TX901 - TX946.5 Hospitality industry. Hotels, clubs, restaurants, food service, etc.",908,
        "T - Technology.|TX1 - TX1110 Home economics.|TX950 - TX953 Taverns, barrooms, saloons",107,
        "T - Technology.|TX1 - TX1110 Home economics.|TX955 - TX985 Building operations and housekeeping",22,
        "U - Military science (General)",32276,
        "U - Military science (General)|U1 - U900 Military science (General)",8955,
        "U - Military science (General)|U1 - U900 Military science (General)|U150 - U155 Military planning",126,
        "U - Military science (General)|U1 - U900 Military science (General)|U161 - U163 Strategy",750,
        "U - Military science (General)|U1 - U900 Military science (General)|U164 - U167.5 Tactics",78,
        "U - Military science (General)|U1 - U900 Military science (General)|U21 - U22.3 War. Philosophy. Military sociology",1165,
        "U - Military science (General)|U1 - U900 Military science (General)|U250 - U255 Maneuvers (combined arms)",20,
        "U - Military science (General)|U1 - U900 Military science (General)|U263 - U264.5 Atomic warfare. Atomic weapons",602,
        "U - Military science (General)|U1 - U900 Military science (General)|U27 - U43 History of military science",798,
        "U - Military science (General)|U1 - U900 Military science (General)|U300 - U305 Artillery and rifle ranges",1,
        "U - Military science (General)|U1 - U900 Military science (General)|U310 - U310.2 War games",98,
        "U - Military science (General)|U1 - U900 Military science (General)|U320 - U325 Physical training of soldiers",10,
        "U - Military science (General)|U1 - U900 Military science (General)|U400 - U714 Military education and training",930,
        "U - Military science (General)|U1 - U900 Military science (General)|U56 - U59 Army clubs",6,
        "U - Military science (General)|U1 - U900 Military science (General)|U750 - U773 Military life, manners and customs, antiquities, etc.",163,
        "U - Military science (General)|U1 - U900 Military science (General)|U799 - U897 History of arms and armor",402,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation",10643,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA21 - UA885 By region or country",9149,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA910 - UA915 Mobilization",12,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA920 - UA925 Plans for attack and defense",2,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA926 - UA929 Civil defense",173,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA929.5 - UA929.95 War damage in industry. Industrial defense",6,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA940 - UA945 Military communication",72,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA985 - UA997 Military geography",62,
        "U - Military science (General)|UB1 - UB900 Military administration",4068,
        "U - Military science (General)|UB1 - UB900 Military administration|UB160 - UB165 Records, returns, muster rolls, etc.",18,
        "U - Military science (General)|UB1 - UB900 Military administration|UB170 - UB175 Adjutant generals' offices",2,
        "U - Military science (General)|UB1 - UB900 Military administration|UB180 - UB197 Civilian personnel departments",49,
        "U - Military science (General)|UB1 - UB900 Military administration|UB250 - UB271 Intelligence",540,
        "U - Military science (General)|UB1 - UB900 Military administration|UB273 - UB274 Sabotage",1,
        "U - Military science (General)|UB1 - UB900 Military administration|UB275 - UB277 Psychological warfare. Propaganda",34,
        "U - Military science (General)|UB1 - UB900 Military administration|UB320 - UB338 Enlistment, recruiting, etc.",426,
        "U - Military science (General)|UB1 - UB900 Military administration|UB340 - UB345 Compulsory service. Conscription and exemption",212,
        "U - Military science (General)|UB1 - UB900 Military administration|UB356 - UB369.5 Provision for veterans",482,
        "U - Military science (General)|UB1 - UB900 Military administration|UB370 - UB375 Military pensions, etc.",109,
        "U - Military science (General)|UB1 - UB900 Military administration|UB380 - UB385 Soldiers' and sailors' homes",12,
        "U - Military science (General)|UB1 - UB900 Military administration|UB407 - UB409 Warrant officers. Noncommissioned officers",16,
        "U - Military science (General)|UB1 - UB900 Military administration|UB410 - UB415 Officers",140,
        "U - Military science (General)|UB1 - UB900 Military administration|UB416 - UB419 Minorities, women, etc. in armed forces",346,
        "U - Military science (General)|UB1 - UB900 Military administration|UB440 - UB449.5 Retired military personnel",18,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation",1081,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC20 - UC258 Organization of the service. By region or country",126,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC260 - UC267 Supplies and stores",462,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC270 - UC360 Transportation",126,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC400 - UC440 Barracks. Quarters. Camps",35,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC460 - UC535 Clothing and equipment",195,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC600 - UC695 Horses. Mules. Remount service",6,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC700 - UC780 Subsistence",26,
        "U - Military science (General)|UD1 - UD495 Infantry",236,
        "U - Military science (General)|UD1 - UD495 Infantry|UD157 - UD302 Tactics. Maneuvers. Drill regulations",56,
        "U - Military science (General)|UD1 - UD495 Infantry|UD330 - UD335 Firing. Military sharpshooting",19,
        "U - Military science (General)|UD1 - UD495 Infantry|UD380 - UD425 Small arms. Swords, etc.",82,
        "U - Military science (General)|UD1 - UD495 Infantry|UD460 - UD464 Mountain troops",2,
        "U - Military science (General)|UD1 - UD495 Infantry|UD470 - UD475 Ski troops",2,
        "U - Military science (General)|UD1 - UD495 Infantry|UD480 - UD485 Airborne troops. Parachute troops",23,
        "U - Military science (General)|UD1 - UD495 Infantry|UD490 - UD495 Airmobile operations",4,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry",114,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry|UE144 - UE145 Horse cavalry",4,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry|UE157 - UE302 Tactics. Maneuvers. Drill regulations",26,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry|UE460 - UE475 Horses",9,
        "U - Military science (General)|UF1 - UF910 Artillery",743,
        "U - Military science (General)|UF1 - UF910 Artillery|UF157 - UF302 Tactics. Maneuvers. Drill regulations",18,
        "U - Military science (General)|UF1 - UF910 Artillery|UF400 - UF405 Field artillery",18,
        "U - Military science (General)|UF1 - UF910 Artillery|UF450 - UF455 Seacoast artillery",1,
        "U - Military science (General)|UF1 - UF910 Artillery|UF460 - UF465 Siege artillery",2,
        "U - Military science (General)|UF1 - UF910 Artillery|UF470 - UF475 Howitzer artillery. Mortar batteries",2,
        "U - Military science (General)|UF1 - UF910 Artillery|UF500 - UF515 Weapons systems",167,
        "U - Military science (General)|UF1 - UF910 Artillery|UF520 - UF537 Ordnance and small arms",150,
        "U - Military science (General)|UF1 - UF910 Artillery|UF540 - UF545 Arsenals, magazines, armories, etc.",20,
        "U - Military science (General)|UF1 - UF910 Artillery|UF560 - UF780 Ordnance material (Ordnance proper)",203,
        "U - Military science (General)|UF1 - UF910 Artillery|UF820 - UF830 Ballistics. Velocities and motions of projectiles",20,
        "U - Military science (General)|UF1 - UF910 Artillery|UF848 - UF856 Artillery instruments. Fire control, etc.",5,
        "U - Military science (General)|UG1 - UG620 Military engineering",1558,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG160 - UG302 Tactics and regulations",3,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG360 - UG390 Field engineering",7,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG400 - UG442 Fortification",316,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG443 - UG449 Attack and defense. Siege warfare",626,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG470 - UG474 Military surveying, topography, and mapping",36,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG500 - UG565 Technical troops and other special corps",6,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG570 - UG582 Military signaling",10,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG590 - UG613.5 Military telegraphy and telephony",44,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG615 - UG620 Military motor vehicles",37,
        "U - Military science (General)|UG1500 - UG1530 Military astronautics. Space warfare. Space surveillance",160,
        "U - Military science (General)|UG1500 - UG1530 Military astronautics. Space warfare. Space surveillance|UG1523 - UG1525 By region or country",83,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare",3229,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG1100 - UG1435 Equipment and supplies",1060,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG633 - UG635 By region or country",615,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG637 - UG639 Education and training",83,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG640 - UG645 Military aeronautical research",40,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG700 - UG705 Tactics",90,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG730 - UG735 Air defenses",40,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG760 - UG765 Aerial reconnaissance",49,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG770 - UG1045 Organization. Personnel management",161,
        "U - Military science (General)|UH20 - UH910 Other services",784,
        "U - Military science (General)|UH20 - UH910 Other services|UH20 - UH25 Chaplains",35,
        "U - Military science (General)|UH20 - UH910 Other services|UH201 - UH515 Medical and sanitary services",403,
        "U - Military science (General)|UH20 - UH910 Other services|UH520 - UH551 Care of sick and wounded. Relief societies",35,
        "U - Military science (General)|UH20 - UH910 Other services|UH600 - UH629.5 Military hygiene and sanitation",90,
        "U - Military science (General)|UH20 - UH910 Other services|UH700 - UH705 Public relations. Press. War correspondents",5,
        "U - Military science (General)|UH20 - UH910 Other services|UH750 - UH769 Military social work. Social welfare services",18,
        "U - Military science (General)|UH20 - UH910 Other services|UH800 - UH910 Recreation and information services",8,
        "V - Naval science",6186,
        "V - Naval science|V1 - V995 Naval science (General)",1608,
        "V - Naval science|V1 - V995 Naval science (General)|V160 - V165 Strategy",48,
        "V - Naval science|V1 - V995 Naval science (General)|V167 - V178 Tactics",18,
        "V - Naval science|V1 - V995 Naval science (General)|V210 - V214.5 Submarine warfare",50,
        "V - Naval science|V1 - V995 Naval science (General)|V25 - V55 History and antiquities of naval science",168,
        "V - Naval science|V1 - V995 Naval science (General)|V390 - V395 Naval research",40,
        "V - Naval science|V1 - V995 Naval science (General)|V396 - V396.5 Military oceanography",6,
        "V - Naval science|V1 - V995 Naval science (General)|V400 - V695 Naval education",106,
        "V - Naval science|V1 - V995 Naval science (General)|V66 - V69 Navy clubs",1,
        "V - Naval science|V1 - V995 Naval science (General)|V720 - V743 Naval life, manners and customs, antiquities, etc.",25,
        "V - Naval science|V1 - V995 Naval science (General)|V750 - V995 War vessels: Construction, armament, etc.",485,
        "V - Naval science|VA10 - VA750 Navies: Organization, distribution, naval situation",1272,
        "V - Naval science|VA10 - VA750 Navies: Organization, distribution, naval situation|VA400 - VA750 Other regions or countries",765,
        "V - Naval science|VA10 - VA750 Navies: Organization, distribution, naval situation|VA49 - VA395 United States",453,
        "V - Naval science|VB15 - VB345 Naval administration",224,
        "V - Naval science|VB15 - VB345 Naval administration|VB170 - VB187 Civil department",6,
        "V - Naval science|VB15 - VB345 Naval administration|VB21 - VB124 By region or country",30,
        "V - Naval science|VB15 - VB345 Naval administration|VB260 - VB275 Enlisted personnel",11,
        "V - Naval science|VB15 - VB345 Naval administration|VB307 - VB309 Warrant officers",1,
        "V - Naval science|VB15 - VB345 Naval administration|VB310 - VB315 Officers",26,
        "V - Naval science|VB15 - VB345 Naval administration|VB320 - VB325 Minorities, women, etc. in navies",25,
        "V - Naval science|VC10 - VC580 Naval maintenance",83,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC20 - VC258 Organization of service",4,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC260 - VC268 Supplies and stores",42,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC270 - VC279 Equipment of vessels, supplies, allowances, etc.",5,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC280 - VC345 Clothing and equipment",6,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC350 - VC410 Subsistence. Provisioning",8,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC412 - VC425 Navy yards and stations. Shore facilities",2,
        "V - Naval science|VD7 - VD430 Naval seamen",8,
        "V - Naval science|VD7 - VD430 Naval seamen|VD160 - VD302 Drill regulations",1,
        "V - Naval science|VD7 - VD430 Naval seamen|VD21 - VD124 By region or country",5,
        "V - Naval science|VD7 - VD430 Naval seamen|VD360 - VD390 Small arms",2,
        "V - Naval science|VE7 - VE500 Marines",240,
        "V - Naval science|VE7 - VE500 Marines|VE160 - VE302 Drill regulations",1,
        "V - Naval science|VE7 - VE500 Marines|VE23 - VE124 By region or country",193,
        "V - Naval science|VE7 - VE500 Marines|VE430 - VE435 Training camps",6,
        "V - Naval science|VF1 - VF580 Naval ordnance",55,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF160 - VF302 Ordnance instructions and drill books",4,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF21 - VF124 Naval ordnance",9,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF346 - VF348 Naval weapons systems",17,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF350 - VF375 Ordnance and arms (General)",6,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF390 - VF510 Ordnance material (Ordnance proper)",2,
        "V - Naval science|VG20 - VG2029 Minor services of navies",269,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG100 - VG475 Medical service",34,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG20 - VG25 Chaplains",1,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG50 - VG55 Coast guard and coast signal service",39,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG500 - VG505 Public relations. Press. War correspondents",3,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG70 - VG85 Naval communication by telegraphy, telephone, etc.",7,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG90 - VG95 Naval aviation",128,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine",1139,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1000 - VK1249 Lighthouse service",142,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1250 - VK1299 Shipwrecks and fires",77,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1300 - VK1491 Saving of life and property",34,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK15 - VK124 History, conditions, etc.",254,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1500 - VK1661 Pilots and pilotage",7,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK321 - VK369.8 Harbors. Ports",19,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK381 - VK397 Signaling",11,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK401 - VK529 Study and teaching",20,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK549 - VK572 Science of navigation",134,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK573 - VK587 Nautical instruments",12,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK588 - VK597 Marine hydrography. Hydrographic surveying",16,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK600 - VK794 Tide and current tables",36,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK798 - VK997 Sailing directions. Pilot guides",113,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering",1121,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM15 - VM124 History",221,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM165 - VM276 Study and teaching",2,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM295 - VM296 Contracts and specifications",1,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM298.5 - VM301 Shipbuilding industry. Shipyards",88,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM311 - VM466 Special types of vessels",293,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM595 - VM989 Marine engineering",160,
        "W - Health Sciences",1040,
        "W - Health Sciences|W1 - W925 Health Professions",33,
        "W - Health Sciences|W1 - W925 Health Professions|W1 - W28 Reference Works. General Works",7,
        "W - Health Sciences|W1 - W925 Health Professions|W32 - W64 Law. Ethics. Professional-Patient Relations",23,
        "W - Health Sciences|W1 - W925 Health Professions|W601 - W925 Forensic Sciences",1,
        "W - Health Sciences|W1 - W925 Health Professions|W601 - W925 Forensic Sciences|W775 - W867 Medicolegal Examination",1,
        "W - Health Sciences|W1 - W925 Health Professions|W82 - W83.1 Biomedical Technology",1,
        "W - Health Sciences|WA1 - WA950 Public Health",1,
        "W - Health Sciences|WB1 - WB962 Practice of Medicine",3,
        "W - Health Sciences|WB1 - WB962 Practice of Medicine|WB300 - WB962 Therapeutics",3,
        "W - Health Sciences|WB1 - WB962 Practice of Medicine|WB300 - WB962 Therapeutics|WB460 - WB555 Physical and Occupational Therapy",1,
        "W - Health Sciences|WB1 - WB962 Practice of Medicine|WB300 - WB962 Therapeutics|WB700 - WB760 Medical Climatology",1,
        "W - Health Sciences|WB1 - WB962 Practice of Medicine|WB300 - WB962 Therapeutics|WB880 - WB962 Complementary and Alternative Therapies",1,
        "W - Health Sciences|WC1 - WC950 Communicable Diseases",1,
        "W - Health Sciences|WE1 - WE890 Musculoskeletal System",1,
        "W - Health Sciences|WE1 - WE890 Musculoskeletal System|WE500 - WE600 Muscles and Tendons",1,
        "W - Health Sciences|WH1 - WH700 Hemic and Lymphatic Systems",1,
        "W - Health Sciences|WH1 - WH700 Hemic and Lymphatic Systems|WH120 - WH540 Hematologic Diseases. Immunologic Factors. Blood Banks",1,
        "W - Health Sciences|WK1 - WK920 Endocrine System",1,
        "W - Health Sciences|WK1 - WK920 Endocrine System|WK800 - WK885 Islets of Langerhans",1,
        "W - Health Sciences|WL1 - WL710 Nervous System",4,
        "W - Health Sciences|WL1 - WL710 Nervous System|WL1 - WL102.9 Reference Works. General Works",2,
        "W - Health Sciences|WL1 - WL710 Nervous System|WL200 - WL405 Central Nervous System. Disorders. Therapeutics",1,
        "W - Health Sciences|WL1 - WL710 Nervous System|WL200 - WL405 Central Nervous System. Disorders. Therapeutics|WL200 - WL302 Central Nervous System (General)",1,
        "W - Health Sciences|WL1 - WL710 Nervous System|WL700 - WL710 Sense Organs",1,
        "W - Health Sciences|WM1 - WM611 Psychiatry",1,
        "W - Health Sciences|WM1 - WM611 Psychiatry|WM270 - WM290 Substance-Related Disorders",1,
        "W - Health Sciences|WO1 - WO950 Surgery",1,
        "W - Health Sciences|WO1 - WO950 Surgery|WO1 - WO102 Reference Works. General Works",1,
        "W - Health Sciences|WU1 - WU640 Dentistry. Oral Surgery",1,
        "W - Health Sciences|WU1 - WU640 Dentistry. Oral Surgery|WU210 - WU290 Dental Anatomy. Diseases",1,
        "W - Health Sciences|WW1 - WW722.1 Ophthalmology",1,
        "W - Health Sciences|WX1 - WX225 Hospitals and Other Health Facilities",2,
        "W - Health Sciences|WX1 - WX225 Hospitals and Other Health Facilities|WX1 - WX100 Reference Works. General Works",2,
        "W - Health Sciences|WY1 - WY300 Nursing",1,
        "W - Health Sciences|WY1 - WY300 Nursing|WY1 - WY49 Reference Works",1,
        "W - Health Sciences|WZ1 - WZ350 History of Medicine",4,
        "W - Health Sciences|WZ1 - WZ350 History of Medicine|WZ100 - WZ150 Biography",1,
        "Z - Bibliography. Library Science. Information resources (general)",154776,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",51398,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography",6197,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1003 - Z1003.5 Choice of books. Books and reading. Book reviews",583,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1011 - Z1017 General bibliographies",188,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1019 - Z1033 Special classes of books. Including prohibited books, rare books, paperbacks, reprints",569,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1035 - Z1035.9 Best books",653,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1037 - Z1039 Books for special classes of persons, institutions, etc.",1327,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1041 - Z1121 Anonyms and pseudonyms",172,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography",13642,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America",4844,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America|Z1215 - Z1363 United States",2826,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America|Z1365 - Z1401 Canada. British North America",235,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America|Z1411 - Z1939 Latin America",1355,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z2000 - Z2959 Europe",5614,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z3001 - Z3496 Asia",2232,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z3501 - Z3975 Africa",769,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z4001 - Z4980 Australia. Oceania",172,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z5051 - Z7999 Subject bibliography. Subjects arranged in alphabetical sequence",25828,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z8001 - Z8999 Personal bibliography. Names of individuals arranged in alphabetical sequence",6153,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade",11680,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing",5882,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z124 - Z228 History",1481,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z231 - Z232 Printers and printing establishments",130,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z235 - Z236 Printer's marks, mottoes, etc.",19,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z240 - Z241.5 Incunabula. Block books. Including broadsides, playing cards",472,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z242.9 - Z264.5 Practical printing. Including printing as a business, layout, paper and ink, machinery, type and type founding, electrotyping, desktop publishing",1690,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z266 - Z276 Bookbinding. Book decoration",519,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z278 - Z549 Bookselling and publishing",4469,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z551 - Z656 Copyright",246,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z657 - Z659 Freedom of the press. Censorship",563,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography",2371,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z105 - Z115.5 Manuscripts. Paleography",962,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z4 - Z8 History of books and bookmaking",360,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing",762,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z102.5 - Z104.5 Cryptography. Ciphers. Invisible writing",122,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z41 - Z42.5 Autographs. Signatures",105,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z43 - Z45 Calligraphy. Penmanship",168,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z49 - Z51 Typewriters. Typewriting. Keyboards. Keyboarding",42,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z52 - Z52.5 Word processing",30,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z53 - Z102 Shorthand. Stenography. Phonography",78,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries",87924,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z662 - Z664 Collections",54427,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science",23958,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z668 - Z669.7 Library education. Research",861,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z674.2 - Z674.5 Information services. Information centers",180,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z674.7 - Z674.83 Library information networks",357,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z678 - Z678.88 Library administration and organization. Constitution",878,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z679 - Z680 Library buildings. Library architecture. Including planning, space utilization, security, safety, lighting, etc.",473,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z680.3 - Z680.6 Library communication systems",75,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z681 - Z681.3 Reproduction of library materials. Storage media of library materials",27,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z681.5 - Z681.7 Trustees. Library boards, committees, etc.",53,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z682 - Z682.4 Personnel",671,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z683 - Z683.5 Finance. Insurance",236,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z684 - Z685 Supplies. Shelving. Bookstacks",22,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books",10720,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z689 - Z689.8 Acquisition (selection, purchase, gifts, duplicates)",368,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z691 - Z692 Special classes of materials. Including manuscripts, maps, microforms, serials",17,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z693 - Z695.83 Cataloging",1888,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z695.9 - Z695.94 Indexing. Abstracting",286,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z696 - Z697 Classification and notation",859,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z699 - Z699.5 Machine methods of information and retrieval. Mechanized bibliographic control",1446,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z700.9 - Z701.5 Preservation, conservation and restoration of books, etc.",485,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z703.5 - Z703.6 Moving. Disposition of books on shelves, etc. Including discarding, weeding",27,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z711 - Z711.92 Reference work. Library service to special groups",1283,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z712 - Z714 Circulation. Loans. Charging systems",221,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z716 - Z716.1 Library extension. Library commissions. Traveling libraries",60,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z716.2 - Z718.8 Libraries in relation to special topics. Including libraries and community, libraries and television, children's libraries, libraries and students",1342,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z719 - Z725 Libraries (General)",747,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z729 - Z871 Library reports. History. Statistics",5805,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z881 - Z980 Library catalogs and bulletins",1439,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z987 - Z997 Private libraries. Book collecting. Including bibliophilism, bookplates",764,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z998 - Z1000.5 Booksellers' catalogs. Book prices",302,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)",1343,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA3150 - ZA3159 Information services. Information centers",32,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA3201 - ZA3250 Information superhighway",28,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media",794,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media|ZA4050 - ZA4460 Electronic information resources",751,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media|ZA4050 - ZA4460 Electronic information resources|ZA4150 - ZA4390 Computer network resources",382,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media|ZA4050 - ZA4460 Electronic information resources|ZA4450 - ZA4460 Databases",9,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA5050 - ZA5185 Information from specific providers",36,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA5050 - ZA5185 Information from specific providers|ZA5050 - ZA5185 Government information",36],
      "language_f":[
        "English",5814797,
        "French",334711,
        "German",325473,
        "Spanish",318540,
        "Russian",212448,
        "Chinese",124612,
        "Italian",121248,
        "Latin",90413,
        "Portuguese",46539,
        "Czech",28068,
        "Arabic",27196],
      "date_cataloged_dt":[
        "2004-10-01T04:00:00Z",3288090,
        "2022-02-22T05:00:00Z",96047,
        "2011-11-13T05:00:00Z",74819,
        "2022-04-28T04:00:00Z",68642,
        "2023-01-18T05:00:00Z",64620,
        "2017-11-01T04:00:00Z",53537,
        "2023-01-17T05:00:00Z",53291,
        "2002-01-01T05:00:00Z",48155,
        "2020-11-11T05:00:00Z",48022,
        "2023-11-13T05:00:00Z",39162,
        "2020-12-14T05:00:00Z",35859]},
    "facet_ranges":{},
    "facet_intervals":{},
    "facet_heatmaps":{}},
  "stats":{
    "stats_fields":{
      "publication_year_isort":{
        "min":500.0,
        "max":2028.0,
        "count":7852765,
        "missing":195287,
        "sum":1.5358828184E10,
        "sumOfSquares":3.0098771243822E13,
        "mean":1955.8497145909753,
        "stddev":86.83440756104171}}}}

    http_version:
  recorded_at: Tue, 20 Feb 2024 20:04:55 GMT
- request:
    method: get
    uri: https://query.discovery.trln.org/trlnbib/select?f.author_facet_f.facet.limit=11&f.available_f.facet.limit=11&f.date_cataloged_dt.facet.limit=11&f.language_f.facet.limit=11&f.lcc_callnum_classification_f.facet.limit=4501&f.lcc_callnum_classification_f.facet.sort=alpha&f.location_hierarchy_f.facet.limit=-1&f.location_hierarchy_f.facet.sort=count&f.physical_media_f.facet.limit=11&f.resource_type_f.facet.limit=11&f.subject_chronological_f.facet.limit=11&f.subject_genre_f.facet.limit=11&f.subject_geographic_f.facet.limit=11&f.subject_topical_f.facet.limit=11&facet=true&facet.field=subject_chronological_f&facet.query=date_cataloged_dt:%5BNOW-3MONTH/DAY%20TO%20NOW%5D&fq=institution_f:unc&q=book&rows=20&sort=score%20desc,%20publication_year_isort%20desc,%20title_sort_ssort_single%20asc&stats=true&stats.field=publication_year_isort&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 20 Feb 2024 20:05:00 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx/1.24.0
      Content-Security-Policy:
      - default-src 'none'; base-uri 'none'; connect-src 'self'; form-action 'self';
        font-src 'self'; frame-ancestors 'none'; img-src 'self' data:; media-src 'self';
        style-src 'self' 'unsafe-inline'; script-src 'self'; worker-src 'self';
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "responseHeader":{
    "zkConnected":true,
    "status":0,
    "QTime":1715,
    "params":{
      "f.lcc_callnum_classification_f.facet.limit":"4501",
      "facet.field":["access_type_f",
        "available_f",
        "{!ex=rollup}location_hierarchy_f",
        "resource_type_f",
        "physical_media_f",
        "subject_topical_f",
        "lcc_callnum_classification_f",
        "language_f",
        "{!ex=publication_year_isort_single}publication_year_isort",
        "author_facet_f",
        "subject_genre_f",
        "subject_geographic_f",
        "subject_chronological_f"],
      "f.available_f.facet.limit":"11",
      "f.date_cataloged_dt.facet.limit":"11",
      "f.location_hierarchy_f.facet.sort":"count",
      "f.subject_chronological_f.facet.limit":"11",
      "f.subject_genre_f.facet.limit":"11",
      "fq":"institution_f:unc",
      "sort":"score desc, publication_year_isort desc, title_sort_ssort_single asc",
      "rows":"20",
      "f.subject_geographic_f.facet.limit":"11",
      "facet.query":["date_cataloged_dt:[NOW-7DAY/DAY TO NOW]",
        "date_cataloged_dt:[NOW-1MONTH/DAY TO NOW]",
        "date_cataloged_dt:[NOW-3MONTH/DAY TO NOW]"],
      "q":"book",
      "f.language_f.facet.limit":"11",
      "f.location_hierarchy_f.facet.limit":"-1",
      "stats":"true",
      "f.physical_media_f.facet.limit":"11",
      "f.author_facet_f.facet.limit":"11",
      "f.resource_type_f.facet.limit":"11",
      "f.lcc_callnum_classification_f.facet.sort":"alpha",
      "f.subject_topical_f.facet.limit":"11",
      "facet":"true",
      "wt":"json",
      "stats.field":"publication_year_isort"}},
  "response":{"numFound":958653,"start":0,"numFoundExact":true,"docs":[
      {
        "id":"UNCb4676857",
        "isbn_number_a":["0439135257",
          "0439135265"],
        "isbn_qualifying_info_a":["",
          ""],
        "items_a":["{\"item_id\":\"i6146101\",\"loc_b\":\"lljd\",\"loc_n\":\"lljd\",\"status\":\"Available\",\"call_no\":\"JE Bruss\",\"cn_scheme\":\"ALPHANUM\"}"],
        "author_suggest":["Bruss, Deborah",
          "Beeke, Tiphanie"],
        "names_a":["{\"name\":\"Bruss, Deborah\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n99256940\"}",
          "{\"name\":\"Beeke, Tiphanie\",\"rel\":\"illustrator\",\"type\":\"contributor\",\"id\":\"https://id.loc.gov/authorities/names/nb98011425\"}"],
        "owner_a":["unc"],
        "edition_a":["1st ed."],
        "misc_id_a":["LCCN: 99059758"],
        "barcodes_a":["00024328283"],
        "language_a":["English"],
        "local_id":"b4676857",
        "shelfkey":"lc:PZ.0007.B828755--BO2001",
        "available_a":["Available"],
        "publisher_a":["Arthur A. Levine Books"],
        "rollup_id":"OCLC42955427",
        "title_suggest":["Book! book! book!"],
        "title_main":"Book! book! book!",
        "title_sort_ssort_single":"book book book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["56025623",
          "438654270",
          "732688467",
          "914451291",
          "1201943341",
          "1295695691",
          "1373238399"],
        "oclc_number":"42955427",
        "creator_main_a":["Bruss, Deborah"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"New York : Arthur A. Levine Books, 2001.\"}"],
        "note_general_a":["Unbound in two separate signatures."],
        "note_summary_a":["When the children go back to school, the animals on the farm are bored, so they go into the library in town trying to find something to do."],
        "primary_isbn_a":["0439135257",
          "0439135265"],
        "primary_oclc_a":["42955427"],
        "resource_type_a":["Book"],
        "shelf_numbers_a":["JE Bruss"],
        "subject_genre_a":["Fiction",
          "Novels"],
        "date_cataloged":"2005-04-28T04:00:00Z",
        "genre_headings_a":["Fiction"],
        "subject_suggest":["Fiction",
          "Domestic animals -- Fiction",
          "Animal sounds -- Fiction",
          "Libraries -- Fiction",
          "Books and reading -- Fiction"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Domestic animals",
          "Animal sounds",
          "Libraries",
          "Books and reading"],
        "publication_year_sort":"2001",
        "reverse_shelfkey":"lc:A0}ZZZS}ORXRSUU~~OBXZZY",
        "subject_headings_a":["Domestic animals -- Fiction",
          "Animal sounds -- Fiction",
          "Libraries -- Fiction",
          "Books and reading -- Fiction"],
        "lc_call_nos_normed_a":["PZ.0007.B828755--BO2001"],
        "location_hierarchy_a":["unc",
          "unc:uncinfy"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["ALPHANUM",
          "LC"],
        "origin_place_search_a":["New York",
          "New York (State)",
          "United States"],
        "physical_description_a":["29 unnumbered pages : color illustrations ; 26 cm"],
        "lcc_callnum_classification_a":["P - Language and literature",
          "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres",
          "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres|PZ5 - PZ90 Juvenile belles lettres"],
        "statement_of_responsibility_a":["by Deborah Bruss ; illustrated by Tiphanie Beeke."],
        "index_date":"2024-02-04T07:51:45Z"},
      {
        "id":"UNCb8553285",
        "isbn_number_a":["9780983381525",
          "0983381526"],
        "isbn_qualifying_info_a":["",
          ""],
        "items_a":["{\"item_id\":\"i11085059\",\"loc_b\":\"aada\",\"loc_n\":\"aada\",\"status\":\"Available\",\"call_no\":\"PS508.B53 A58 2011\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Agu, Regina",
          "Donnett, Nathaniel",
          "Flowers, Quincy",
          "Ighile, Egie",
          "Jemison, Steffani, 1981-",
          "Jones, Otabenga",
          "McCloud, Ayanna Jolivet",
          "Taylor, MIchael Kahlil"],
        "names_a":["{\"name\":\"Agu, Regina\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"Donnett, Nathaniel\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"Flowers, Quincy\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"Ighile, Egie\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"Jemison, Steffani, 1981-\",\"rel\":\"author, editor\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/no2013040425\"}",
          "{\"name\":\"Jones, Otabenga\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"McCloud, Ayanna Jolivet\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"Taylor, MIchael Kahlil\",\"rel\":\"author\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "barcodes_a":["00048327602"],
        "language_a":["English"],
        "local_id":"b8553285",
        "note_toc_a":["Egie Ighile -- Doing what is necessary and needs to be done : a roundtable -- Talk amongst yourselves / Nathaniel Donnett -- Two buckets back east / Quincy Flowers -- When the page hits the fan / Michael Kahlil Taylor --- Dissident  / Ayanna Jolivet McCloud -- Instruction manual / Ayanna Jolivet McCloud -- Other : from noun to verb : a Book Club meeting -- Introspection / Stefani Jamison -- Index: black mo'nin' / Regina Agu."],
        "shelfkey":"lc:PS.0508.B53.A58--2011",
        "available_a":["Available"],
        "publisher_a":["Future Plan and Program"],
        "rollup_id":"OCLC935947766",
        "title_suggest":["Book Club book"],
        "title_main":"Book Club book",
        "title_sort_ssort_single":"book club book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"935947766",
        "creator_main_a":["Agu, Regina, author"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Houston, Texas?] : Future Plan and Program, [2011]\"}"],
        "note_summary_a":["\"Book Club is a reading group and think tank incubated by Project Row Houses in Houston, Texas. The group convenes biweekly to investigate progressive, experimental, and provocative texts, with a particular focus on hard-to-find work by black authors. Book Club Book is a collection of emails, dialogues, poems, questions, fiction and memoranda by artists and writers involved with Book Club in 2010-2011.\""],
        "primary_isbn_a":["9780983381525",
          "0983381526"],
        "primary_oclc_a":["935947766"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Literary collections"],
        "date_cataloged":"2016-08-23T04:00:00Z",
        "genre_headings_a":["Literary collections"],
        "subject_suggest":["Literary collections",
          "2000-2099",
          "American literature -- African American authors",
          "African Americans -- Literary collections",
          "American literature -- 21st century",
          "African Americans",
          "American literature"],
        "physical_media_a":["Print"],
        "subject_topical_a":["American literature",
          "African American authors",
          "African Americans"],
        "publication_year_sort":"2011",
        "reverse_shelfkey":"lc:A7}ZUZR}OUW}PUR~~XZYY",
        "subject_headings_a":["2000-2099",
          "American literature -- African American authors",
          "African Americans -- Literary collections",
          "American literature -- 21st century",
          "African Americans",
          "American literature"],
        "lc_call_nos_normed_a":["PS.0508.B53.A58--2011"],
        "location_hierarchy_a":["unc",
          "unc:uncarty"],
        "publisher_location_a":["Houston, Texas?"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[Houston, Texas?]",
          "Texas",
          "United States"],
        "physical_description_a":["165 pages : illustrations ; 22 cm"],
        "subject_chronological_a":["2000-2099",
          "21st century"],
        "lcc_callnum_classification_a":["P - Language and literature",
          "P - Language and literature|PS1 - PS3626 American literature. Canadian literature",
          "P - Language and literature|PS1 - PS3626 American literature. Canadian literature|PS1 - PS3626 American literature"],
        "statement_of_responsibility_a":["Regina Agu, Nathaniel Donnett, Quincy Flowers, Egie Ighile, Steffani Jemison, Otabenga Jones & Associates, Ayanna Jolivet McCloud, Michael Kahlil Taylor. ; series editor, Steffani Jemison."],
        "index_date":"2024-02-14T19:21:47Z"},
      {
        "id":"UNCb1363648",
        "issn_primary_a":["0069-1372"],
        "items_a":["{\"item_id\":\"i1857451\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1975\",\"call_no\":\"GV54.N7 N44\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Celebrity Service International"],
        "names_a":["{\"name\":\"Celebrity Service International\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: sn 86003002",
          "LCCN (canceled or invalid): 44034955"],
        "barcodes_a":["00046629610"],
        "holdings_a":["{\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"call_no\":\"GV54.N7 N44\",\"summary\":\"1975\"}"],
        "language_a":["English"],
        "local_id":"b1363648",
        "shelfkey":"lc:GV.0054.N7.N44",
        "available_a":["Available"],
        "frequency_former_a":["Semiannual"],
        "frequency_current_a":["Annual <, 1986->"],
        "publisher_a":["Times Pub. Group, Inc., etc."],
        "rollup_id":"OCLC2088633",
        "title_suggest":["Contact book."],
        "title_main":"Contact book.",
        "title_sort_ssort_single":"contact book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["1037482277",
          "1038151046",
          "1055693791"],
        "oclc_number":"2088633",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[Towson, MD, etc., Times Pub. Group, Inc., etc.]\"}"],
        "note_general_a":["\"A trade directory of film, stage, radio, agent, hotel, producer, newspaper, night club, publishing contacts in New York city.\""],
        "primary_oclc_a":["2088633"],
        "note_issuance_a":["Issued by Celebrity Service, Inc., <1958->; by Celebrity Service International, Inc., <1986->"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Directories",
          "Reference"],
        "title_variant_a":["Cover title: Celebrity Service International contact book <1975->"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Directories"],
        "subject_suggest":["Directories",
          "Amusements -- New York (State) -- New York -- Directories",
          "Amusements -- England -- London -- Directories",
          "Amusements -- France -- Paris -- Directories",
          "Amusements -- Italy -- Rome -- Directories",
          "Amusements -- California -- Hollywood (Los Angeles) -- Directories"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Amusements"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:J4}ZZUV}CS}CVV",
        "subject_headings_a":["Amusements -- New York (State) -- New York -- Directories",
          "Amusements -- England -- London -- Directories",
          "Amusements -- France -- Paris -- Directories",
          "Amusements -- Italy -- Rome -- Directories",
          "Amusements -- California -- Hollywood (Los Angeles) -- Directories"],
        "lc_call_nos_normed_a":["GV.0054.N7.N44"],
        "location_hierarchy_a":["unc",
          "unc:unclibr"],
        "publisher_location_a":["Towson, MD, etc."],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["New York (State)",
          "New York",
          "England",
          "London",
          "France",
          "Paris",
          "Italy",
          "Rome",
          "California",
          "Hollywood (Los Angeles)"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[Towson, MD, etc.,",
          "Maryland",
          "United States"],
        "physical_description_a":["volumes ; 25 cm"],
        "lcc_callnum_classification_a":["G - Geography. Anthropology. Recreation",
          "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure"],
        "index_date":"2024-01-21T21:21:39Z"},
      {
        "id":"UNCb2111685",
        "isbn_number_a":["0224020749"],
        "isbn_qualifying_info_a":[":"],
        "items_a":["{\"item_id\":\"i3050926\",\"loc_b\":\"llda\",\"loc_n\":\"llda\",\"status\":\"Available\",\"copy_no\":\"c. 2\",\"call_no\":\"Z323 .B58 1985\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i3050925\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"call_no\":\"Z323 .B58 1985\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Blond, Anthony"],
        "names_a":["{\"name\":\"Blond, Anthony\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n85326602\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 85191505"],
        "barcodes_a":["00008576409",
          "00003355648"],
        "language_a":["English"],
        "local_id":"b2111685",
        "shelfkey":"lc:Z..0323.B58.1985",
        "available_a":["Available"],
        "publisher_a":["J. Cape"],
        "rollup_id":"OCLC13498684",
        "title_suggest":["The book book"],
        "title_main":"The book book",
        "title_sort_ssort_single":"book book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["11671196",
          "12481088",
          "59206822",
          "1008341795",
          "1167134474"],
        "oclc_number":"13498684",
        "creator_main_a":["Blond, Anthony"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"London : J. Cape, 1985.\"}"],
        "note_general_a":["Includes index.",
          "Bibliography: pages 197-199."],
        "primary_isbn_a":["0224020749"],
        "primary_oclc_a":["13498684"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Nonfiction"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "physical_media_a":["Print"],
        "subject_topical_a":["Book industries and trade",
          "Publishers and publishing"],
        "publication_year_sort":"1985",
        "reverse_shelfkey":"lc:0}}ZWXW}OUR}YQRU",
        "subject_headings_a":["Book industries and trade -- Great Britain",
          "Publishers and publishing -- Great Britain"],
        "subject_suggest":["Book industries and trade -- Great Britain",
          "Publishers and publishing -- Great Britain"],
        "lc_call_nos_normed_a":["Z..0323.B58.1985"],
        "location_hierarchy_a":["unc",
          "unc:uncinfy",
          "unc:unclibr"],
        "publisher_location_a":["London"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["Great Britain"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["London",
          "England",
          "United Kingdom"],
        "physical_description_a":["xi, 226 pages ; 23 cm"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade",
          "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z278 - Z549 Bookselling and publishing"],
        "statement_of_responsibility_a":["Anthony Blond."],
        "index_date":"2024-01-25T00:21:51Z"},
      {
        "id":"UNCb1998034",
        "isbn_number_a":["0517467836"],
        "isbn_qualifying_info_a":[""],
        "items_a":["{\"item_id\":\"i2890247\",\"loc_b\":\"llda\",\"loc_n\":\"llda\",\"status\":\"Available\",\"call_no\":\"Z1035 .G53 1985\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Gilbar, Steven"],
        "names_a":["{\"name\":\"Gilbar, Steven\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n80160650\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 84024304"],
        "barcodes_a":["00002840527"],
        "language_a":["English"],
        "local_id":"b1998034",
        "shelfkey":"lc:Z..1035.G53.1985",
        "available_a":["Available"],
        "publisher_a":["Bell Pub. Co."],
        "rollup_id":"OCLC11399145",
        "title_suggest":["The book book"],
        "title_main":"The book book",
        "title_sort_ssort_single":"book book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"11399145",
        "creator_main_a":["Gilbar, Steven"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"New York : Bell Pub. Co., 1985, c1981.\"}"],
        "primary_isbn_a":["0517467836"],
        "primary_oclc_a":["11399145"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Miscellanea",
          "Nonfiction"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Miscellanea"],
        "subject_suggest":["Miscellanea",
          "Best books",
          "Books -- Miscellanea",
          "Literary prizes",
          "Literature -- Miscellanea"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Best books",
          "Books",
          "Literary prizes",
          "Literature"],
        "publication_year_sort":"1981",
        "reverse_shelfkey":"lc:0}}YZWU}JUW}YQRU",
        "subject_headings_a":["Best books",
          "Books -- Miscellanea",
          "Literary prizes",
          "Literature -- Miscellanea"],
        "lc_call_nos_normed_a":["Z..1035.G53.1985"],
        "location_hierarchy_a":["unc",
          "unc:uncinfy"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["New York",
          "New York (State)",
          "United States"],
        "physical_description_a":["229 pages ; 22 cm"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1035 - Z1035.9 Best books"],
        "statement_of_responsibility_a":["Steven Gilbar."],
        "index_date":"2024-01-24T12:51:32Z"},
      {
        "id":"UNCb3231190",
        "isbn_number_a":["0312088035"],
        "isbn_qualifying_info_a":[":"],
        "items_a":["{\"item_id\":\"i4589713\",\"loc_b\":\"ydda\",\"loc_n\":\"ydda\",\"status\":\"Available\",\"call_no\":\"Z1034 .G54 1981\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Gilbar, Steven"],
        "names_a":["{\"name\":\"Gilbar, Steven\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n80160650\"}"],
        "owner_a":["unc"],
        "edition_a":["1st ed."],
        "misc_id_a":["LCCN: 80027703"],
        "barcodes_a":["PL00012232"],
        "language_a":["English"],
        "local_id":"b3231190",
        "shelfkey":"lc:Z..1034.G54.1981",
        "available_a":["Available"],
        "publisher_a":["St. Martin's Press"],
        "rollup_id":"OCLC7168926",
        "title_suggest":["The book book"],
        "title_main":"The book book",
        "title_sort_ssort_single":"book book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"7168926",
        "creator_main_a":["Gilbar, Steven"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"New York : St. Martin's Press, c1981.\"}"],
        "primary_isbn_a":["0312088035"],
        "primary_oclc_a":["7168926"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Miscellanea",
          "Nonfiction"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Miscellanea"],
        "subject_suggest":["Miscellanea",
          "Books -- Miscellanea",
          "Literature -- Miscellanea"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Books",
          "Literature"],
        "publication_year_sort":"1981",
        "reverse_shelfkey":"lc:0}}YZWV}JUV}YQRY",
        "subject_headings_a":["Books -- Miscellanea",
          "Literature -- Miscellanea"],
        "lc_call_nos_normed_a":["Z..1034.G54.1981",
          "Z..1034.G54"],
        "location_hierarchy_a":["unc",
          "unc:uncpark"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["New York",
          "New York (State)",
          "United States"],
        "physical_description_a":["229 pages ; 22 cm"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography",
          "Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography"],
        "statement_of_responsibility_a":["Steven Gilbar."],
        "index_date":"2024-01-29T14:51:37Z"},
      {
        "id":"UNCb3398424",
        "isbn_number_a":["0679840125",
          "067994012X"],
        "isbn_qualifying_info_a":[":",
          ""],
        "items_a":["{\"item_id\":\"i4820787\",\"loc_b\":\"lljd\",\"loc_n\":\"lljd\",\"status\":\"Available\",\"call_no\":\"J002 Brookfield\",\"cn_scheme\":\"ALPHANUM\"}"],
        "author_suggest":["Brookfield, Karen"],
        "names_a":["{\"name\":\"Brookfield, Karen\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n91052086\"}"],
        "owner_a":["unc"],
        "edition_a":["1st American ed."],
        "misc_id_a":["LCCN: 93018833"],
        "barcodes_a":["00017437463"],
        "language_a":["English"],
        "local_id":"b3398424",
        "shelfkey":"lc:Z..0004.B78.1993",
        "available_a":["Available"],
        "publisher_a":["A.A. Knopf",
          "Distributed by Random House"],
        "rollup_id":"OCLC27897806",
        "title_suggest":["Book",
          "Eyewitness books."],
        "title_main":"Book",
        "title_sort_ssort_single":"book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["1023738303",
          "1023764011",
          "1027652573",
          "1037213212"],
        "oclc_number":"27897806",
        "series_work_a":["{\"title\":[\"Eyewitness books.\"]}"],
        "creator_main_a":["Brookfield, Karen"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"New York : A.A. Knopf : Distributed by Random House, 1993.\"}"],
        "note_general_a":["Includes index."],
        "note_summary_a":["Text and photographs trace the evolution of the written word, how the alphabet grew out of pictures, the development of papermaking, bookbinding, children's books, and more."],
        "primary_isbn_a":["0679840125",
          "067994012X"],
        "primary_oclc_a":["27897806"],
        "resource_type_a":["Book"],
        "shelf_numbers_a":["J002 Brookfield"],
        "subject_genre_a":["Juvenile literature",
          "Nonfiction"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Juvenile literature"],
        "subject_suggest":["Juvenile literature",
          "Books -- History -- Juvenile literature",
          "Books -- History"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Books",
          "History"],
        "publication_year_sort":"1993",
        "reverse_shelfkey":"lc:0}}ZZZV}OSR}YQQW",
        "series_statement_a":["Eyewitness books"],
        "subject_headings_a":["Books -- History -- Juvenile literature",
          "Books -- History"],
        "lc_call_nos_normed_a":["Z..0004.B78.1993"],
        "location_hierarchy_a":["unc",
          "unc:uncinfy"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["ALPHANUM",
          "LC"],
        "origin_place_search_a":["New York",
          "New York (State)",
          "United States"],
        "physical_description_a":["63 pages : color illustrations ; 29 cm."],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography",
          "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z4 - Z8 History of books and bookmaking"],
        "statement_of_responsibility_a":["written by Karen Brookfield ; photographed by Laurence Pordes."],
        "index_date":"2024-01-30T07:21:27Z"},
      {
        "id":"UNCb1303977",
        "issn_linking_a":["8756-6788"],
        "issn_primary_a":["8756-6788"],
        "items_a":["{\"item_id\":\"i1615783\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1956\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615784\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1959\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539084\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1960\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615786\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1964\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539130\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1966\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539131\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1967\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539132\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1968\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539133\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1969\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539136\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1972\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539137\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1973\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539138\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1974\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539139\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1975\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539761\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1976\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539762\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1977\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539783\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1978\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539763\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1979\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539764\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1980\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539765\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1981\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539776\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1982\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539777\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1983\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539778\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1984\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539779\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1985\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539780\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1986\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539784\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1987\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539785\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1988\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539786\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1989\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539141\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1990\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8539142\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1991\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615787\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1992\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615788\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1993\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615789\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1994\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615790\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1995\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615791\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1996\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i8491111\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1998\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615792\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1999\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615793\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"2000\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i1615794\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"2001\",\"call_no\":\"HG4571 .N56\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["New York Stock Exchange"],
        "names_a":["{\"name\":\"New York Stock Exchange\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 85641633",
          "LCCN (canceled or invalid): 56010699"],
        "barcodes_a":["00034862818",
          "00039681460",
          "00039681585",
          "00039681709",
          "00039681237",
          "00039681353",
          "00039681479",
          "00039681594",
          "00039681718",
          "00039681246",
          "00039681362",
          "00039681488",
          "00039681825",
          "00039681941",
          "00039682209",
          "00039682067",
          "00039682183",
          "00039682307",
          "00039682076",
          "00039682192",
          "00039682316",
          "00039681843",
          "00039681969",
          "00039682325",
          "00039681852",
          "00039681978",
          "00039681601",
          "00039681727",
          "00009436336",
          "00013033335",
          "00012694220",
          "00014788303",
          "00017340502",
          "00039281981",
          "00039281990",
          "00039282007",
          "00021181329"],
        "holdings_a":["{\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"call_no\":\"HG4571 .N56\",\"summary\":\"1956, 1959-1960, 1964, 1966-1969, 1972-1996, 1998-2001\"}"],
        "language_a":["English"],
        "local_id":"b1303977",
        "shelfkey":"lc:HG.4571.N56",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["The New York Stock Exchange"],
        "rollup_id":"OCLC3805583",
        "title_suggest":["Fact book"],
        "title_main":"Fact book",
        "title_sort_ssort_single":"fact book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["1303443",
          "1538251",
          "1588276",
          "2265028",
          "26114345",
          "39817038",
          "183315270",
          "183907421",
          "191710829",
          "427352121",
          "612788434",
          "640007788",
          "979574914",
          "980072305",
          "987769571",
          "988663584",
          "990733506",
          "994456116",
          "1004906565",
          "1038148185",
          "1052905888",
          "1063997830",
          "1079945898",
          "1084923762",
          "1091133754",
          "1099049597",
          "1114112629",
          "1114938012",
          "1193380086",
          "1200432155",
          "1201022168",
          "1201824180",
          "1238183722"],
        "oclc_number":"3805583",
        "creator_main_a":["New York Stock Exchange"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[New York, N.Y.] : The New York Stock Exchange, [1956]-c2001.\"}"],
        "note_general_a":["Title from cover."],
        "primary_oclc_a":["3805583"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "title_variant_a":["Vols. for <1991-> have title: Fact book for the year ...",
          "Cover title: Fact book data <1996>-2001"],
        "date_cataloged":"2014-09-15T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "New York Stock Exchange -- Periodicals",
          "New York Stock Exchange"],
        "physical_media_a":["Print"],
        "subject_topical_a":["New York Stock Exchange"],
        "publication_year_sort":"2001",
        "reverse_shelfkey":"lc:IJ}VUSY}CUT",
        "subject_headings_a":["New York Stock Exchange -- Periodicals",
          "New York Stock Exchange"],
        "note_related_work_a":["Continued as a online resource called:  Facts & figures."],
        "note_serial_dates_a":["1956-2001."],
        "lc_call_nos_normed_a":["HG.4571.N56"],
        "location_hierarchy_a":["unc",
          "unc:unclibr"],
        "publisher_location_a":["New York, N.Y."],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[New York, N.Y.]",
          "New York (State)",
          "United States"],
        "physical_description_a":["volumes : illustrations ; 23 cm"],
        "lcc_callnum_classification_a":["H - Social sciences",
          "H - Social sciences|HG1 - HG9999 Finance"],
        "statement_of_responsibility_a":["New York Stock Exchange."],
        "index_date":"2024-01-21T15:22:03Z"},
      {
        "id":"UNCb3460824",
        "issn_primary_a":["0739-3229"],
        "items_a":["{\"item_id\":\"i4887445\",\"loc_b\":\"dcpf\",\"loc_n\":\"dcpf\",\"status\":\"In-Library Use Only\",\"vol\":\"2018\",\"call_no\":\"D 210.17/3:2018\",\"cn_scheme\":\"SUDOC\"}"],
        "author_suggest":["Naval Research Laboratory (U.S.)"],
        "names_a":["{\"name\":\"Naval Research Laboratory (U.S.)\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 83644603",
          "GPO Item Number: 407-C-2 (microfiche)"],
        "barcodes_a":["00053482783"],
        "language_a":["English"],
        "local_id":"b3460824",
        "shelfkey":"lc:U..0394.W3.N38-A",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["The Laboratory"],
        "rollup_id":"OCLC9697689",
        "title_suggest":["Fact book",
          "NRL publication."],
        "title_main":"Fact book",
        "title_sort_ssort_single":"fact book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"9697689",
        "series_work_a":["{\"title\":[\"NRL publication.\"]}"],
        "creator_main_a":["Naval Research Laboratory (U.S.)"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"Washington, D.C. : The Laboratory.\"}"],
        "note_general_a":["Description based on: 1982."],
        "primary_oclc_a":["9697689"],
        "resource_type_a":["Government publication",
          "Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "title_variant_a":["Spine title: NRL fact book <1982>-198"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Naval Research Laboratory (U.S.) -- Periodicals",
          "Naval research -- United States -- Periodicals"],
        "note_numbering_a":["Report year ends Sept. 30."],
        "physical_media_a":["Print"],
        "vendor_marc_id_a":["87001883"],
        "subject_topical_a":["Naval Research Laboratory (U.S.)",
          "Naval research"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:5}}ZWQV}3W}CWR~P",
        "series_statement_a":["NRL publication"],
        "subject_headings_a":["Naval Research Laboratory (U.S.) -- Periodicals",
          "Naval research -- United States -- Periodicals"],
        "lc_call_nos_normed_a":["U..0394.W3.N38-A"],
        "location_hierarchy_a":["unc",
          "unc:uncdavy",
          "unc:uncdavy:uncdavdoc"],
        "publisher_location_a":["Washington, D.C."],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States"],
        "call_number_schemes_a":["SUDOC",
          "LC"],
        "origin_place_search_a":["Washington, D.C.",
          "District of Columbia",
          "United States"],
        "physical_description_a":["volumes : illustrations, maps, portraits ; 28 cm."],
        "lcc_callnum_classification_a":["U - Military science (General)",
          "U - Military science (General)|U1 - U900 Military science (General)"],
        "statement_of_responsibility_a":["Naval Research Laboratory."],
        "index_date":"2024-01-30T13:21:27Z"},
      {
        "id":"UNCb3122776",
        "issn_linking_a":["1055-4742"],
        "issn_primary_a":["1055-4742"],
        "items_a":["{\"item_id\":\"i4432777\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.8(1998-1999)\"}",
          "{\"item_id\":\"i4432778\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.9(1999-2000)\"}",
          "{\"item_id\":\"i4432779\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.10(2000-2001)\"}",
          "{\"item_id\":\"i4432780\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.11(2001-2002)\"}",
          "{\"item_id\":\"i4432781\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.13(2003-2004)\"}",
          "{\"item_id\":\"i6280267\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.12:no.2-6(2002-2003)\"}",
          "{\"item_id\":\"i6280268\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.14(2004-2005)\"}",
          "{\"item_id\":\"i6352204\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.5:no.1,3-v.6:no.1(1995-1996)\"}",
          "{\"item_id\":\"i6352205\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.7:no.1,3-6(1997-1998)\"}",
          "{\"item_id\":\"i6508451\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.15(2005-2006)\"}",
          "{\"item_id\":\"i7011778\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.16(2006-2007)\"}",
          "{\"item_id\":\"i7556142\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.17(2007-2008)\"}",
          "{\"item_id\":\"i9025572\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.18(2008-2009)\"}",
          "{\"item_id\":\"i9025575\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.19(2009-2010)\"}",
          "{\"item_id\":\"i9790070\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.20(2010-2011)\"}",
          "{\"item_id\":\"i10524734\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.23(2013-2014)\"}",
          "{\"item_id\":\"i10695624\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.[21](2011-2012)\"}",
          "{\"item_id\":\"i10695629\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.22(2012-2013)\"}",
          "{\"item_id\":\"i10945508\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.24(2014-2015)\"}",
          "{\"item_id\":\"i11319489\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.25(2015-2016)\"}",
          "{\"item_id\":\"i11537878\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"status\":\"Available\",\"vol\":\"v.26(2016-2017)\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 92648932",
          "LCCN (canceled or invalid): sn 91001865",
          "Deutsche Nationalbibliografie: 018471048"],
        "barcodes_a":["00017546498",
          "00017546452",
          "00019629341",
          "00020157768",
          "00024049904",
          "00024057654",
          "00024057850",
          "00025872351",
          "00025872342",
          "00025892375",
          "00027142869",
          "00025918320",
          "00040799617",
          "00040799537",
          "10003156512",
          "00043906041",
          "00043906504",
          "00043906498",
          "00025934197",
          "00027141307",
          "00051217388"],
        "holdings_a":["{\"holdings_id\":\"c2802539\",\"loc_b\":\"llhb\",\"loc_n\":\"llhb\",\"summary\":\"v.5(1995)-v.27(2018) Some issues missing\"}"],
        "language_a":["English"],
        "local_id":"b3122776",
        "shelfkey":"lc:Z..1037.B7218",
        "available_a":["Available"],
        "frequency_former_a":["Bimonthly, 1991-"],
        "frequency_current_a":["Quarterly, Oct. 2009-"],
        "publisher_a":["American Library Association"],
        "rollup_id":"OCLC23189539",
        "title_suggest":["Book links."],
        "title_main":"Book links.",
        "title_sort_ssort_single":"book links",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["25857831",
          "731489548",
          "969081183",
          "977966577",
          "1000911582",
          "1032981796",
          "1045552518",
          "1143532087"],
        "oclc_number":"23189539",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"Chicago, IL : American Library Association, c1991-\"}"],
        "note_general_a":["Title from cover."],
        "primary_oclc_a":["23189539"],
        "supplement_to_work_a":["{\"title\":[\"Booklist\",\"(Chicago, Ill. :\",\"1969)\"],\"details\":\"Oct. 2009-\",\"issn\":\"0006-7385\"}"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals",
          "Book lists",
          "Ressource Internet (Descripteur de forme)",
          "Périodique électronique (Descripteur de forme)",
          "Lists"],
        "date_cataloged":"2008-10-30T04:00:00Z",
        "genre_headings_a":["Periodicals",
          "Book lists",
          "Ressource Internet (Descripteur de forme)",
          "Périodique électronique (Descripteur de forme)",
          "Lists"],
        "subject_suggest":["Periodicals",
          "Book lists",
          "Ressource Internet (Descripteur de forme)",
          "Périodique électronique (Descripteur de forme)",
          "Lists",
          "Children -- Books and reading -- United States -- Periodicals",
          "Best books -- United States -- Periodicals",
          "School libraries -- United States -- Book lists -- Periodicals",
          "Children's libraries -- United States -- Book lists -- Periodicals",
          "Best books",
          "Children -- Books and reading",
          "Children's libraries",
          "School libraries",
          "Children",
          "United States"],
        "note_numbering_a":["Preceded by two preliminary issues, dated May 1991 and July 1991."],
        "physical_media_a":["Print"],
        "subject_topical_a":["Children",
          "Books and reading",
          "Best books",
          "School libraries",
          "Children's libraries"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:0}}YZWS}OSXYR",
        "subject_headings_a":["Children -- Books and reading -- United States -- Periodicals",
          "Best books -- United States -- Periodicals",
          "School libraries -- United States -- Book lists -- Periodicals",
          "Children's libraries -- United States -- Book lists -- Periodicals",
          "Best books",
          "Children -- Books and reading",
          "Children's libraries",
          "School libraries",
          "Children",
          "United States"],
        "note_related_work_a":["Previously issued as an insert to: Booklist (Chicago, Ill. : 1969)."],
        "note_serial_dates_a":["Vol. 1, no. 1 (Sept. 1991)-"],
        "lc_call_nos_normed_a":["Z..1037.B7218"],
        "location_hierarchy_a":["unc",
          "unc:uncinfy"],
        "publisher_location_a":["Chicago, IL"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["Chicago, IL",
          "Illinois",
          "United States"],
        "physical_description_a":["volumes : illustrations ; 28 cm"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1037 - Z1039 Books for special classes of persons, institutions, etc."],
        "index_date":"2024-01-29T04:21:33Z"},
      {
        "id":"UNCb7865882",
        "items_a":["{\"notes\":[\"With autograph of Lucy B. Patterson--Cover.\"],\"item_id\":\"i10406442\",\"loc_b\":\"wbda\",\"loc_n\":\"wbda\",\"status\":\"In-Library Use Only\",\"vol\":\"undated\",\"call_no\":\"Cp369.6 W78m\",\"cn_scheme\":\"ALPHANUM\"}",
          "{\"item_id\":\"i10406443\",\"loc_b\":\"wbda\",\"loc_n\":\"wbda\",\"status\":\"In-Library Use Only\",\"copy_no\":\"c. 2\",\"vol\":\"undated\",\"call_no\":\"Cp369.6 W78m\",\"cn_scheme\":\"ALPHANUM\"}",
          "{\"item_id\":\"i10406444\",\"loc_b\":\"wbda\",\"loc_n\":\"wbda\",\"status\":\"In-Library Use Only\",\"vol\":\"1903/1904\",\"call_no\":\"Cp369.6 W78m\",\"cn_scheme\":\"ALPHANUM\"}"],
        "author_suggest":["Monday Afternoon Book Club (Winston-Salem, N.C.)",
          "Patterson, Lindsay, Mrs., 1865-1942"],
        "names_a":["{\"name\":\"Monday Afternoon Book Club (Winston-Salem, N.C.)\",\"rel\":\"author\",\"type\":\"creator\"}",
          "{\"name\":\"Patterson, Lindsay, Mrs., 1865-1942\",\"rel\":\"former owner\",\"type\":\"owner\",\"id\":\"https://id.loc.gov/authorities/names/no2009184246\"}"],
        "owner_a":["unc"],
        "barcodes_a":["00048452351",
          "00048452360",
          "00048452379"],
        "holdings_a":["{\"loc_b\":\"wbda\",\"loc_n\":\"wbda\",\"call_no\":\"Cp369.6 W78m\",\"summary\":\"undated issue, 1903/1904\"}"],
        "language_a":["English"],
        "local_id":"b7865882",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["Monday Afternoon Book Club"],
        "rollup_id":"OCLC883625484",
        "title_suggest":["Year book"],
        "title_main":"Year book",
        "title_sort_ssort_single":"year book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"883625484",
        "creator_main_a":["Monday Afternoon Book Club (Winston-Salem, N.C.), author"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"[Winston-Salem, North Carolina] : [Monday Afternoon Book Club]\"}"],
        "primary_oclc_a":["883625484"],
        "later_work_a":["{\"label\":\"Continued by\",\"author\":\"Monday Afternoon Book Club (Winston-Salem, N.C.).\",\"title\":[\"Annual program of the Monday Afternoon Book Club\"]}"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "shelf_numbers_a":["Cp369.6 W78m"],
        "subject_genre_a":["Periodicals"],
        "date_cataloged":"2014-07-14T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Monday Afternoon Book Club (Winston-Salem, N.C.) -- Periodicals",
          "Women -- North Carolina -- Winston-Salem -- Societies and clubs -- Periodicals",
          "Women"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Monday Afternoon Book Club (Winston-Salem, N.C.)",
          "Women",
          "Societies and clubs"],
        "subject_headings_a":["Monday Afternoon Book Club (Winston-Salem, N.C.) -- Periodicals",
          "Women -- North Carolina -- Winston-Salem -- Societies and clubs -- Periodicals",
          "Women"],
        "note_serial_dates_a":["Ceased between 1904 and 1911."],
        "location_hierarchy_a":["unc",
          "unc:uncnorn",
          "unc:uncwil",
          "unc:uncwil:uncwilncc"],
        "publisher_location_a":["Winston-Salem, North Carolina"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["North Carolina",
          "Winston-Salem"],
        "call_number_schemes_a":["ALPHANUM"],
        "origin_place_search_a":["[Winston-Salem, North Carolina]",
          "North Carolina",
          "United States"],
        "physical_description_a":["volumes ; 12-17 cm"],
        "statement_of_responsibility_a":["Monday Afternoon Book Club."],
        "index_date":"2024-02-12T20:21:31Z"},
      {
        "id":"UNCb3138956",
        "isbn_number_a":["068815252X"],
        "isbn_qualifying_info_a":[""],
        "items_a":["{\"item_id\":\"i4454755\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"call_no\":\"PN2287.G578 A3 1997\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Goldberg, Whoopi, 1955-"],
        "names_a":["{\"name\":\"Goldberg, Whoopi, 1955-\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n85176762\"}"],
        "owner_a":["unc"],
        "edition_a":["1st ed."],
        "misc_id_a":["LCCN: 97034470 //r97"],
        "barcodes_a":["00015473364"],
        "language_a":["English"],
        "local_id":"b3138956",
        "shelfkey":"lc:PN.2287.G578.A3--1997",
        "available_a":["Available"],
        "publisher_a":["Rob Weisbach Books"],
        "rollup_id":"OCLC37640445",
        "title_suggest":["Book"],
        "title_main":"Book",
        "title_sort_ssort_single":"book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["423802327",
          "732724974",
          "732816529"],
        "oclc_number":"37640445",
        "creator_main_a":["Goldberg, Whoopi, 1955-"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"New York : Rob Weisbach Books, c1997.\"}"],
        "primary_isbn_a":["068815252X"],
        "primary_oclc_a":["37640445"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Biography",
          "Nonfiction"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Biography"],
        "subject_suggest":["Biography",
          "Goldberg, Whoopi, 1955-",
          "Comedians -- United States -- Biography",
          "Motion picture actors and actresses -- United States -- Biography"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Goldberg, Whoopi, 1955-",
          "Comedians",
          "Motion picture actors and actresses"],
        "publication_year_sort":"1997",
        "reverse_shelfkey":"lc:AC}XXRS}JUSR}PW~~YQQS",
        "subject_headings_a":["Goldberg, Whoopi, 1955-",
          "Comedians -- United States -- Biography",
          "Motion picture actors and actresses -- United States -- Biography"],
        "lc_call_nos_normed_a":["PN.2287.G578.A3--1997"],
        "location_hierarchy_a":["unc",
          "unc:unclibr"],
        "publisher_location_a":["New York"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["New York",
          "New York (State)",
          "United States"],
        "physical_description_a":["240 pages ; 22 cm"],
        "lcc_callnum_classification_a":["P - Language and literature",
          "P - Language and literature|PN1 - PN6790 Literature (General)",
          "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama",
          "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater",
          "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2219.3 - PN3030 Special regions or countries"],
        "statement_of_responsibility_a":["Whoopi Goldberg."],
        "index_date":"2024-01-29T06:06:39Z"},
      {
        "id":"UNCb6042132",
        "isbn_number_a":["9781580052993",
          "1580052991"],
        "isbn_qualifying_info_a":["",
          ""],
        "items_a":["{\"item_id\":\"i7939024\",\"loc_b\":\"llda\",\"loc_n\":\"llda\",\"status\":\"Available\",\"call_no\":\"LC6619 .H83 2009\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Hudson, Cindy, 1960-"],
        "names_a":["{\"name\":\"Hudson, Cindy, 1960-\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n2009026619\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2009018099"],
        "barcodes_a":["00033749203"],
        "language_a":["English"],
        "local_id":"b6042132",
        "shelfkey":"lc:LC.6619.H83.2009",
        "available_a":["Available"],
        "publisher_a":["Seal Press",
          "Distributed by Publishers Group West"],
        "rollup_id":"OCLC316026600",
        "title_suggest":["Book by book : the complete guide to creating mother-daughter book clubs"],
        "title_main":"Book by book : the complete guide to creating mother-daughter book clubs",
        "title_sort_ssort_single":"book by book the complete guide to creating mother daughter book clubs",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"316026600",
        "creator_main_a":["Hudson, Cindy, 1960-"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"Berkeley, Calif. : Seal Press : Distributed by Publishers Group West, c2009.\"}"],
        "note_general_a":["Includes bibliographical references and index."],
        "primary_isbn_a":["9781580052993",
          "1580052991"],
        "primary_oclc_a":["316026600"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Nonfiction"],
        "date_cataloged":"2010-01-04T05:00:00Z",
        "physical_media_a":["Print"],
        "subject_topical_a":["Book clubs (Discussion groups)",
          "Group reading",
          "Mothers and daughters",
          "Social networks"],
        "publication_year_sort":"2009",
        "reverse_shelfkey":"lc:EN}TTYQ}IRW}XZZQ",
        "subject_headings_a":["Book clubs (Discussion groups)",
          "Group reading",
          "Mothers and daughters -- Social networks"],
        "subject_suggest":["Book clubs (Discussion groups)",
          "Group reading",
          "Mothers and daughters -- Social networks"],
        "lc_call_nos_normed_a":["LC.6619.H83.2009"],
        "location_hierarchy_a":["unc",
          "unc:uncinfy"],
        "publisher_location_a":["Berkeley, Calif."],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["Berkeley, Calif.",
          "California",
          "United States"],
        "physical_description_a":["297 pages ; 21 cm"],
        "lcc_callnum_classification_a":["L - Education",
          "L - Education|LC8 - LC6691 Special aspects of education",
          "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education",
          "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6601 - LC6660.4 Reading circles and correspondence clubs"],
        "statement_of_responsibility_a":["Cindy Hudson."],
        "index_date":"2024-02-07T16:07:08Z"},
      {
        "id":"UNCb5815059",
        "url_a":["{\"href\":\"http://VB3LK7EB4T.search.serialssolutions.com/?V=1.0&L=VB3LK7EB4T&S=JCs&C=BOOKLIN&T=marc\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "issn_linking_a":["1055-4742"],
        "issn_primary_a":["2163-5269"],
        "author_suggest":["EBSCO Publishing (Firm)"],
        "names_a":["{\"name\":\"EBSCO Publishing (Firm)\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2011202374"],
        "language_a":["English"],
        "local_id":"b5815059",
        "shelfkey":"lc:Z..1037.B7218",
        "available_a":["Available"],
        "frequency_former_a":["Bimonthly, 1991-"],
        "frequency_current_a":["Quarterly, Oct. 2009-"],
        "publisher_a":["American Library Association"],
        "rollup_id":"OCLC676000694",
        "this_work_a":["{\"title\":[\"Book links (Online)\"]}"],
        "title_suggest":["Book links.",
          "Australia New Zealand Reference Centre electronic journal collection."],
        "title_main":"Book links.",
        "title_sort_ssort_single":"book links",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"676000694",
        "series_work_a":["{\"title\":[\"Australia New Zealand Reference Centre electronic journal collection.\"]}"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"Chicago, IL : American Library Association, ©1991-\"}"],
        "primary_oclc_a":["676000694"],
        "supplement_to_work_a":["{\"title\":[\"Booklist\",\"(Chicago, Ill. :\",\"1969)\"],\"details\":\"Oct. 2009-\"}"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals",
          "Book lists"],
        "date_cataloged":"2023-06-14T04:00:00Z",
        "genre_headings_a":["Periodicals",
          "Book lists"],
        "subject_suggest":["Periodicals",
          "Book lists",
          "Children -- Books and reading -- United States -- Periodicals",
          "Best books -- United States -- Periodicals",
          "School libraries -- United States -- Book lists -- Periodicals",
          "Children's libraries -- United States -- Book lists -- Periodicals",
          "Best books",
          "Children -- Books and reading",
          "Children's libraries",
          "School libraries",
          "Bibliothèque pour enfants",
          "Bibliothèque scolaire",
          "Enfant",
          "Littérature de jeunesse",
          "Lecture",
          "Livre",
          "United States",
          "États-Unis"],
        "note_numbering_a":["Preceded by two preliminary issues, dated May 1991 and July 1991."],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["SSJ0012502"],
        "subject_topical_a":["Children",
          "Books and reading",
          "Best books",
          "School libraries",
          "Children's libraries",
          "Bibliothèque pour enfants",
          "Bibliothèque scolaire",
          "Enfant",
          "Littérature de jeunesse",
          "Lecture",
          "Livre"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:0}}YZWS}OSXYR",
        "subject_headings_a":["Children -- Books and reading -- United States -- Periodicals",
          "Best books -- United States -- Periodicals",
          "School libraries -- United States -- Book lists -- Periodicals",
          "Children's libraries -- United States -- Book lists -- Periodicals",
          "Best books",
          "Children -- Books and reading",
          "Children's libraries",
          "School libraries",
          "Bibliothèque pour enfants",
          "Bibliothèque scolaire",
          "Enfant",
          "Littérature de jeunesse",
          "Lecture",
          "Livre",
          "United States",
          "États-Unis"],
        "note_related_work_a":["Previously issued as an insert to: Booklist (Chicago, Ill. : 1969)."],
        "note_serial_dates_a":["Began with vol. 1, no. 1 (Sept. 1991)."],
        "lc_call_nos_normed_a":["Z..1037.B7218"],
        "publisher_location_a":["Chicago, IL"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States",
          "États-Unis"],
        "call_number_schemes_a":["LC"],
        "note_system_details_a":["Mode of access: World Wide Web."],
        "origin_place_search_a":["Chicago, IL",
          "Illinois",
          "United States"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography",
          "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1037 - Z1039 Books for special classes of persons, institutions, etc."],
        "index_date":"2024-02-07T02:21:37Z"},
      {
        "id":"UNCb4242908",
        "issn_primary_a":["1098-7371"],
        "items_a":["{\"item_id\":\"i6369849\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.1(1998)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i6369854\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.2(1999)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i6833497\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.9(2006)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i6369856\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.3(2000)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i5808027\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.5(2002)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i5808031\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.6(2003)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i6143055\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.7(2004)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i6350937\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.8(2005)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7642366\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.10(2007)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i7642367\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"v.11(2008)\",\"call_no\":\"Z4 .B645\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Society for the History of Authorship, Reading, and Publishing"],
        "names_a":["{\"name\":\"Society for the History of Authorship, Reading, and Publishing\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 98641124",
          "LCCN (canceled or invalid): sn 98000459",
          "LCCN (canceled or invalid): 00274550"],
        "barcodes_a":["00026268100",
          "00026268119",
          "00027989918",
          "00026268128",
          "00021638854",
          "00022302964",
          "00024506027",
          "00026070938",
          "00032335054",
          "00033152828"],
        "holdings_a":["{\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"call_no\":\"Z4 .B645\",\"summary\":\"v.1 (1998) - v.3 (2000), v.5 (2002) - v.11 (2008)\"}"],
        "language_a":["English"],
        "local_id":"b4242908",
        "shelfkey":"lc:Z..0004.B645",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["Pennsylvania State University Press"],
        "rollup_id":"OCLC38861285",
        "title_suggest":["Book history."],
        "title_main":"Book history.",
        "title_sort_ssort_single":"book history",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["232576962",
          "775359390",
          "973470986",
          "1001903676",
          "1009003716",
          "1011984539",
          "1016195451",
          "1049758628",
          "1238112323"],
        "oclc_number":"38861285",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"University Park, Pa. : Pennsylvania State University Press, 1998-\"}"],
        "primary_oclc_a":["38861285"],
        "note_issuance_a":["\"Annual journal of the Society for the History of Authorship, Reading and Publishing, Inc. (SHARP).\""],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Books -- History -- Periodicals",
          "Bibliography -- Periodicals",
          "Books and reading -- History -- Periodicals",
          "Book industries and trade -- History -- Periodicals",
          "Books -- English-speaking countries -- History -- Periodicals",
          "Books and reading -- English-speaking countries -- History -- Periodicals",
          "Book industries and trade -- English-speaking countries -- History -- Periodicals"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Books",
          "History",
          "Bibliography",
          "Books and reading",
          "Book industries and trade"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:0}}ZZZV}OTVU",
        "subject_headings_a":["Books -- History -- Periodicals",
          "Bibliography -- Periodicals",
          "Books and reading -- History -- Periodicals",
          "Book industries and trade -- History -- Periodicals",
          "Books -- English-speaking countries -- History -- Periodicals",
          "Books and reading -- English-speaking countries -- History -- Periodicals",
          "Book industries and trade -- English-speaking countries -- History -- Periodicals"],
        "note_serial_dates_a":["Vol. 1 (1998)-"],
        "lc_call_nos_normed_a":["Z..0004.B645"],
        "location_hierarchy_a":["unc",
          "unc:unclibr"],
        "publisher_location_a":["University Park, Pa."],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["English-speaking countries"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["University Park, Pa.",
          "Pennsylvania",
          "United States"],
        "physical_description_a":["volumes : illustrations ; 24 cm"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography",
          "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z4 - Z8 History of books and bookmaking"],
        "index_date":"2024-02-03T01:36:37Z"},
      {
        "id":"UNCb11764302",
        "url_a":["{\"href\":\"http://VB3LK7EB4T.search.serialssolutions.com/?V=1.0&L=VB3LK7EB4T&S=JCs&C=TC_053648654&T=marc\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "isbn_number_a":["146964195X",
          "9781469641959"],
        "isbn_qualifying_info_a":["",
          ""],
        "author_suggest":["Williams, David Cratis"],
        "names_a":["{\"name\":\"Williams, David Cratis\",\"type\":\"creator\"}"],
        "owner_a":["unc"],
        "local_id":"b11764302",
        "available_a":["Available"],
        "publisher_a":["Appalachian State University"],
        "rollup_id":"ssib053648654",
        "note_local_a":["Content provider: Open Access Publishing in European Networks.",
          "Vendor-supplied catalog record."],
        "title_suggest":["Book"],
        "title_main":"Book",
        "title_sort_ssort_single":"book",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "creator_main_a":["Williams, David Cratis"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"[S.l.] : Appalachian State University, 1999.\"}"],
        "primary_isbn_a":["146964195X",
          "9781469641959"],
        "host_item_work_a":["{\"title\":[\"Directory of open access books\",\"(online collection)\"]}"],
        "resource_type_a":["Book"],
        "sersol_number_a":["ssib053648654"],
        "date_cataloged":"2024-02-15T05:00:00Z",
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["SSIB053648654"],
        "publication_year_sort":"1999",
        "publisher_location_a":["S.l."],
        "record_data_source_a":["ILSMARC"],
        "physical_description_a":["1 online resource"],
        "note_access_restrictions_a":["Unlimited simultaneous users"],
        "statement_of_responsibility_a":["Williams, David Cratis."],
        "index_date":"2024-02-16T11:24:10Z"},
      {
        "id":"UNCb5815058",
        "url_a":["{\"href\":\"http://VB3LK7EB4T.search.serialssolutions.com/?V=1.0&L=VB3LK7EB4T&S=JCs&C=BOOKHISONL&T=marc\",\"type\":\"fulltext\",\"text\":\"Full text available via the UNC-Chapel Hill Libraries\"}"],
        "issn_linking_a":["1098-7371"],
        "issn_primary_a":["1529-1499"],
        "author_suggest":["Society for the History of Authorship, Reading, and Publishing",
          "EBSCO Publishing (Firm)",
          "Project MUSE"],
        "names_a":["{\"name\":\"Society for the History of Authorship, Reading, and Publishing\",\"type\":\"no_rel\"}",
          "{\"name\":\"EBSCO Publishing (Firm)\",\"type\":\"no_rel\"}",
          "{\"name\":\"Project MUSE\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 00227000"],
        "language_a":["English"],
        "local_id":"b5815058",
        "shelfkey":"lc:Z..0004",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["Pennsylvania State University Press",
          "Johns Hopkins University Press"],
        "rollup_id":"OCLC42631160",
        "this_work_a":["{\"title\":[\"Book history (Online)\"]}"],
        "title_suggest":["Book history."],
        "title_main":"Book history.",
        "title_sort_ssort_single":"book history",
        "access_type_a":["Online"],
        "institution_a":["unc"],
        "oclc_number":"42631160",
        "imprint_main_a":["{\"type\":\"imprint\",\"label\":\"<2010->\",\"value\":\"Baltimore, MD : Johns Hopkins University Press\"}"],
        "primary_oclc_a":["42631160"],
        "note_issuance_a":["Sponsored by: the Society for the History of Authorship, Reading and Publishing."],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "date_cataloged":"2023-04-11T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Books -- History -- Periodicals",
          "Bibliography -- Periodicals",
          "Books and reading -- History -- Periodicals",
          "Book industries and trade -- History -- Periodicals",
          "Books -- English-speaking countries -- History -- Periodicals",
          "Books and reading -- English-speaking countries -- History -- Periodicals",
          "Book industries and trade -- English-speaking countries -- History -- Periodicals",
          "History (General)",
          "Book Industry",
          "Bibliography",
          "Book industries and trade",
          "Books",
          "Books and reading",
          "English-speaking countries"],
        "physical_media_a":["Online"],
        "vendor_marc_id_a":["SSJ0011617"],
        "subject_topical_a":["Books",
          "History",
          "Bibliography",
          "Books and reading",
          "Book industries and trade",
          "History (General)",
          "Book Industry"],
        "imprint_multiple_a":["{\"type\":\"imprint\",\"value\":\"[University Park, Pa.] : Pennsylvania State University Press, ©1998-\"}",
          "{\"type\":\"imprint\",\"label\":\"<2010->\",\"value\":\"Baltimore, MD : Johns Hopkins University Press\"}"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:0}}ZZZV",
        "subject_headings_a":["Books -- History -- Periodicals",
          "Bibliography -- Periodicals",
          "Books and reading -- History -- Periodicals",
          "Book industries and trade -- History -- Periodicals",
          "Books -- English-speaking countries -- History -- Periodicals",
          "Books and reading -- English-speaking countries -- History -- Periodicals",
          "Book industries and trade -- English-speaking countries -- History -- Periodicals",
          "History (General)",
          "Book Industry",
          "Bibliography",
          "Book industries and trade",
          "Books",
          "Books and reading",
          "English-speaking countries"],
        "note_serial_dates_a":["Vol. 1 (1998)-"],
        "lc_call_nos_normed_a":["Z..0004"],
        "publisher_location_a":["Baltimore, MD"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["English-speaking countries"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["[University Park, Pa.]",
          "Baltimore, MD",
          "Pennsylvania",
          "United States"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography",
          "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z4 - Z8 History of books and bookmaking"],
        "index_date":"2024-02-07T02:21:37Z"},
      {
        "id":"UNCb6369430",
        "isbn_number_a":["9781897141335",
          "1897141335"],
        "isbn_qualifying_info_a":["",
          ""],
        "items_a":["{\"item_id\":\"i8402998\",\"loc_b\":\"ddda\",\"loc_n\":\"ddda\",\"status\":\"Available\",\"call_no\":\"PR9199.3.S615 B66 2010\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Sparling, Ken, 1959-"],
        "names_a":["{\"name\":\"Sparling, Ken, 1959-\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n95074573\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: 2010444744"],
        "barcodes_a":["00034808922"],
        "language_a":["English"],
        "local_id":"b6369430",
        "shelfkey":"lc:PR.91993.S615.B66--2010",
        "available_a":["Available"],
        "publisher_a":["Pedlar Press"],
        "rollup_id":"OCLC473375649",
        "title_suggest":["Book"],
        "title_main":"Book",
        "title_sort_ssort_single":"book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"473375649",
        "creator_main_a":["Sparling, Ken, 1959-"],
        "imprint_main_a":["{\"type\":\"publication\",\"value\":\"Toronto : Pedlar Press, c2010.\"}"],
        "primary_isbn_a":["9781897141335",
          "1897141335"],
        "primary_oclc_a":["473375649"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Novels"],
        "date_cataloged":"2010-09-16T04:00:00Z",
        "physical_media_a":["Print"],
        "publication_year_sort":"2010",
        "reverse_shelfkey":"lc:A8}QYQQW}7TYU}OTT~~XZYZ",
        "lc_call_nos_normed_a":["PR.91993.S615.B66--2010"],
        "location_hierarchy_a":["unc",
          "unc:uncdavy"],
        "publisher_location_a":["Toronto"],
        "record_data_source_a":["ILSMARC"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["Toronto",
          "Ontario",
          "Canada"],
        "physical_description_a":["226 pages ; 19 cm"],
        "lcc_callnum_classification_a":["P - Language and literature",
          "P - Language and literature|PR1 - PR9680 English literature",
          "P - Language and literature|PR1 - PR9680 English literature|PR8309 - PR9680 English literature: Provincial, local, etc."],
        "statement_of_responsibility_a":["Ken Sparling."],
        "index_date":"2024-02-08T09:36:58Z"},
      {
        "id":"UNCb3917178",
        "isbn_number_a":["0751526339"],
        "isbn_qualifying_info_a":[""],
        "items_a":["{\"item_id\":\"i5404091\",\"loc_b\":\"ddda\",\"loc_n\":\"ddda\",\"status\":\"Available\",\"call_no\":\"PN2287.G578 A3 1999\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Goldberg, Whoopi, 1955-"],
        "names_a":["{\"name\":\"Goldberg, Whoopi, 1955-\",\"type\":\"creator\",\"id\":\"https://id.loc.gov/authorities/names/n85176762\"}"],
        "owner_a":["unc"],
        "misc_id_a":["National Bibliography Number: GB98-V5784"],
        "barcodes_a":["00019426916"],
        "language_a":["English"],
        "local_id":"b3917178",
        "shelfkey":"lc:PN.2287.G578.A3--1999",
        "available_a":["Available"],
        "publisher_a":["Warner"],
        "rollup_id":"OCLC46848205",
        "title_suggest":["Book"],
        "title_main":"Book",
        "title_sort_ssort_single":"book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number":"46848205",
        "creator_main_a":["Goldberg, Whoopi, 1955-"],
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"London : Warner, 1999, c1997.\"}"],
        "note_general_a":["Originally published: New York, N.Y. : Rob Weisbach, 1997."],
        "primary_isbn_a":["0751526339"],
        "primary_oclc_a":["46848205"],
        "resource_type_a":["Book"],
        "subject_genre_a":["Biography",
          "Nonfiction"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Biography"],
        "subject_suggest":["Biography",
          "African American motion picture actors and actresses -- United States -- Biography"],
        "physical_media_a":["Print"],
        "subject_topical_a":["African American motion picture actors and actresses"],
        "publication_year_sort":"1997",
        "reverse_shelfkey":"lc:AC}XXRS}JUSR}PW~~YQQQ",
        "subject_headings_a":["African American motion picture actors and actresses -- United States -- Biography"],
        "lc_call_nos_normed_a":["PN.2287.G578.A3--1999"],
        "location_hierarchy_a":["unc",
          "unc:uncdavy"],
        "publisher_location_a":["London"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["United States"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["London",
          "England",
          "United Kingdom"],
        "physical_description_a":["273 pages ; 18 cm"],
        "lcc_callnum_classification_a":["P - Language and literature",
          "P - Language and literature|PN1 - PN6790 Literature (General)",
          "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama",
          "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater",
          "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2219.3 - PN3030 Special regions or countries"],
        "statement_of_responsibility_a":["Whoopi Goldberg."],
        "index_date":"2024-02-01T13:21:35Z"},
      {
        "id":"UNCb2345674",
        "items_a":["{\"item_id\":\"i3373033\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1985\",\"call_no\":\"Z323 .B65\",\"cn_scheme\":\"LC\"}",
          "{\"item_id\":\"i9005942\",\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"status\":\"Available\",\"vol\":\"1986\",\"call_no\":\"Z323 .B65\",\"cn_scheme\":\"LC\"}"],
        "author_suggest":["Publishers' Association"],
        "names_a":["{\"name\":\"Publishers' Association\",\"type\":\"no_rel\"}"],
        "owner_a":["unc"],
        "misc_id_a":["LCCN: sn 90016164"],
        "barcodes_a":["00041146777",
          "00041146893"],
        "holdings_a":["{\"loc_b\":\"trln\",\"loc_n\":\"trln\",\"call_no\":\"Z323 .B65\",\"summary\":\"1985 - 1986\"}"],
        "language_a":["English"],
        "local_id":"b2345674",
        "shelfkey":"lc:Z..0323.B65",
        "available_a":["Available"],
        "frequency_current_a":["Annual"],
        "publisher_a":["The Publishers Association"],
        "rollup_id":"OCLC21434223",
        "title_suggest":["Book trade year book."],
        "title_main":"Book trade year book.",
        "title_sort_ssort_single":"book trade year book",
        "access_type_a":["At the Library"],
        "institution_a":["unc"],
        "oclc_number_old_a":["1063385375",
          "1221762688",
          "1230887747",
          "1231188713"],
        "oclc_number":"21434223",
        "imprint_main_a":["{\"type\":\"imprint\",\"value\":\"London : The Publishers Association.\"}"],
        "note_general_a":["Description based on: 1985; title from cover."],
        "primary_oclc_a":["21434223"],
        "resource_type_a":["Journal, Magazine, or Periodical"],
        "subject_genre_a":["Periodicals"],
        "date_cataloged":"2004-10-01T04:00:00Z",
        "genre_headings_a":["Periodicals"],
        "subject_suggest":["Periodicals",
          "Book industries and trade -- Great Britain -- Periodicals"],
        "physical_media_a":["Print"],
        "subject_topical_a":["Book industries and trade"],
        "publication_year_sort":"2025",
        "reverse_shelfkey":"lc:0}}ZWXW}OTU",
        "subject_headings_a":["Book industries and trade -- Great Britain -- Periodicals"],
        "lc_call_nos_normed_a":["Z..0323.B65"],
        "location_hierarchy_a":["unc",
          "unc:unclibr"],
        "publisher_location_a":["London"],
        "record_data_source_a":["ILSMARC"],
        "subject_geographic_a":["Great Britain"],
        "call_number_schemes_a":["LC"],
        "origin_place_search_a":["London",
          "England",
          "United Kingdom"],
        "physical_description_a":["volumes : illustrations ; 30 cm"],
        "lcc_callnum_classification_a":["Z - Bibliography. Library Science. Information resources (general)",
          "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade",
          "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z278 - Z549 Bookselling and publishing"],
        "index_date":"2024-01-26T00:07:16Z"}]
  },
  "facet_counts":{
    "facet_queries":{
      "date_cataloged_dt:[NOW-7DAY/DAY TO NOW]":13921,
      "date_cataloged_dt:[NOW-1MONTH/DAY TO NOW]":25334,
      "date_cataloged_dt:[NOW-3MONTH/DAY TO NOW]":36114},
    "facet_fields":{
      "access_type_f":[
        "Online",607842,
        "At the Library",353385],
      "available_f":[
        "Available",950397],
      "location_hierarchy_f":[
        "unc",349195,
        "unc:uncdavy",152515,
        "unc:unclibr",76240,
        "unc:uncwil",48854,
        "unc:uncrarn",31895,
        "unc:uncwil:uncwilrbc",31895,
        "unc:uncinfy",25116,
        "unc:uncul",14622,
        "unc:uncnorn",13555,
        "unc:uncwil:uncwilncc",13555,
        "unc:uncarty",13535,
        "law",11477,
        "law:lawuncw",11477,
        "unc:unclawy",11477,
        "unc:uncmusy",10268,
        "unc:uncdavy:uncdavdoc",9700,
        "unc:uncscix",7222,
        "hsl",6686,
        "hsl:hsluncy",6686,
        "unc:unchsl",6686,
        "unc:uncmedr",2308,
        "unc:uncsouz",1914,
        "unc:uncwil:uncwilsfc",1914,
        "unc:uncnory",1796,
        "unc:uncsoun",1773,
        "unc:uncwil:uncwilshc",1773,
        "unc:uncpark",1422,
        "unc:uncstoy",1162,
        "unc:uncdavy:uncdavref",1031,
        "unc:uncul:unculpop",853,
        "unc:uncdavy:uncstor",695,
        "unc:uncschy",625,
        "unc:unclgby",375,
        "unc:uncmedr:uncmedrmeks",254,
        "unc:uncmary",137,
        "unc:unccarn",117,
        "unc:uncarchives",111,
        "unc:uncwil:uncwilar",111,
        "unc:uncdavy:uncdavmap",100,
        "unc:uncmusy:uncmusymult",100,
        "unc:uncmedr:uncmedrmets",79,
        "unc:unccarr",78,
        "unc:unckeny",46,
        "unc:uncherb",34,
        "unc:unclaty",31,
        "unc:uncdavy:uncdavglo",22,
        "unc:unchigy",3,
        "unc:uncgloy",1],
      "resource_type_f":[
        "Book",920649,
        "Government publication",21267,
        "Journal, Magazine, or Periodical",9567,
        "Music score",6461,
        "Video",5209,
        "Non-musical sound recording",4466,
        "Archival and manuscript material",3551,
        "Music recording",3374,
        "Thesis/Dissertation",3221,
        "Map",816,
        "Web page or site",547],
      "physical_media_f":[
        "Online",607842,
        "Print",323280,
        "Microform",20092,
        "Microfiche",9213,
        "Microfilm",4454,
        "CD",2290,
        "Microopaque",2191,
        "DVD",1741,
        "Vinyl record",905,
        "33 1/3 rpm record",851,
        "12\" record",839],
      "subject_topical_f":[
        "History",80297,
        "History and criticism",21124,
        "Politics and government",18157,
        "Social aspects",12499,
        "Women",9973,
        "Social conditions",9815,
        "Philosophy",9496,
        "Education",8149,
        "Social life and customs",7965,
        "Criticism and interpretation",7334,
        "Books and reading",7213],
      "lcc_callnum_classification_f":[
        "A - General Works",2106,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works",429,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC1 - AC195 Collections of monographs, essays, etc.",390,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC1 - AC195 Collections of monographs, essays, etc.|AC1 - AC8 American and English",274,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC1 - AC195 Collections of monographs, essays, etc.|AC9 - AC195 Other languages",48,
        "A - General Works|AC1 - AC999 Collections. Series. Collected works|AC901 - AC995 Pamphlet collections",39,
        "A - General Works|AE1 - AE88 Encyclopedias",73,
        "A - General Works|AE1 - AE88 Encyclopedias|AE5 - AE88 By language",36,
        "A - General Works|AG2 - AG600 Dictionaries and other general reference works",107,
        "A - General Works|AI1 - AI21 Indexes",15,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting",220,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting|AM10 - AM100 By country",47,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting|AM111 - AM160 Museology. Museum methods, technique, etc.",62,
        "A - General Works|AM1 - AM401 Museums. Collectors and collecting|AM200 - AM401 Collectors and collecting",18,
        "A - General Works|AN - Newspapers",4,
        "A - General Works|AP1 - AP230 Periodicals",355,
        "A - General Works|AP1 - AP230 Periodicals|AP101 - AP115 Humorous periodicals",1,
        "A - General Works|AP1 - AP230 Periodicals|AP200 - AP230 Juvenile periodicals",13,
        "A - General Works|AS1 - AS945 Academies and learned societies",358,
        "A - General Works|AS1 - AS945 Academies and learned societies|AS11 - AS785 By region or country",298,
        "A - General Works|AS1 - AS945 Academies and learned societies|AS2.5 - AS4 International associations, congresses, conferences, etc.",1,
        "A - General Works|AY10 - AY2001 Yearbooks. Almanacs. Directories",281,
        "A - General Works|AY10 - AY2001 Yearbooks. Almanacs. Directories|AY10 - AY29 Annuals",164,
        "A - General Works|AY10 - AY2001 Yearbooks. Almanacs. Directories|AY30 - AY1730 Almanacs",117,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities",200,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ101 - AZ111 Philosophy. Theory",70,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ191 - AZ193 Evaluation",10,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ200 - AZ361 History",26,
        "A - General Works|AZ101 - AZ999 History of scholarship and learning. The humanities|AZ501 - AZ908 By region or country",26,
        "B - Philosophy. Psychology. Religion",40721,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)",5383,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period",4637,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B108 - B708 Ancient",989,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B720 - B765 Medieval",167,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B770 - B785 Renaissance",34,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern",3306,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern|B5800 - B5802 By religion",5,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern|B808 - B849 Special topics and schools of philosophy",647,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B108 - B5802 By period|B790 - B5802 Modern|B850 - B5739 By region or country",2540,
        "B - Philosophy. Psychology. Religion|B1 - B5802 Philosophy (General)|B69 - B99 General works",76,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic",257,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC11 - BC39 History",17,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC11 - BC39 History|BC25 - BC39 By period",9,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC171 - BC199 Special topics",98,
        "B - Philosophy. Psychology. Religion|BC1 - BC199 Logic|BC60 - BC99 General works",35,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy",1428,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD10 - BD41 General philosophical works",46,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD143 - BD237 Epistomology. Theory of knowledge",447,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD240 - BD260 Methodology",41,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD300 - BD450 Ontology",481,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD493 - BD701 Cosmology",186,
        "B - Philosophy. Psychology. Religion|BD10 - BD701 Speculative philosophy|BD95 - BD131 Metaphysics",71,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology",6147,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF173 - BF175.5 Psychoanalysis",530,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF176 - BF176.5 Psychological tests and testing",11,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF180 - BF198.7 Experimental psychology",21,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF207 - BF209 Psychotropic drugs and other substances",6,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF231 - BF299 Sensation. Aesthesiology",111,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF309 - BF499 Consciousness. Cognition",1405,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF38 - BF64 Philosophy. Relation to other topics",222,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF501 - BF505 Motivation",27,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF511 - BF593 Affection. Feeling. Emotion",797,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF608 - BF635 Will. Volition. Choice. Control",66,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF636 - BF637 Applied psychology",131,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF638 - BF648 New Thought. Menticulture, etc.",8,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF660 - BF685 Comparative psychology. Animal and human psychology",25,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF692 - BF692.5 Psychology of sex. Sexual behavior",67,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF697 - BF697.5 Differential psychology. Individuality. Self",85,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF698 - BF698.9 Personality",175,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF699 - BF711 Genetic psychology",22,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF712 - BF724.85 Developmental psychology",640,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF795 - BF839 Temperament. Character",12,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF839.8 - BF885 Physiognomy. Phrenology",12,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF889 - BF905 Graphology. Study of handwriting",4,
        "B - Philosophy. Psychology. Religion|BF1 - BF990 Psychology|BF908 - BF940 The hand. Palmistry",7,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology",273,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1001 - BF1045 Psychic research. Psychology of the conscious",77,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1048 - BF1108 Hallucinations. Sleep. Dreaming. Visions",89,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1111 - BF1156 Hypnotism. Suggestion. Mesmerism. Subliminal projection",10,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1161 - BF1171 Telepathy. Mind reading. Though transference",3,
        "B - Philosophy. Psychology. Religion|BF1001 - BF1389 Parapsychology|BF1228 - BF1389 Spiritualism",60,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences",553,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1444 - BF1486 Ghosts. Apparitions. Hauntings",80,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1501 - BF1562 Demonology. Satanism. Possession",30,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1562.5 - BF1584 Witchcraft",84,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1585 - BF1623 Magic. Hermetics. Necromancy",105,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1651 - BF1729 Astrology",50,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1745 - BF1779 Oracles. Sibyls. Divinations",25,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1783 - BF1815 Seers. Prophets. Prophecies",3,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF1845 - BF1891 Fortune-telling",11,
        "B - Philosophy. Psychology. Religion|BF1404 - BF2055 Occult sciences|BF2050 - BF2055 Human-alien encounters. Contact between humans and extraterrestrials",12,
        "B - Philosophy. Psychology. Religion|BH1 - BH301 Aesthetics",193,
        "B - Philosophy. Psychology. Religion|BH1 - BH301 Aesthetics|BH81 - BH208 History",45,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics",1434,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1188 - BJ1295 Religious ethics",186,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1298 - BJ1335 Evolutionary and genetic ethics",22,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1365 - BJ1385 Positivist ethics",1,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ1518 - BJ1697 Individual ethics. Character. Virtue",415,
        "B - Philosophy. Psychology. Religion|BJ1 - BJ1725 Ethics|BJ71 - BJ1185 History and general works",264,
        "B - Philosophy. Psychology. Religion|BJ1801 - BJ2195 Social usages. Etiquette",91,
        "B - Philosophy. Psychology. Religion|BJ1801 - BJ2195 Social usages. Etiquette|BJ2021 - BJ2078 Etiquette of entertaining",9,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism",4024,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL1 - BL50 Religion (General)",161,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology",272,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL175 - BL190 General",13,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL205 - BL216 Nature and attributes of Deity",14,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL224 - BL227 Creation. Theory of the Earth",8,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL175 - BL265 Natural theology|BL239 - BL265 Religion and science",196,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL2700 - BL2790 Rationalism",205,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL300 - BL325 The myth. Comparative mythology",68,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL350 - BL385 Classification of religions",4,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)",133,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)|BL435 - BL457 Nature worship",13,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)|BL465 - BL470 Worship of human beings",3,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL425 - BL490 Religious doctrines (General)|BL473 - BL490 Other",75,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL500 - BL547 Eschatology",65,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL51 - BL65 Philosophy of religion. Psychology of religion. Religion in relation to other subjects",275,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL550 - BL619 Worship. Cultus",73,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL624 - BL629.5 Religious life",182,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL630 - BL632 Religious organization",3,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions",1836,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental",1196,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1050 - BL1060 By region",21,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism",530,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1100 - BL1107.5 General",10,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1108.19 - BL1108.7 Religious education",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1111 - BL1143.2 Sacred books. Sources",182,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1145 - BL1146 Hindu literature",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1153.69 - BL1168 By region or country",7,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1212.32 - BL1215 Doctrines. Theology",11,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1216 - BL1225 Hindu pantheon. Deities",33,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1225.2 - BL1243.58 Religious life",70,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1243.72 - BL1243.78 Monasteries. Temples, etc.",6,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1271.2 - BL1295 Modifications. Sects",60,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1100 - BL1295 Hinduism|BL1271.2 - BL1295 Modifications. Sects|BL1284.5 - BL1289.59 Vaishnavism",27,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism",23,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1310 - BL1314.2 Sacred books. Sources",3,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1315 - BL1317 Jain literature",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1300 - BL1380 Jainism|BL1376 - BL1378.85 Forms of worship",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1500 - BL1590 Zoroastrianism (Mazdeism). Parseeism",29,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions",9,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1600 - BL1605 General",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1615 - BL1616 Sumerian",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1620 - BL1625 Assyro-Babylonian",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1670 - BL1672 Canaanite",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1600 - BL1695 Semitic religions|BL1680 - BL1685 Arabian (except Islam)",1,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country",387,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL1790 - BL1975 China",216,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL1790 - BL1975 China|BL1830 - BL1883 Confucianism",33,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL1790 - BL1975 China|BL1899 - BL1942.85 Taoism",136,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2000 - BL2032 India",111,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2000 - BL2032 India|BL2017 - BL2018.7 Sikhism",28,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2195 - BL2228 Japan",23,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2195 - BL2228 Japan|BL2216 - BL2227.8 Shinto",6,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL1000 - BL2370 Asian. Oriental|BL1750 - BL2350 By region or country|BL2230 - BL2240 Korea",4,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2390 - BL2490 African",100,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2390 - BL2490 African|BL2420 - BL2460 Egyptian",42,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2500 - BL2592 American",160,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL2600 - BL2630 Pacific Ocean Islands. Oceania",12,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental",268,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental|BL700 - BL820 Classical (Etruscan, Greek, Roman)",160,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental|BL830 - BL875 Germanic and Norse",21,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL660 - BL2680 History and principles of religions|BL689 - BL980 European. Occidental|BL900 - BL980 Other European",26,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL70 - BL71 Sacred books (General)",14,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL71.5 - BL73 Biography",5,
        "B - Philosophy. Psychology. Religion|BL1 - BL2790 Religions. Mythology. Rationalism|BL74 - BL99 Religions of the world",123,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism",1272,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General",274,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General|BM150 - BM449 History",190,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General|BM150 - BM449 History|BM201 - BM449 By region or country",50,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM1 - BM449 General|BM70 - BM135 Study and teaching",20,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM480 - BM488.8 Pre-Talmudic Jewish literature (non-Biblical)",88,
        "B - Philosophy. Psychology. Religion|BM1 - BM990 Judaism|BM495 - BM532 Sources of Jewish religion. Rabbinical literature",267,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.",1519,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam",1347,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP1 - BP68 General",273,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP1 - BP68 General|BP42 - BP48 Study and teaching",17,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP1 - BP68 General|BP50 - BP68 History",239,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP100 - BP137 Sacred books",160,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP100 - BP137 Sacred books|BP100 - BP134 Koran",103,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP160 - BP165 General works on Islam",91,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP166 - BP166.94 Theology (Kalam)",85,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP170.3 - BP170.5 Missionary work of Islam",2,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP171 - BP173 Relation of Islam to other religions",58,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP173.25 - BP173.45 Islamic sociology",30,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam",225,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP176 - BP181 The five duties of a Moslem.  Pillars of Islam",3,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP184 - BP184.9 Religious ceremonies, rites, etc.",11,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP186 - BP186.97 Special days and seasons, fasts, feasts, festivals, etc.",4,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP187 - BP187.9 Shrines, sacred places, etc.",17,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life",136,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life|BP188.2 - BP188.3 Devotional literature",1,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP174 - BP190 The practice of Islam|BP188 - BP190 Islamic religious life|BP188.45 - BP189.65 Sufism. Mysticism. Dervishes",89,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP191 - BP253 Branches, sects, etc.",113,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP70 - BP80 Biography",32,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP70 - BP80 Biography|BP75 - BP77.75 Muhammad, Prophet, d. 632",30,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP1 - BP253 Islam|BP87 - BP89 Islamic literature",4,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP300 - BP395 Bahai Faith",21,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP500 - BP585 Theosophy",34,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP595 - BP597 Anthroposophy",34,
        "B - Philosophy. Psychology. Religion|BP1 - BP610 Islam. Bahai Faith. Theosophy, etc.|BP600 - BP610 Other beliefs and movements",75,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism",902,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ1001 - BQ1045 Buddhist literature",14,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ1100 - BQ3340 Tripitaka (Canonical literature)",169,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ251 - BQ799 History",93,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4000 - BQ4060 General works",26,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4061 - BQ4570 Doctrinal and systematic Buddhism",87,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4620 - BQ4905 Buddhist pantheon",7,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship",49,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ4965 - BQ5030 Ceremonies and rites. Ceremonial rules",3,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5070 - BQ5075 Altar, liturgical objects, ornaments, memorials, etc.",1,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5100 - BQ5125 Symbols and symbolism",1,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5140 - BQ5355 Buddhist ministry. Priesthood. Organization",3,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ4911 - BQ5720 Practice of Buddhism. Forms of worship|BQ5360 - BQ5680 Religious life",32,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ840 - BQ999 Biography",48,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ840 - BQ999 Biography|BQ860 - BQ999 Individual",47,
        "B - Philosophy. Psychology. Religion|BQ1 - BQ9800 Buddhism|BQ840 - BQ999 Biography|BQ860 - BQ999 Individual|BQ860 - BQ939 Gautama Buddha",11,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity",2654,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR140 - BR1510 History",1185,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR140 - BR1510 History|BR160 - BR481 By period",415,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR140 - BR1510 History|BR500 - BR1510 By region or country",702,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR1690 - BR1725 Biography",87,
        "B - Philosophy. Psychology. Religion|BR1 - BR1725 Christianity|BR60 - BR67 Early Christian literature. Fathers of the Church, etc.",248,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible",4724,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS11 - BS115 Early versions",26,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS125 - BS355 Modern texts and versions",139,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS1901 - BS2970 New Testament",1301,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS1901 - BS2970 New Testament|BS2280 - BS2545 Works about the New Testament",264,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS1901 - BS2970 New Testament|BS2547 - BS2970 Special parts of the New Testament",958,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS410 - BS680 Works about the Bible",1035,
        "B - Philosophy. Psychology. Religion|BS1 - BS2970 The Bible|BS701 - BS1830 Old Testament",2034,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology",2292,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT1029 - BT1040 Catechisms",18,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT1095 - BT1255 Apologetics. Evidences of Christianity",103,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT1313 - BT1480 History of specific doctrines and movements. Heresies and schisms",83,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT19 - BT37 Doctrine and dogma",82,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT198 - BT590 Christology",492,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT595 - BT680 Mary, Mother of Jesus Christ. Mariology",62,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT695 - BT749 Creation",489,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT750 - BT811 Salvation. Soteriology",125,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT819 - BT891 Eschatology. Last things",82,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT899 - BT940 Future state. Future life",19,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT93 - BT93.6 Judaism",8,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT95 - BT97.2 Divine law. Moral government",5,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT960 - BT985 Invisible world (Saints, demons, etc.)",26,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT98 - BT180 God",261,
        "B - Philosophy. Psychology. Religion|BT10 - BT1480 Doctrinal Theology|BT990 - BT1010 Creeds, confessions, covenants, etc.",18,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology",2144,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions",312,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions|BV2123 - BV2595 Special churches",60,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions|BV2610 - BV2695 Special types of missions",29,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV2000 - BV3705 Missions|BV2750 - BV3695 Missions in individual countries",148,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV3750 - BV3799 Evangelism. Revivals",75,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV4000 - BV4470 Pastoral theology",230,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV4485 - BV5099 Practical religion. The Christian life",774,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)",325,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV150 - BV168 Christian symbols and symbolism",17,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV169 - BV199 Liturgy and ritual",78,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV205 - BV287 Prayer",84,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV30 - BV135 Times and seasons. The Church year",28,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV5 - BV530 Worship (Public and private)|BV301 - BV530 Hymnology",87,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology",419,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV1460 - BV1615 Religious education (General)",52,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV1620 - BV1652 Social life, recreation, etc. in the church",2,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV659 - BV683 Ministry. Clergy. Religious vocations",25,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV800 - BV873 Sacraments. Ordinances",63,
        "B - Philosophy. Psychology. Religion|BV1 - BV5099 Practical Theology|BV590 - BV1652 Ecclesiastical theology|BV900 - BV1450 Religious societies, associations, etc.",20,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations",5157,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX1 - BX9.5 Church unity. Ecumenical movement. Interdenominational cooperation",19,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX100 - BX189 Eastern churches. Oriental churches",43,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX200 - BX756 Orthodox Eastern Church",329,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism",2426,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX4872 - BX4924 Pre-Reformation",16,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX4929 - BX4951 Post-Reformation",14,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5001 - BX5009 Anglican Communion (General)",19,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5011 - BX5207 Church of England",591,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX5800 - BX5995 Protestant Episcopal Church in the United States of America",129,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations",1448,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6101 - BX6193 Adventists",9,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6195 - BX6197 Arminians. Remonstrants",6,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6201 - BX6495 Baptists",73,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6751 - BX6793 Christian Church",2,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6801 - BX6843 Christian Reformed Church",1,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX6901 - BX6997 Christian Science",11,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7020 - BX7060 Church of God",1,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7101 - BX7260 Congregationalism",15,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7301 - BX7343 Disciples of Christ. Campbellites",4,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7601 - BX7795 Friends. Society of Friends. Quakers",80,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX7801 - BX7843 German Baptist Brethren. Church of the Brethren. Dunkards",6,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8001 - BX8080 Lutheran churches",64,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8101 - BX8144 Mennonites",41,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8201 - BX8495 Methodism",114,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8525 - BX8528 Millennial Dawnists. Jehovah's Witnesses",11,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8551 - BX8593 Moravian Church. United Brethren. Unitas Fratrum. Herrnhuters",13,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8601 - BX8695 Mormons. Church of Jesus Christ of Latter-Day Saints",417,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8701 - BX8749 New Jerusalem Church. New Church. Swedenborgianism",11,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8762 - BX8785 Pentecostal churches",21,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8799 - BX8809 Plymouth Brethren. Darbyites",1,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX8901 - BX9225 Presbyterianism. Calvinistic Methodism",74,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9301 - BX9359 Puritanism",25,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9401 - BX9640 Reformed or Calvinistic Churches",101,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9701 - BX9743 Salvation Army",5,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9751 - BX9793 Shakers. United Society of Believers. Millennial Church",6,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9801 - BX9869 Unitarianism",17,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9884 - BX9886 United Church of Christ",3,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX4800 - BX9999 Protestantism|BX6101 - BX9999 Other Protestant denominations|BX9901 - BX9969 Universalism. Universalists",3,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church",2332,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX2400 - BX4563 Monasticism. Religious orders",276,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX4600 - BX4644 Churches, cathedrals, abbeys (as parish churches), etc.",5,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX4650 - BX4750 Biography and portraits",481,
        "B - Philosophy. Psychology. Religion|BX1 - BX9999 Christian Denominations|BX800 - BX4795 Catholic Church|BX4716.4 - BX4795 Dissenting sects other than Protestant",2,
        "C - Auxiliary Sciences of History",3172,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization",648,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB158 - CB161 Forecasts of future progress",25,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB195 - CB281 Civilization and race",147,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB305 - CB430 By period",256,
        "C - Auxiliary Sciences of History|CB3 - CB482 History of Civilization|CB440 - CB482 Relation to special topics",45,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology",727,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC135 - CC137 Preservation, restoration, and conservation of antiquities.  Antiquities and state",151,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC200 - CC260 Bells. Campanology. Cowbells",2,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC300 - CC350 Crosses",2,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC72 - CC81 Philosophy. Theory",404,
        "C - Auxiliary Sciences of History|CC1 - CC960 Archaeology|CC83 - CC97 Study and teaching. Research",7,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals",197,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals|CD1 - CD511 Diplomatics",5,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals|CD5001 - CD6471 Seals",13,
        "C - Auxiliary Sciences of History|CD1 - CD6471 Diplomatics. Archives. Seals|CD921 - CD4280 Archives",161,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar",28,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar|CE21 - CE46 Ancient",14,
        "C - Auxiliary Sciences of History|CE1 - CE97 Technical Chronology. Calendar|CE51 - CE85 Medieval and modern",5,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics",84,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics|CJ1 - CJ4625 Coins",73,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics|CJ4801 - CJ5450 Tokens",4,
        "C - Auxiliary Sciences of History|CJ1 - CJ6661 Numismatics|CJ5501 - CJ6661 Medals and medallions",9,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy",43,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy|CN120 - CN740 Ancient inscriptions",34,
        "C - Auxiliary Sciences of History|CN1 - CN1355 Inscriptions. Epigraphy|CN870 - CN1355 By region or country",5,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry",118,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR101 - CR115 Flags, banners, and standards",16,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR1179 - CR3395 Family heraldry",6,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR191 - CR1020 Public and official heraldry",4,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR3499 - CR4420 Titles of honor, rank, precedence, etc",8,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4501 - CR6305 Chivalry and knighthood (Orders, decorations, etc.)",65,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4501 - CR6305 Chivalry and knighthood (Orders, decorations, etc.)|CR4571 - CR4595 Duels and dueling",3,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR4501 - CR6305 Chivalry and knighthood (Orders, decorations, etc.)|CR4651 - CR6305 Orders, etc.",31,
        "C - Auxiliary Sciences of History|CR1 - CR6305 Heraldry|CR51 - CR79 Crests, monograms, devices, badges, mottoes",4,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy",238,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS23 - CS35 Genealogical lists, etc., covering more than one country or continent",3,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS2300 - CS3090 Personal or family names",37,
        "C - Auxiliary Sciences of History|CS1 - CS3090 Genealogy|CS42 - CS2209 By region or country",184,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography",1024,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT21 - CT22 Biography as an art or literary form",21,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT210 - CT3150 National biography",689,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT31 - CT83 History of biographical literature. Lives of biographers",12,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT3200 - CT9999 Biography. By subject",116,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT3200 - CT9999 Biography. By subject|CT3200 - CT3830 Biography of women (Collective)",68,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT3200 - CT9999 Biography. By subject|CT9960 - CT9998 Other miscellaneous groups",25,
        "C - Auxiliary Sciences of History|CT21 - CT9999 Biography|CT93 - CT206 General collective biography",126,
        "D - History (General) and History of Europe",33698,
        "D - History (General) and History of Europe|D1 - D2009 History (General)",5743,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D1 - D24.5 General",675,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D101 - D110.5 Medieval and modern history, 476-",71,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D111 - D203 Medieval history",215,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-",524,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D219 - D234 1453-1648",23,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D242 - D283.5 1601-1715. 17th century",78,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D284 - D297 1715-1789. 18th century",27,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789",313,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789|D301 - D309 Period of the French Revolution",6,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789|D351 - D400 19th century. 1801-1914/1920",84,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D205 - D472 Modern history, 1453-|D299 - D472 -1789|D410 - D472 20th century",206,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D25 - D27 Military and naval history",39,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D31 - D34 Political and diplomatic history",12,
        "D - History (General) and History of Europe|D1 - D2009 History (General)|D51 - D90 Ancient history",101,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain",4530,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA10 - DA18.2 British Empire. Commonwealth of Nations. The Commonwealth",53,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England",3340,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History",2650,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History|DA129 - DA592 By period",2146,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History|DA129 - DA592 By period|DA129 - DA260 Early and medieval to 1485",353,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA28 - DA592 History|DA129 - DA592 By period|DA300 - DA592 Modern, 1485-",1777,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA600 - DA667 Description and travel. Guidebooks",143,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA20 - DA690 England|DA670 - DA690 Local history and description",459,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA700 - DA745 Wales",46,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA750 - DA890 Scotland",272,
        "D - History (General) and History of Europe|DA1 - DA995 History of Great Britain|DA900 - DA995 Ireland",511,
        "D - History (General) and History of Europe|DAW1001 - DAW1051 History of Central Europe",24,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia",351,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB1 - DB879 Austria. Austro-Hungarian Empire",166,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB2000 - DB3150 Czechoslovakia",107,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB2000 - DB3150 Czechoslovakia|DB2300 - DB2650 Local history and description of Czech lands",16,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB2000 - DB3150 Czechoslovakia|DB2700 - DB3150 Slovakia",14,
        "D - History (General) and History of Europe|DB1 - DB3150 History of Austria. Liechtenstein. Hungary. Czechslovakia|DB901 - DB999 Hungary",75,
        "D - History (General) and History of Europe|DC1 - DC947 History of France",1284,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History",976,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period",816,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-",700,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-|DC139 - DC249 Revolutionary and Napoleonic period, 1789-1815",375,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-|DC251 - DC354.9 19th century",91,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC110 - DC424 Modern, 1515-|DC361 - DC424 20th century",103,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC24 - DC424 History|DC60 - DC424 By period|DC60 - DC109 Early and medieval to 1515",115,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC600 - DC801 Local history and description",215,
        "D - History (General) and History of Europe|DC1 - DC947 History of France|DC941 - DC947 Monaco",4,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany",1023,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD258 - DD262 West Germany",112,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD280 - DD289.5 East Germany",51,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD301 - DD454 Prussia",23,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD701 - DD901 Local history and description",90,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History",606,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period",513,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period|DD121 - DD124 Earliest to 481",2,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period|DD125 - DD174.6 Early and medieval to 1519",12,
        "D - History (General) and History of Europe|DD1 - DD901 History of Germany|DD84 - DD257.4 History|DD121 - DD257.4 By period|DD175 - DD257.4 Modern, 1519-",499,
        "D - History (General) and History of Europe|DE1 - DE100 History of the Greco-Roman world",127,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece",657,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece|DF10 - DF289 Ancient Greece",455,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece|DF501 - DF649 Medieval Greece. Byzantine Empire, 323-1453",85,
        "D - History (General) and History of Europe|DF10 - DF951 History of Greece|DF701 - DF951 Modern Greece",112,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy",1231,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG11 - DG365 Ancient Italy. Rome to 476",673,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG401 - DG583.8 Medieval and modern Italy, 476-",246,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG600 - DG684.72 Northern Italy",64,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG691 - DG817.3 Central Italy",126,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG819 - DG875 Southern Italy",41,
        "D - History (General) and History of Europe|DG11 - DG999 History of Italy|DG987 - DG999 Malta. Maltese Islands",15,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries",74,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium",32,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History",12,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period",8,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH585 - DH619 1555-1794. Spanish and Austrian rule",2,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH620 - DH676 1794-1909",2,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH503 - DH694 History|DH571 - DH694 By period|DH677 - DH694 20th century",4,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH401 - DH811 Belgium|DH801 - DH811 Local history and description",8,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH901 - DH925 Luxembourg",1,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH95 - DH207 History",29,
        "D - History (General) and History of Europe|DH1 - DH925 History of the Low Countries. Benelux Countries|DH95 - DH207 History|DH141 - DH207 By period",22,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)",64,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ401 - DJ411 Local history and description",4,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History",31,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period",19,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period|DJ154 - DJ210 1555-1795. United provinces",12,
        "D - History (General) and History of Europe|DJ1 - DJ411 History of Netherlands (Holland)|DJ95 - DJ292 History|DJ151 - DJ292 By period|DJ215 - DJ292 19th-20th centuries",7,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)",108,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK26 - DJK28 Ethnography",8,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK30 - DJK51 History",60,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description",8,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description|DJK61 - DJK66 Black Sea region",2,
        "D - History (General) and History of Europe|DJK1 - DJK77 History of Eastern Europe (General)|DJK61 - DJK77 Local history and description|DJK71 - DJK76 Carpathian Mountain region",2,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics",2619,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History",1669,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK112.8 - DK264.8 House of Romanov, 1613-1917",465,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK265 - DK265.95 Revolution, 1917-1921",359,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK266 - DK292 Soviet regime, 1918-1991",596,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK70 - DK112.42 Early to 1613",36,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK70 - DK112.42 Early to 1613|DK70 - DK99.7 Rus'",25,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK36 - DK293 History|DK70 - DK112.42 Early to 1613|DK99.8 - DK112.42 Muscovy",11,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description",694,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK502.3 - DK502.75 Baltic States",11,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK503 - DK503.95 Estonia",9,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK504 - DK504.95 Latvia",12,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK505 - DK505.95 Lithuania",18,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK507 - DK507.95 Belarus. Byelorussian S.S.R.  White Russia",6,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK508 - DK508.95 Ukraine",120,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK509.1 - DK509.95 Moldova. Moldovian S.S.R.  Bessarabia",3,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK510 - DK651 Russia (Federation). Russian S.F.S.R.",258,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK670 - DK679.5 Georgia (Republic). Georgian S.S.R.  Georgian Sakartvelo",27,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK680 - DK689.5 Armenia (Republic). Armenian S.S.R.",4,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK690 - DK699.5 Azerbaijan. Azerbaijan S.S.R.",13,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK751 - DK781 Siberia",61,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK845 - DK860 Soviet Central Asia. West Turkestan",34,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK901 - DK909.5 Kazakhstan. Kazakh S.S.R.",11,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK911 - DK919.5 Kyrgyzstan. Kirghiz S.S.R. Kirghizia",7,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK921 - DK929.5 Tajikistan. Tajik S.S.R. Tadzhikistan",12,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK931 - DK939.5 Turkmenistan. Turkmen S.S.R.  Turkmenia",2,
        "D - History (General) and History of Europe|DK1 - DK949.5 History of Russia. Soviet Union. Former Soviet Republics|DK501 - DK949.5 Local history and description|DK941 - DK949.5 Uzbekistan. Uzbek S.S.R.",12,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland",132,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History",95,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4186 - DK4348 To 1795",16,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4348.5 - DK4395 1795-1918. 19th century (General)",6,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4397 - DK4420 1918-1945",7,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4429 - DK4442 1945-1989. People's Republic",17,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4123 - DK4452 History|DK4445 - DK4452 -1989",3,
        "D - History (General) and History of Europe|DK4010 - DK4800 History of Poland|DK4600 - DK4800 Local history and description",18,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia",183,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland",14,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History",12,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period",10,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-",10,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-|DL1070 - DL1078 Revolution, 1917-1918. Civil War",1,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-|DL1090 - DL1105 1939-1945",4,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL1002 - DL1180 Finland|DL1024 - DL1141.6 History|DL1050 - DL1141.6 By period|DL1055 - DL1141.6 Modern, 1523-|DL1090 - DL1105 1939-1945|DL1095 - DL1105 Russo-Finnish War, 1939-1940",4,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark",19,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History",10,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History|DL160 - DL263.3 By period",5,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History|DL160 - DL263.3 By period|DL160 - DL183.9 Early and medieval to 1523",2,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL101 - DL291 Denmark|DL143 - DL263.3 History|DL160 - DL263.3 By period|DL184 - DL263.3 Modern, 1523-",3,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL301 - DL398 Iceland",8,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway",16,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History",7,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period",4,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period|DL460 - DL478 Early and medieval to 1387",3,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL443 - DL537 History|DL460 - DL537 By period|DL527 - DL537 20th century. Period of World War II, 1939-1945",1,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL401 - DL596 Norway|DL576 - DL596 Local history and description",1,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL43 - DL87 History",48,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL43 - DL87 History|DL61 - DL87 By period",38,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden",36,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History",21,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History|DL660 - DL879 By period",16,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History|DL660 - DL879 By period|DL660 - DL700.9 Early and medieval to 1523. Union of Kalmar, 1397",2,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL643 - DL879 History|DL660 - DL879 By period|DL701 - DL879 Modern, 1523-",14,
        "D - History (General) and History of Europe|DL1 - DL1180 History of Northern Europe. Scandinavia|DL601 - DL991 Sweden|DL971 - DL991 Local history and description",9,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain",378,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP285 - DP402 Local history and description",62,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History",266,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period",228,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-",171,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP161.5 - DP166 1479-1516. Fernando V and Isabel I",4,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP170 - DP189 1516-1700. Hapsburgs",13,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP192 - DP200.8 1700-1808. Bourbons",6,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP201 - DP232.6 1808-1886. 19th century",13,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP161 - DP272.4 Modern Spain, 1479/1516-|DP233 - DP272.4 20th century. 1886-",133,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP91 - DP96 Earliest to 711",6,
        "D - History (General) and History of Europe|DP1 - DP402 History of Spain|DP56 - DP272.4 History|DP91 - DP272.4 By period|DP97.3 - DP160.8 711-1516. Moorish domination and the Reconquest",46,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal",60,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History",39,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History|DP558 - DP682.2 By period",27,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History|DP558 - DP682.2 By period|DP558 - DP618 Early and medieval to 1580",6,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP535 - DP682.2 History|DP558 - DP682.2 By period|DP620 - DP682.2 -1580",21,
        "D - History (General) and History of Europe|DP501 - DP900 History of Portugal|DP702 - DP802 Local history and description",5,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland",36,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ1 - DQ20 General",3,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ20.5 - DQ26 Description and travel",1,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ30 - DQ49.5 Antiquities. Social life and customs. Ethnography",7,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ301 - DQ851 Local history and description",13,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History",12,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ51 - DQ57 General",2,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period",4,
        "D - History (General) and History of Europe|DQ1 - DQ851 History of Switzerland|DQ51 - DQ210 History|DQ78 - DQ210 By period|DQ201 - DQ210 20th century",4,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula",713,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia",237,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History",83,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period",78,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1281 - DR1321 -1918",77,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1232 - DR1321 History|DR1259 - DR1321 By period|DR1281 - DR1321 -1918|DR1313 - DR1313.8 Yugoslav War, 1991-1995",52,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR1202 - DR2285 Yugoslavia|DR1350 - DR2285 Local history and description",139,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania",49,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History",28,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period",20,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR238 - DR240.5 Early and medieval to 1601. Roman period",2,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR241 - DR241.5 Phanariote regime, 1601-1822",1,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR250 - DR266.5 1866/1881-1944",5,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR267 - DR267.5 1944-1989",6,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR215 - DR269.6 History|DR238 - DR269.6 By period|DR268 - DR269.6 -1989",5,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR201 - DR296 Romania|DR279 - DR296 Local history and description",7,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR32 - DR48.5 History. Balkan War, 1912-1913",38,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey",262,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History",151,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period",92,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR485 - DR555.7 1281/1453-1789. Fall of Constantinople, 1453",31,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR556 - DR567 1789-1861. 19th century",6,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR568 - DR575 1861-1909. War with Russia, 1877-1878",9,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR436 - DR605 History|DR481 - DR605 By period|DR576 - DR605 20th century. Constitutional movement",40,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR401 - DR741 Turkey|DR701 - DR741 Local history and description (European Turkey)",39,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR50 - DR50.84 Thrace",3,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria",34,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History",15,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period",13,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR73.7 - DR80.8 Early and medieval",2,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR81 - DR84 Turkish rule, 1396-1878",1,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR84.9 - DR89.8 1878-1944",4,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR89.9 - DR93.34 1944-1990",3,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR65 - DR93.47 History|DR73.7 - DR93.47 By period|DR93.4 - DR93.47 -1990",3,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR51 - DR98 Bulgaria|DR95 - DR98 Local history and description",3,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania",22,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History",14,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period",10,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period|DR954 - DR960.5 To 1501",1,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period|DR961 - DR969 1501-1912. Turkish rule",5,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR927 - DR978.52 History|DR954 - DR978.52 By period|DR969.8 - DR978.52 20th century",4,
        "D - History (General) and History of Europe|DR1 - DR2285 History of Balkan Peninsula|DR901 - DR998 Albania|DR996 - DR998 Local history and description",1,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia",10763,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS101 - DS151 Israel (Palestine). The Jews",2639,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS101 - DS151 Israel (Palestine). The Jews|DS133 - DS151 Jews outside of Palestine",1560,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS13 - DS28 Ethnography",42,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS153 - DS154.9 Jordan. Transjordan",26,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS155 - DS156 Asia Minor",6,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS161 - DS195.5 Armenia",23,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS201 - DS248 Arabian Peninsula. Saudi Arabia",115,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS251 - DS326 Iran (Persia)",255,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS31 - DS35.2 History",94,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS327 - DS329.4 Central Asia",38,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS331 - DS349.9 Southern Asia. Indian Ocean Region",93,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS35.3 - DS35.77 The Islamic World",49,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS350 - DS375 Afghanistan",172,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS36 - DS39.2 Arab countries",106,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS36 - DS39.2 Arab countries|DS37 - DS39.2 History",57,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS376 - DS392.2 Pakistan",98,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS393 - DS396.9 Bangladesh. East Pakistan",30,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)",1799,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)|DS430 - DS432 Ethnography. Sects",25,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)|DS433 - DS481 History",680,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS401 - DS486.8 India (Bharat)|DS483 - DS486.8 Local history and description",436,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS41 - DS66 Middle East. Southwestern Asia. Ancient Orient. Arab East. Near East",461,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS41 - DS66 Middle East. Southwestern Asia. Ancient Orient. Arab East. Near East|DS51 - DS54.95 Local history and description",61,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS41 - DS66 Middle East. Southwestern Asia. Ancient Orient. Arab East. Near East|DS51 - DS54.95 Local history and description|DS54 - DS54.95 Cyprus",48,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS488 - DS490 Sri Lanka",31,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS491 - DS492.9 Bhutan",8,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS493 - DS495.8 Nepal",29,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS498 - DS498.8 Goa. Portuguese in India",3,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS5.95 - DS10 Description and travel",15,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS501 - DS518.9 East Asia. The Far East",152,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia",616,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS524 - DS526.7 History",27,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS527 - DS530.9 Burma",67,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina",468,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS541 - DS553.7 History",15,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS554 - DS554.98 Cambodia",46,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS555 - DS555.98 Laos",8,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS556 - DS559.93 Vietnam. Annam",373,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS556 - DS559.93 Vietnam. Annam|DS557 - DS559.9 Vietnamese Conflict",307,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS520 - DS560.72 Southeastern Asia|DS531 - DS560.72 French Indochina|DS560 - DS560.72 Democratic Republic (North Vietnam), 1945-",7,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS561 - DS589 Thailand (Siam)",81,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS591 - DS599 Malaysia. Malay Peninsula. Straits Settlements",62,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS591 - DS599 Malaysia. Malay Peninsula. Straits Settlements|DS597.33 - DS597.34 Sabah. British North Borneo",3,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS591 - DS599 Malaysia. Malay Peninsula. Straits Settlements|DS597.36 - DS597.39 Sarawak",6,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS600 - DS605 Malay Archipelago",4,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS608 - DS610.9 Singapore",39,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)",206,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS633 - DS644.46 History",55,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.1 - DS646.15 Sumatra",1,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.17 - DS646.29 Java",18,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.3 - DS646.34 Borneo. Kalimantan, Indonesia",13,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.4 - DS646.49 Celebes. Sulawesi",4,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.5 - DS646.59 Timor",7,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS611 - DS649 Indonesia (Dutch East Indies)|DS646.6 - DS646.69 Moluccas. Maluku",4,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS650 - DS650.99 Brunei",1,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS651 - DS689 Philippines",137,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS67 - DS79.9 Iraq (Assyria, Babylonia, Mesopotamia)",395,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China",1700,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS730 - DS731 Ethnography",19,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS733 - DS779.32 History",828,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS781 - DS796 Local history and description",190,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS781 - DS796 Local history and description|DS781 - DS784.2 Manchuria",12,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS781 - DS796 Local history and description|DS785 - DS786 Tibet",25,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS701 - DS799.9 China|DS798.92 - DS799.9 Taiwan",132,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS80 - DS90 Lebanon (Phenicia)",78,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS801 - DS897 Japan",489,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS801 - DS897 Japan|DS833 - DS891.5 History",247,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS801 - DS897 Japan|DS894.21 - DS897 Local history and description",42,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea",250,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS904.8 - DS922.46 History",150,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS904.8 - DS922.46 History|DS918 - DS921.8 War and intervention, 1950-1953",57,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS924 - DS925 Local history and description",4,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS901 - DS937 Korea|DS930 - DS937 Democratic People's Republic, 1948-",42,
        "D - History (General) and History of Europe|DS1 - DS937 History of Asia|DS92 - DS99 Syria",80,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa",2566,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1001 - DT1190 Southern Africa",27,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1251 - DT1465 Angola",13,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT15 - DT16 Ethnography",12,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1501 - DT1685 Namibia. South-West Africa",27,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT154.1 - DT159.9 Sudan. Anglo-Egyptian Sudan",61,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT160 - DT177 North Africa",15,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT160 - DT177 North Africa|DT167 - DT176 History",7,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT160 - DT177 North Africa|DT167 - DT176 History|DT168 - DT169.5 Carthaginian period",1,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT17 - DT39 History",298,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa",244,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT1754 - DT1770 Ethnography",54,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT1772 - DT1974 History",136,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT1991 - DT2054 Cape Province. Cape of Good Hope",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT2181 - DT2278 KwaZulu-Natal. Natal",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT1701 - DT2405 South Africa|DT2291 - DT2378 Transvaal. South African Republic",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT179.2 - DT179.9 Northwest Africa",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States",192,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT211 - DT239 Libya",38,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT241 - DT269 Tunisia (Tunis)",12,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT271 - DT299 Algeria",45,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT301 - DT330 Morocco",37,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT181 - DT346 Maghrib. Barbery States|DT331 - DT346 Sahara",13,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2421 - DT2525 Botswana. Bechuanaland",5,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2541 - DT2686 Lesotho. Basutoland",1,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2701 - DT2825 Swaziland",1,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT2871 - DT3025 Zimbabwe. Southern Rhodesia",33,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT3031 - DT3145 Zambia. Northern Rhodesia",7,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT3161 - DT3257 Malawi. Nyasaland",12,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT3291 - DT3415 Mozambique",7,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT348 - DT363.3 Central Sub-Saharan Africa",66,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa",326,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT367 - DT367.8 Northeast Africa",6,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT371 - DT390 Ethiopia (Abyssinia)",54,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT391 - DT398 Eritrea",5,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT401 - DT409 Somalia. Somaliland and adjacent territory",20,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT411 - DT411.9 Djibouti. French Territory of the Afars and Issas. French Somaliland",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT421 - DT432.5 East Africa. British East Africa",13,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT433.2 - DT433.29 Uganda",24,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT433.5 - DT434 Kenya",56,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT436 - DT449 Tanzania. Tanganyika. German East Africa",26,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT450 - DT450.49 Rwanda. Ruanda-Urundi",56,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT365 - DT469 Eastern Africa|DT450.5 - DT450.95 Burundi",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt",382,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT115 - DT154 Local history and description",25,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT115 - DT154 Local history and description|DT139 - DT153.5 Cairo",9,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT56.8 - DT69.5 Antiquities",125,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT56.8 - DT69.5 Antiquities|DT63 - DT63.5 Pyramids",10,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT56.8 - DT69.5 Antiquities|DT68 - DT68.8 Religious antiquities",1,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT43 - DT154 Egypt|DT74 - DT107.87 History",127,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast",474,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa",215,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT509 - DT509.9 Gambia",4,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT509.97 - DT512.9 Ghana (Gold Coast)",39,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT515 - DT515.9 Nigeria",119,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT491 - DT516.9 British West Africa|DT516 - DT516.9 Sierra Leone",20,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel",83,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT541 - DT541.9 Benin. Dahomey",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT543 - DT543.9 Guinea",4,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT545 - DT545.9 Cote d'Ivoire. Ivory Coast",9,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa",16,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.1 - DT546.19 Gabon (Gaboon, Gabun)",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.2 - DT546.29 Congo (Brazaville). Middle Congo",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.3 - DT546.39 Central African Republic. Central African Empire. Ubangi-Shari",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT546.1 - DT546.49 French-speaking Equatorial Africa|DT546.4 - DT546.49 Chad (Tchad)",8,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT547 - DT547.9 Niger",6,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT549 - DT549.9 Senegal",9,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT551 - DT551.9 Mali. Mali Federation. Sudanese Republic. French Sudan",8,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT554 - DT554.9 Mauritania",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT521 - DT555.9 French West Africa. French Sahara. West Sahara. Sahel|DT555 - DT555.9 Burkina Faso. Upper Volta",4,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT561 - DT581 Cameroon (Cameroun, Kamerun)",33,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT582 - DT582.9 Togo. Togoland",2,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT591 - DT615.9 Portuguese-speaking West Africa",10,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT591 - DT615.9 Portuguese-speaking West Africa|DT613 - DT613.9 Guinea-Bissau. Portuguese Guinea",5,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT619 - DT620.9 Spanish West Africa",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT619 - DT620.9 Spanish West Africa|DT620 - DT620.9 Equatorial Guinea (Spanish Guinea)",3,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT621 - DT637 Liberia",30,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT470 - DT671 West Africa. West Coast|DT641 - DT665 Zaire. Congo (Democratic Republic). Belgian Congo",56,
        "D - History (General) and History of Europe|DT1 - DT3415 History of Africa|DT7 - DT12.25 Description and travel",4,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)",765,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU28.11 - DU68 History",18,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand",65,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand|DU419 - DU422 History",24,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU400 - DU430 New Zealand|DU422.5 - DU424.5 Ethnography",23,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU520 - DU950 Smaller Island Groups",268,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU520 - DU950 Smaller Island Groups|DU620 - DU629 Hawaiian Islands. Hawaii",85,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia",346,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU108 - DU117.2 History",98,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU120 - DU125 Ethnography",101,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU150 - DU180 New South Wales",8,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU182 - DU198 Tasmania. Van Diemen's Land",1,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU200 - DU230 Victoria",13,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU250 - DU280 Queensland",12,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU300 - DU330 South Australia",4,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU350 - DU380 Western Australia",7,
        "D - History (General) and History of Europe|DU1 - DU950 History of Oceania (South Seas)|DU80 - DU398 Australia|DU392 - DU398 Northern Territory of Australia",4,
        "D - History (General) and History of Europe|DX101 - DX301 History of Gypsies",72,
        "E - History: America",11738,
        "E - History: America|E11 - E143 America",1970,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations",143,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations|E103 - E110 Pre-Columbian period",17,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations|E111 - E120 Columbus",50,
        "E - History: America|E11 - E143 America|E101 - E135 Discovery of America and early explorations|E121 - E135 Post-Columbian period. El Dorado",53,
        "E - History: America|E11 - E143 America|E11 - E29 General",33,
        "E - History: America|E11 - E143 America|E141 - E143 Descriptive accounts of America. Earliest to 1810",25,
        "E - History: America|E11 - E143 America|E31 - E49.3 North America",20,
        "E - History: America|E11 - E143 America|E51 - E73 Pre-Columbian America. The Indians",91,
        "E - History: America|E11 - E143 America|E75 - E99 Indians of North America",894,
        "E - History: America|E11 - E143 America|E75 - E99 Indians of North America|E81 - E83 Indian wars",16,
        "E - History: America|E151 - E889 United States",9303,
        "E - History: America|E151 - E889 United States|E151 - E169.13 General",692,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History",1300,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E171 - E180 General",556,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E171 - E180 General|E175 - E175.7 Historiography",59,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E171 - E180 General|E176 - E176.8 Biography",180,
        "E - History: America|E151 - E889 United States|E171 - E183.9 History|E183 - E183.3 Political history",51,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population",2382,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population|E184.5 - E185.98 Afro-Americans",1444,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population|E184.5 - E185.98 Afro-Americans|E185.2 - E185.89 Status and development since emancipation",829,
        "E - History: America|E151 - E889 United States|E184 - E185.98 Elements in the population|E184.5 - E185.98 Afro-Americans|E185.96 - E185.98 Biography. Genealogy",350,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)",87,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)|E186 - E189 General",70,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)|E191 - E199 By period",16,
        "E - History: America|E151 - E889 United States|E186 - E199 Colonial history (1607-1775)|E191 - E199 By period|E195 - E199 1689-1775",12,
        "E - History: America|E151 - E889 United States|E201 - E298 The Revolution, 1775-1783",402,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861",1129,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E300 - E302.6 General",92,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E300 - E302.6 General|E302.5 - E302.6 Biography (Late eighteenth century)",17,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period",498,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E303 - E309 1775-1789. The Confederation, 1783-1789",10,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period",212,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E311 - E320 Washington's administrations, 1789-1797",87,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E321 - E330 John Adams' administration, 1797-1801",24,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E310 - E337 1789-1809. Constitutional period|E331 - E337 Jefferson's administrations, 1801-1809",82,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845",184,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E337.8 - E340 General",17,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E337.8 - E340 General|E339 - E340 Biography",3,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E341 - E370 Madison's administrations, 1809-1817",83,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E341 - E370 Madison's administrations, 1809-1817|E351.5 - E364.9 War of 1812",60,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E371 - E375 Monroe's administrations, 1817-1825",4,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E376 - E380 John Quincy Adams' administration, 1825-1829",10,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E381 - E385 Jackson's administrations, 1829-1837",27,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E386 - E390 Van Buren's administration, 1837-1841",4,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E391 - E393 William H. Harrison's administration, March 4-April 4, 1841",2,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E337.8 - E400 Early nineteenth century, 1801/1809-1845|E396 - E400 Tyler's administration, April 4, 1841-1845",5,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E401 - E415.3 Mexican War, 1846-1848",25,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861",64,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E415.6 - E415.9 General",11,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E416 - E420 Polk's administration, 1845-1849",10,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E421 - E423 Taylor's administiration, 1849-July 9, 1850",3,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E426 - E430 Fillmore's administration, July 9, 1850-1853",1,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E431 - E435 Pierce's administration, 1853-1857",5,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E303 - E440.5 By period|E415.6 - E440.5 Middle nineteenth century, 1845/1848-1861|E436 - E440.5 Buchanan's administration, 1857-1861",9,
        "E - History: America|E151 - E889 United States|E300 - E453 Revolution to the Civil War, 1775/1783-1861|E441 - E453 Slavery in the United States. Antislavery movements",430,
        "E - History: America|E151 - E889 United States|E456 - E655 Civil War period, 1861-1865",1390,
        "E - History: America|E151 - E889 United States|E456 - E655 Civil War period, 1861-1865|E456 - E459 Lincoln's administrations, 1861-April 15, 1865",220,
        "E - History: America|E151 - E889 United States|E456 - E655 Civil War period, 1861-1865|E461 - E655 The Civil War, 1861-1865",1154,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900",178,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E660 - E664 General",35,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E660 - E664 General|E663 - E664 Biography",6,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E666 - E670 Johnson's administration, April 15, 1865-1869",36,
        "E - History: America|E151 - E889 United States|E660 - E738 Late nineteenth century, 1865-1900|E671 - E680 Grant's administrations, 1869-1877",21,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century",751,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General",456,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General|E743 - E743.5 Political history",41,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General|E744 - E744.5 Diplomatic history. Foreign and general relations",150,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E740 - E749 General|E747 - E748 Biography",9,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E756 - E760 Theodore Roosevelt's administrations, September 14, 1901-1909",36,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E761 - E765 Tafts' administration, 1909-1913",2,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E766 - E783 Wilson's administrations, 1913-1921",35,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties",36,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties|E791 - E796 Coolidge's administration, August 2, 1923-1929",8,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E784 - E805 1919-1933. Harding-Coolidge-Hoover era. The twenties|E801 - E805 Hoover's administration, 1919-1933",12,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E806 - E813 Franklin Delano Roosevelt's administrations, 1933-April 12, 1945",114,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E813 - E816 Truman's administrations, April 12, 1945-1953",33,
        "E - History: America|E151 - E889 United States|E740 - E837.7 Twentieth century|E835 - E837.7 Eisenhower's administrations, 1953-1961",35,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961",957,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General",184,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General|E839.5 - E839.8 Political history",44,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General|E840 - E840.3 Diplomatic history. Foreign and general relations",74,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E838 - E840.8 General|E840.6 - E840.8 Biography (General)",8,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E841 - E843 Kennedy's administration, 1961-November 22, 1963",135,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E846 - E851 Johnson's administrations, November 22, 1963-1969",31,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E855 - E861 Nixon's administrations, 1969-August 9, 1974",62,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E855 - E861 Nixon's administrations, 1969-August 9, 1974|E860 - E861 Watergate Affair. Resignation",14,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E865 - E868 Ford's administration, August 9, 1974-1977",11,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E872 - E875 Carter's administration, 1977-1981",23,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E876 - E880 Reagan's administrations, 1981-1989",102,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E881 - E884 Bush administration, 1989-1993",29,
        "E - History: America|E151 - E889 United States|E838 - E889 Later twentieth century, 1961|E885 - E889 Clinton administration, 1993-2001",98,
        "F - America: local history",8283,
        "F - America: local history|F1 - F975 United States local history",4835,
        "F - America: local history|F1 - F975 United States local history|F1 - F15 New England",64,
        "F - America: local history|F1 - F975 United States local history|F206 - F220 The South. South Atlantic States",205,
        "F - America: local history|F1 - F975 United States local history|F296 - F301 Gulf States. West Florida",4,
        "F - America: local history|F1 - F975 United States local history|F476 - F485 Old Northwest. Northwest Territory",2,
        "F - America: local history|F1 - F975 United States local history|F590.3 - F596.3 The West. Trans-Mississippi Region. Great Plains",281,
        "F - America: local history|F1 - F975 United States local history|F721 - F723 Rocky Mountains. Yellowstone National Park",10,
        "F - America: local history|F1 - F975 United States local history|F786 - F790 New Southwest. Colorado River, Canyon, and Valley",63,
        "F - America: local history|F1 - F975 United States local history|F850.5 - F851.5 Pacific States",11,
        "F - America: local history|F1001 - F1145.3 British America",393,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada",393,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1001 - F1035 General",185,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1060 - F1060.97 Canadian Northwest. Northwest Territories",26,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1121 - F1139 Newfoundland and Labrador",11,
        "F - America: local history|F1001 - F1145.3 British America|F1001 - F1145.3 Canada|F1121 - F1139 Newfoundland and Labrador|F1135 - F1139 Labrador",4,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America",3004,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1201 - F1393 Mexico",650,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1201 - F1393 Mexico|F1218.5 - F1221 Antiquities. Indians",202,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1401 - F1419 Latin America (General)",311,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1421 - F1440 Central America",246,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1421 - F1440 Central America|F1435 - F1435.3 Mayas",77,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F1601 - F1629 West Indies",32,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2155 - F2191 Caribbean area. Caribbean Sea",53,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America",1022,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2201 - F2239 General",135,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2251 - F2299 Colombia",55,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2301 - F2349 Venezuela",48,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2501 - F2659 Brazil",199,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2661 - F2699 Paraguay",20,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2701 - F2799 Uruguay",10,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F2801 - F3021 Argentina",137,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3031 - F3031.5 Falkland Islands",13,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3051 - F3285 Chile",75,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3301 - F3359 Bolivia",34,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3401 - F3619 Peru",159,
        "F - America: local history|F1201 - F3799 Latin America. Spanish America|F2201 - F3799 South America|F3701 - F3799 Ecuador",35,
        "G - Geography. Anthropology. Recreation",15772,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)",1794,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G100.5 - G108.5 Toponymy",19,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G149 - G180 Travel. Voyages and travels (General)",461,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G149 - G180 Travel. Voyages and travels (General)|G154.9 - G180 Travel and state, Tourist Trade",415,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G200 - G336 History of discoveries, explorations, and travel",60,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G369 - G503 Special voyages and travels",189,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G521 - G539 Adventures, shipwrecks, buried treasure, etc.",111,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G540 - G550 Seafaring life, ocean travel, etc.",18,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G575 - G890 Arctic and Antarctic regions",187,
        "G - Geography. Anthropology. Recreation|G1 - G922 Geography (General)|G80 - G99 History of geography",57,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases",246,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1000 - G1000.5 Atlases of the moon, planets, etc.",1,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1001 - G1046 World atlases",75,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1059 - G1061 Maritime atlases (General)",1,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country",143,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1100 - G1779 America. Western Hemisphere",59,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1100 - G1779 America. Western Hemisphere|G1100 - G1692 North America",58,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1100 - G1779 America. Western Hemisphere|G1445 - G2739 Africa",1,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.",77,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G1791 - G2082 Europe",22,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G2110 - G2196 Former Soviet republics. Union of Soviet Socialist Republics. Russia (Empire)",5,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G2200 - G2444.84 Asia",36,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G1780 - G2799 Eastern Hemisphere. Eurasia, Africa, etc.|G2740 - G2799 Australasia",2,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G2800 - G3064 Oceans (General)",4,
        "G - Geography. Anthropology. Recreation|G1000 - G3122 Atlases|G1100 - G3102 By region or country|G3100 - G3102 Antarctica",2,
        "G - Geography. Anthropology. Recreation|G3160 - G3171 Globes",1,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps",90,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3180 - G3182 Universe. Solar system",1,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3195 - G3199 Moon",4,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3200 - G3202 World maps",9,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3260 - G3272 Polar regions",2,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country",74,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G3290 - G5668 America. Western Hemisphere",34,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G3290 - G5668 America. Western Hemisphere|G3300 - G5184 North America",30,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G3290 - G5668 America. Western Hemisphere|G5200 - G5668 South America",3,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.",35,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G5700 - G6967 Europe",14,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G7000 - G7342 Former Soviet republics. Union of Soviet Socialist Republics.  Russia (Empire)",4,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G7400 - G8198.54 Asia",12,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G8200 - G8904 Africa",3,
        "G - Geography. Anthropology. Recreation|G3180 - G9980 Maps|G3290 - G9880 By region or country|G5670 - G9084 Eastern Hemisphere. Eurasia, Africa, etc.|G8950 - G9084 Australasia",1,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography",211,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography",206,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA110 - GA115 Projection",6,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA125 - GA155 Map drawing, modeling, printing, reading, etc.",34,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA300 - GA325 World maps, general atlases, etc.",8,
        "G - Geography. Anthropology. Recreation|GA1 - GA1776 Mathematical geography. Cartography|GA101 - GA1776 Cartography|GA341 - GA1776 Maps. By region or country",56,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography",1181,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB111 - GB398.7 By region or country",25,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology",342,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB450 - GB460 Coasts",52,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB461 - GB468.99 Reefs",9,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB471 - GB478.99 Islands",15,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB500 - GB555 Mountains. Orography",13,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB400 - GB649 Geomorphology|GB561 - GB649 Other natural landforms: floodplains, caves, deserts, dunes, etc.",162,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB5000 - GB5030 Natural disasters",74,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water",722,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters",522,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB1001 - GB1199.6 Groundwater. Hydrogeology",191,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB1201 - GB1598 Rivers. Stream measurements",119,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB1601 - GB1798.9 Lakes. Limnology. Ponds. Lagoons",23,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB2401 - GB2598 Ice. Glaciers. Ice sheets. Sea ice",61,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB2801 - GB2998 Hydrometerology",9,
        "G - Geography. Anthropology. Recreation|GB3 - GB5030 Physical geography|GB651 - GB2998 Hydrology. Water|GB980 - GB2998 Ground and surface waters|GB980 - GB992 Watersheds. Runoff. Drainage",21,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography",482,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC100 - GC103 Seawater",5,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC1000 - GC1023 Marine resources. Applied oceanography",33,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC1080 - GC1581 Marine pollution. Seawater pollution",22,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC109 - GC149 Chemical oceanography",18,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC150 - GC182 Physical oceanography",9,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC190 - GC190.5 Ocean-atmosphere interaction",17,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean",109,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC205 - GC226 Waves",48,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC228.5 - GC228.6 Ocean circulation",17,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC229 - GC296.8 Currents",9,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC200 - GC376 Dynamics of the ocean|GC297 - GC299 Water masses and ocean mixing",2,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC377 - GC399 Marine sediments",19,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC401 - GC881 Oceanography. By region",48,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC65 - GC78 Underwater exploration",10,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC70 - GC90 Environmental education",45,
        "G - Geography. Anthropology. Recreation|GC1 - GC1581 Oceanography|GC96 - GC97.8 Estuarine oceanography",17,
        "G - Geography. Anthropology. Recreation|GE1 - GE350 Environmental sciences",961,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography",571,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography|GF101 - GF127 Settlements",33,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography|GF500 - GF900 By region or country",144,
        "G - Geography. Anthropology. Recreation|GF1 - GF900 Human ecology. Anthropogeography|GF53 - GF71 Environmental influences on humans",12,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology",2792,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology",1496,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN357 - GN367 Culture and cultural processes",69,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN378 - GN396 Collected dthnographies",94,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN397 - GN397.5 Applied anthropology",2,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN406 - GN517 Cultural traits, customs, and institutions",587,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN301 - GN674 Ethnology. Social and cultural anthropology|GN537 - GN673 Ethnic groups and races",389,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology",375,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN269 - GN279 Race (General)",26,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN281 - GN289 Human evolution",188,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN51 - GN59 Anthropometry",4,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN49 - GN298 Physical anthropology. Somatology|GN62.8 - GN263 Human variation",63,
        "G - Geography. Anthropology. Recreation|GN1 - GN890 Anthropology|GN700 - GN890 Prehistoric archaeology",601,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore",799,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject",178,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR430 - GR487 Folklore relating to private life (including dreams, love, children, nursery rhymes, etc.)",17,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR500 - GR615 Supernatural beings, demonology, fairies, ghosts, charms, etc.",63,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR620 - GR640 Cosmic phenomena",3,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR650 - GR690 Geographical topics",2,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR700 - GR860 Animals, plants, and minerals",66,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR890 - GR910 Occupations",3,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR931 - GR935 Signs and symbols",1,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR420 - GR950 By subject|GR940 - GR941 Mythical places",2,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR72 - GR79 Folk literature (General)",50,
        "G - Geography. Anthropology. Recreation|GR1 - GR950 Folklore|GR99.6 - GR390 By region or country",486,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)",1079,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT170 - GT476 Houses. Dwellings",18,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT2400 - GT3390.5 Customs relative to private life (including children, marriage, eating and drinking, funeral customs, etc.)",416,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT3400 - GT5090 Customs relative to public and social life (including town life, court life, festivals, holidays, ceremonies of royalty, etc.)",226,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT495 - GT499 Human body and its parts. Personal beauty",24,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT500 - GT2370 Costume. Dress. Fashion",333,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5220 - GT5286 Customs relative to transportation and travel",9,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5320 - GT6737 Customs relative to special classes",19,
        "G - Geography. Anthropology. Recreation|GT1 - GT7070 Manners and customs (General)|GT5320 - GT6737 Customs relative to special classes|GT5750 - GT6390 By occupation",13,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure",5195,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements",585,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1203 - GV1218 Children's games and amusements",25,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1218.5 - GV1220.8 Toys",9,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements",387,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1232 - GV1299 Card games: Poker, patience, whist, etc.",36,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1301 - GV1311 Gambling. Chance and banking games",16,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1312 - GV1469 Board games. Move games",61,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1221 - GV1469.62 Indoor games and amusements|GV1469.15 - GV1469.62 Computer games. Video games. Fantasy games",255,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1470 - GV1511 Parties. Party games and stunts",63,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1470 - GV1511 Parties. Party games and stunts|GV1491 - GV1507 Puzzles",17,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1199 - GV1570 Games and amusements|GV1541 - GV1561 Parlor magic and tricks",34,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1580 - GV1799.4 Dancing",609,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV1800 - GV1860 Circuses, spectacles, etc. (including rodeos, waxworks, amusement parks, etc.)",62,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV181.35 - GV181.6 Recreation leadership. Administration of recreation services",4,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV182 - GV182.5 Recreational areas and facilities. Recreation centers",3,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation",240,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV191.68 - GV198.9 Camping",14,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV199 - GV199.6 Hiking. Pedestrian tours",118,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV199.8 - GV200.3 Mountaineering",47,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV200.4 - GV200.5 Orienteering. Wilderness survival",2,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV191.2 - GV200.66 Outdoor life. Outdoor recreation|GV200.6 - GV200.66 Caving. Spelunking",6,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training",298,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV346 - GV351.5 School and college athletics. Intramural and interscholastic athletics",24,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV401 - GV433 Physical education facilities. Sports facilities (including gymnasiums, athletic fields, playgrounds, etc.)",33,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV435 - GV436.7 Physical measurements. Physical tests, etc.",5,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV201 - GV555 Physical education and training|GV460 - GV555 Gymnastics. Gymnastic exercises (including calisthenics, heavy exercises, acrobatics, etc.)",125,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports",3303,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1020 - GV1038.2 Automobile travel. Motoring. Automobile racing",95,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1040 - GV1060.4 Cycling. Bicycling. Motorcycling",77,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1060.5 - GV1098 Track and field athletics",104,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1101 - GV1150.9 Fighting sports: Bullfighting, boxing, fencing, etc.",131,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1151 - GV1190 Shooting. Archery",14,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV1195 - GV1198.99 Wrestling",35,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV712 - GV725 Athletic contests. Sports Events",220,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV733 - GV734.5 Professionalism in sports. Professional sports (General)",4,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV743 - GV749 Athletic and sporting goods, supplies, etc.",7,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV750 - GV770.27 Air sports: Airplane flying, kiteflying, bungee-jumping, etc.",5,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV770.3 - GV840 Water sports: Canoeing, sailing, yachting, scuba diving, etc.",138,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV840.7 - GV857 Winter sports: Ice hockey, skiing, bobsledding, snowmobiling, etc.",110,
        "G - Geography. Anthropology. Recreation|GV1 - GV1860 Recreation. Leisure|GV557 - GV1198.99 Sports|GV861 - GV1017 Ball games: Baseball, football, golf, etc.",1714,
        "H - Social sciences",71675,
        "H - Social sciences|H1 - H99 Social sciences (General)",1055,
        "H - Social sciences|HA1 - HA4737 Statistics",580,
        "H - Social sciences|HA1 - HA4737 Statistics|HA154 - HA4737 Statistical data",220,
        "H - Social sciences|HA1 - HA4737 Statistics|HA154 - HA4737 Statistical data|HA175 - HA4737 By region or country",209,
        "H - Social sciences|HA1 - HA4737 Statistics|HA29 - HA32 Theory and method of social science statistics",275,
        "H - Social sciences|HA1 - HA4737 Statistics|HA36 - HA37 Statistical services. Statistical bureaus",3,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography",3866,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB131 - HB147 Methodology",423,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB201 - HB206 Value. Utility",25,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB221 - HB236 Price",37,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB238 - HB251 Competition. Production. Wealth",42,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB3711 - HB3840 Business cycles. Economic fluctuations",317,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB522 - HB715 Income. Factor shares",456,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB71 - HB74 Economics as a science. Relation to other subjects",166,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB75 - HB130 History of economics",602,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB801 - HB843 Consumption. Demand",66,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB846 - HB846.8 Welfare theory",42,
        "H - Social sciences|HB1 - HB3840 Economic theory. Demography|HB848 - HB3697 Demography. Population. Vital events",616,
        "H - Social sciences|HC1 - HC1085 Economic history and conditions",6110,
        "H - Social sciences|HC1 - HC1085 Economic history and conditions|HC72 - HC88 Economic growth, development, planning",1386,
        "H - Social sciences|HC1 - HC1085 Economic history and conditions|HC94 - HC1085 By region or country",4095,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor",16490,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD101 - HD1395.5 Land use",620,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD101 - HD1395.5 Land use|HD1241 - HD1339 Land tenure",89,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD101 - HD1395.5 Land use|HD1361 - HD1395.5 Real estate business",135,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture",720,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1428 - HD1431 International cooperation",2,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1470 - HD1476 Size of farms",5,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1483 - HD1486 Agricultural associations, societies, etc.",4,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1491 - HD1492.5 Cooperative agriculture",31,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1501 - HD1542 Agricultural classes (including farm tenancy, agricultural laborers",85,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD1401 - HD2210 Agriculture|HD1635 - HD1702 Utilization and culture of special classes of lands (including pasture lands, water resources development)",242,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry",1514,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry|HD2331 - HD2336 Home labor. Home-based businesses",2,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry|HD2337 - HD2339 Sweatshops",1,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD2321 - HD4730.9 Industry|HD2340.8 - HD2346.5 Small and medium-sized businesses, artisans, handicrafts, trades",133,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD28 - HD70 Management. Industrial management",6364,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class",3470,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD4861 - HD4895 Labor systems",56,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD4909 - HD5100.9 Wages",90,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5106 - HD5267 Hours of labor (including overtime, shift work, sick leave, vacations)",44,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5306 - HD5474 Labor disputes. Strikes and lockouts",74,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5481 - HD5630.7 Industrial arbitration. Mediation and conciliation",21,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5650 - HD5660 Employee participation in management. Employee ownership. Industrial democracy. Works councils",19,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD5701 - HD6000.9 Labor market. Labor supply. Labor demand (including unemployment, manpower policy, occupational training, employment agencies)",453,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD6050 - HD6305 Classes of labor (including women, children, students, middle-aged and older persons, minorities)",523,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD6350 - HD6940.7 Trade unions. Labor unions. Worker's associations",305,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD4801 - HD8943 Labor. Work. Working class|HD6941 - HD6948 Employers' associations",1,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades",3107,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9000 - HD9495 Agricultural industries",738,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9502 - HD9502.5 Energy industries. Energy policy. Fuel trade",408,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9506 - HD9624 Mineral industries. Metal trade",582,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9650 - HD9663 Chemistry industries",51,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9665 - HD9675 Pharmaceutical industry",95,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9680 - HD9714 Mechanical industries (including electric utilities, electronic industries, and machinery)",512,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9715 - HD9717.5 Construction industry",88,
        "H - Social sciences|HD28 - HD9999 Industries. Land use. Labor|HD9000 - HD9999 Special industries and trades|HD9720 - HD9975 Manufacturing industries",432,
        "H - Social sciences|HE1 - HE9990 Transportation and communications",1400,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE1001 - HE5600 Railroads. Rapid transit systems",193,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE199 - HE199.5 Freight (General)",24,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE305 - HE311 Urban transportation",79,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE323 - HE328 Transportation geography. Trade routes",6,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE331 - HE380 Traffic engineering. Roads and highways. Streets",93,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation",161,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation|HE380.8 - HE560 Waterways",57,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation|HE561 - HE971 Shipping",101,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE380.8 - HE971 Water transportation|HE561 - HE971 Shipping|HE730 - HE943 Merchant marine. Ocean shipping. Coastwise shipping",27,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5601 - HE5725 Automotive transportation (including trucking, bus lines, and taxicab service)",75,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5751 - HE5870 Ferries",3,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE5880 - HE5990 Express service",4,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE6000 - HE7500 Postal service. Stamps. Philately",72,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE8701 - HE9680.7 Telephone industry",50,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9713 - HE9715 Cellular telephone services industry. Wireless telephone",13,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9719 - HE9721 Artificial satellite telecommunications",4,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9723 - HE9737 Signaling",1,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9751 - HE9756 Messenger service",1,
        "H - Social sciences|HE1 - HE9990 Transportation and communications|HE9761 - HE9900 Air transportation. Airlines",91,
        "H - Social sciences|HF1 - HF6182 Commerce",7377,
        "H - Social sciences|HF1 - HF6182 Commerce|HF1021 - HF1027 Commercial geography. Economic geography",34,
        "H - Social sciences|HF1 - HF6182 Commerce|HF1040 - HF1054 Commodities. Commercial products",29,
        "H - Social sciences|HF1 - HF6182 Commerce|HF1701 - HF2701 Tariff. Free trade. Protectionism",119,
        "H - Social sciences|HF1 - HF6182 Commerce|HF294 - HF343 Boards of trade. Chambers of commerce. Merchants' associations",12,
        "H - Social sciences|HF1 - HF6182 Commerce|HF3000 - HF4055 By region or country",294,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business",5676,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5381 - HF5386 Vocational guidance. Career development",273,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5387 - HF5387.5 Business ethics",187,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5410 - HF5417.5 Marketing. Disribution of products",1427,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5419 - HF5422 Wholesale trade",2,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5428 - HF5429.6 Retail trade",96,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5429.7 - HF5430.6 Shopping centers. Shopping malls",6,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5437 - HF5444 Purchasing. Selling. Sales personnel. Sales executives",185,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5446 - HF5459 Canvassing. Peddling",8,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5460 - HF5469.5 Department stores. Mail order business. Supermarkets. Convenience stores",29,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5469.7 - HF5481 Markets. Fairs",47,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5482 - HF5482.4 Secondhand trade",5,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5482.6 - HF5482.65 Black market",1,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5484 - HF5495 Warehouses. Storage",4,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5520 - HF5541 Office equipment and supplies",2,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5546 - HF5548.6 Office management",752,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5548.7 - HF5548.85 Industrial psychology",100,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5549 - HF5549.5 Personnel management. Employment management",231,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5601 - HF5689 Accounting. Bookkeeping",601,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5691 - HF5716 Business mathematics. Commercial arithmetic",67,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5717 - HF5734.7 Business communication",172,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5735 - HF5746 Business records management",15,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5761 - HF5780 Shipment of goods. Delivery of goods",16,
        "H - Social sciences|HF1 - HF6182 Commerce|HF5001 - HF6182 Business|HF5801 - HF6182 Advertising",499,
        "H - Social sciences|HG1 - HG9999 Finance",5400,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking",784,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1621 - HG1638 Interest rates. Interest tables",20,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1641 - HG1643 Bank loans. Bank credit. Commercial loans",8,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1685 - HG1704 Drafts. Checks",2,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1706 - HG1708 Accounting. Bookkeeping",9,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1710 - HG1710.5 Electronic funds transfers",64,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG1811 - HG2351 Special classes of banks and financial institutions",136,
        "H - Social sciences|HG1 - HG9999 Finance|HG1501 - HG3550 Banking|HG2397 - HG3550 By region or country",299,
        "H - Social sciences|HG1 - HG9999 Finance|HG201 - HG1496 Money",517,
        "H - Social sciences|HG1 - HG9999 Finance|HG201 - HG1496 Money|HG451 - HG1496 By region or country",244,
        "H - Social sciences|HG1 - HG9999 Finance|HG3691 - HG3769 Credit. Debt. Loans (including credit institutions, credit instruments, consumer credit, bankruptcy)",144,
        "H - Social sciences|HG1 - HG9999 Finance|HG3810 - HG4000 Foreign exchange. International finance",368,
        "H - Social sciences|HG1 - HG9999 Finance|HG3810 - HG4000 Foreign exchange. International finance|HG3879 - HG3898 International monetary system",230,
        "H - Social sciences|HG1 - HG9999 Finance|HG4001 - HG4285 Finance management, Business finance. Corporation finance",443,
        "H - Social sciences|HG1 - HG9999 Finance|HG4301 - HG4480.9 Trust services. Trust companies",3,
        "H - Social sciences|HG1 - HG9999 Finance|HG6105 - HG6270.9 Lotteries",10,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance",356,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8053.5 - HG8054.45 Insurance for professions. Malpractice",4,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8075 - HG8107 Insurance business. Insurance management",13,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8111 - HG8123 Government policy. State supervision",2,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8205 - HG8220 Government insurance",1,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8501 - HG8745 By region or country",43,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG8751 - HG9295 Life insurance",116,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9301 - HG9343 Accident insurance",2,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9371 - HG9399 Health insurance",32,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9651 - HG9899 Fire insurance",23,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9956 - HG9969 Casualty insurance",10,
        "H - Social sciences|HG1 - HG9999 Finance|HG8011 - HG9999 Insurance|HG9969.5 - HG9999 Other insurance (including automobile, burglary, disaster, title, etc.)",29,
        "H - Social sciences|HJ9 - HJ9940 Public finance",808,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2005 - HJ2216 Income and expenditure. Budget",77,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue",292,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2321 - HJ2323 Tax incidence. Tax shifting. Tax equity",7,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2326 - HJ2327 Progressive taxation",3,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2336 - HJ2337 Tax exemption",2,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ2361 - HJ3192.7 By region or country",123,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ3801 - HJ3844 Revenue from sources other than taxation",9,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ4113 - HJ4601 Property tax",14,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ4629 - HJ4830 Income tax",45,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ4919 - HJ4936 Capitation. Poll tax",1,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ2240 - HJ5908 Revenue. Taxation. Internal revenue|HJ5309 - HJ5510 Administrative fees. User charges. License fees",11,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ241 - HJ1620 By region or country",129,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ6603 - HJ7390 Customs administration",35,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ7461 - HJ7980 Expenditures. Government spending",27,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ8001 - HJ8899 Public debts",68,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ8001 - HJ8899 Public debts|HJ8101 - HJ8899 By region or country",44,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ9103 - HJ9695 Local finance. Municipal finance (including the revenue, budget, expenditures of counties, boroughs, municipalities, etc.)",43,
        "H - Social sciences|HJ9 - HJ9940 Public finance|HJ9701 - HJ9940 Public accounting. Auditing",33,
        "H - Social sciences|HM401 - HM1281 Sociology (General)",3468,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology",986,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology|HM1041 - HM1101 Social perception. Social cognition (including perception of the self and others, prejudices, stereotype)",66,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology|HM1106 - HM1171 Interpersonal relations. Social behavior",346,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM1001 - HM1281 Social psychology|HM1176 - HM1281 Social influence. Social pressure",400,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM435 - HM477 History of sociology. History of sociological theory",28,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM435 - HM477 History of sociology. History of sociological theory|HM461 - HM473 Schools of sociology. Schools of social thought",12,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM481 - HM554 Theory. Method. Relations to other subjects",174,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM621 - HM656 Culture",342,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM661 - HM696 Social control",143,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM711 - HM806 Groups and organizations",597,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM711 - HM806 Groups and organizations|HM756 - HM781 Community",43,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM711 - HM806 Groups and organizations|HM786 - HM806 Organizational sociology. Organization theory",53,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM811 - HM821 Deviant behavior. Social deviance",32,
        "H - Social sciences|HM401 - HM1281 Sociology (General)|HM831 - HM901 Social change",740,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform",2531,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform|HN30 - HN39 The church and social problems",31,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform|HN41 - HN46 Community centers. Social centers",2,
        "H - Social sciences|HN1 - HN995 Social history and conditions. Social problems. Social reform|HN50 - HN995 By region or country",1982,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women",8077,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1073 - HQ1073.5 Thanatology. Death. Dying",34,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1075 - HQ1075.5 Sex role",98,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1088 - HQ1090.7 Men",94,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism",2325,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism|HQ1451 - HQ1870.7 By region or country",683,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ1101 - HQ2030.7 Women. Feminism|HQ1871 - HQ2030.7 Women's clubs",13,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life",2095,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ101 - HQ440.7 Prostitution",245,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ19 - HQ30.7 Sexual behavior and attitudes. Sexuality",243,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ31 - HQ64 Sex instruction and sexual ethics",282,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ12 - HQ449 Sexual life|HQ75 - HQ76.8 Homosexuality. Lesbianism",716,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ2035 - HQ2039 Life skills. Coping skills. Everyday living skills",9,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ2042 - HQ2044 Life style",5,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ450 - HQ472 Erotica",141,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home",2982,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1001 - HQ1006 The state and marriage",1,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1051 - HQ1057 The church and marriage",1,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ1060 - HQ1064 Aged. Gerontology (Social aspects). Retirement",168,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ750 - HQ755.5 Eugenics",26,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ755.7 - HQ759.92 Parents. Parenthood",431,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ760 - HQ767.7 Family size",327,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ767.8 - HQ792.2 Children. Child development (including child rearing, child care, child life)",711,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ793 - HQ799.2 Youth. Adolescents. Teenagers",274,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ799.5 - HQ799.9 Young men and women",68,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ799.95 - HQ799.97 Adulthood",11,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ800 - HQ800.4 Single people",33,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ801 - HQ801.83 Man-woman relationships. Courtship. Dating",72,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ809 - HQ809.3 Family violence",5,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ811 - HQ960.7 Divorce",50,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ961 - HQ967 Free love",2,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ981 - HQ996 Polygamy",10,
        "H - Social sciences|HQ1 - HQ2044 The family. Marriage. Women|HQ503 - HQ1064 The family. Marriage. Home|HQ998 - HQ999 Illegitimacy. Unmarried mothers",1,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.",142,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS101 - HS330.7 Secret societies",13,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes",40,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS1501 - HS1510 Benevolent and friendly societies and mutual assessment fraternities",2,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS1525 - HS1560 Religious socieities",2,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS1601 - HS2265 Race socieities",3,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS1501 - HS2460.7 Other societies. By classes|HS2301 - HS2460.7 Political and patriotic societies",32,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS2501 - HS3371 Clubs. Clubs and societies for special classes (including boys' societies, Boy Scouts, girls' societies)",37,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS351 - HS929 Freemasons",42,
        "H - Social sciences|HS1 - HS3371 Societies: secret, benevolent, etc.|HS951 - HS1179 Odd Fellows",2,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races",2691,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city",1986,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT161 - HT165 Garden cities. The 'city beautiful'",7,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT165.5 - HT169.9 City planning",658,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT170 - HT178 Urban renewal. Urban redevelopment",94,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT201 - HT221 City population (including children in cities, immigration)",9,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT321 - HT325 The city as economic factor. City promotion",40,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT330 - HT334 Metropolitan areas",10,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT351 - HT352 Suburban cities and towns",17,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT361 - HT384 Urbanization. City and country",86,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT101 - HT395 Urban groups. Urban sociology. The city|HT390 - HT395 Regional planning",91,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT1501 - HT1595 Races (including race as a social group and race relations in general)",185,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT401 - HT485 Rural groups. Rural sociology",45,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes",401,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT621 - HT635 Orgin of social classes",1,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT641 - HT657 Classes arising from birth",24,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT675 - HT690 Classes arising from occupation",21,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT713 - HT725 Caste system",21,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT751 - HT815 Serfdom",3,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT851 - HT1445 Slavery",237,
        "H - Social sciences|HT51 - HT1595 Communities. Classes. Races|HT601 - HT1445 Classes|HT851 - HT1445 Slavery|HT1048 - HT1444 By region or country",152,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology",8793,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV40 - HV69 Social service. Social work. Charity organization and practice (including social case work, private/public relief, institutional care, etc.)",295,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV4961 - HV4995 Degeneration",2,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV4997 - HV5000 Substance abuse",37,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV5001 - HV5720.5 Alcoholism. Intemperance. Temperance reform",160,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management",381,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management|HV553 - HV639 Relief in case of disasters",203,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management|HV553 - HV639 Relief in case of disasters|HV560 - HV583 Red Cross. Red Crescent",5,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV551.2 - HV639 Emergency management|HV553 - HV639 Relief in case of disasters|HV599 - HV639 Special types of disasters",88,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV5725 - HV5770 Tobacco habit",28,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV5800 - HV5840 Drug habits. Drug abuse",306,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology",3151,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6035 - HV6197 Criminal anthropology (including criminal types, criminal psychology, prison psychology, causes of crime)",165,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6201 - HV6249 Criminal classes",122,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6250 - HV6250.4 Victims of crimes. Victimology",45,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6251 - HV6773.55 Crimes and offenses",2347,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV6001 - HV7220.5 Criminology|HV6774 - HV7220.5 Crimes and criminal classes",180,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV640 - HV645 Refugee problems",250,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV675 - HV677 Accidents. Prevention of accidents",16,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV680 - HV696 Free professional services (including medical charities)",30,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief",1502,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV3176 - HV3199 Special classes. By race or ethnic group",20,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4005 - HV4013 Immigrants",8,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4023 - HV4470.7 Poor in cities. Slums",74,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4480 - HV4630 Mendicancy. Vagabondism. Tramps. Homelessness",89,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4701 - HV4890.9 Protection of animals. Animal rights. Animal welfare",146,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV4905 - HV5959 Animal experimentation. Anti-vivisection",17,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes",1141,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1421 - HV1441 Young Adults. Youth. Teenagers",40,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1442 - HV1448 Women",10,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1450 - HV1494 Aged",100,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV1551 - HV3024 People with disabilities (including blind, deaf, people with physical and mental disabilities)",504,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV697 - HV700.7 Families. Mothers. Widow's pensions",43,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children",410,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV873 - HV887 Destitute, neglected, and abandoned children. Street children",127,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV888 - HV907 Children with disabilities",36,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV697 - HV4959 Protection, assistance, and relief|HV697 - HV3024 Special classes|HV701 - HV1420.5 Children|HV959 - HV1420.5 Orphanages. Orphans",24,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration",2025,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7435 - HV7439 Gun control",60,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary",844,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV7935 - HV8025 Administration and organization",94,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8031 - HV8080 Police duty. Methods of protection",287,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8031 - HV8080 Police duty. Methods of protection|HV8079.5 - HV8079.55 Traffic control. Traffic accident investigation",1,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8081 - HV8099 Private detectives. Detective bureaus",4,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV7551 - HV8280.7 Police. Detectives. Constabulary|HV8130 - HV8280.7 By region or country",317,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8290 - HV8291 Private security services",15,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections",921,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections|HV9051 - HV9230.7 The juvenile offender. Juvenile delinquency. Reform schools, etc.",178,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections|HV9261 - HV9430.7 Reformation and reclamation of adult prisoners",93,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV8301 - HV9920.7 Penology. Prisons. Corrections|HV9441 - HV9920.7 By region or country",273,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV7231 - HV9960 Criminal justice administration|HV9950 - HV9960 By region or country",62,
        "H - Social sciences|HV1 - HV9960 Social pathology. Social and public welfare. Criminology|HV85 - HV525 By region or country",310,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism",1170,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX519 - HX550 Communism/socialism in relation to special topics",85,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX626 - HX696 Communism: Utopian socialism, collective settlements",44,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX806 - HX811 Utopias. The ideal state",42,
        "H - Social sciences|HX1 - HX970.7 Socialism. Communism. Anarchism|HX821 - HX970.9 Anarchism",125,
        "J - Political Science",14032,
        "J - Political Science|J1 - J981 General legislative and executive papers",94,
        "J - Political Science|J1 - J981 General legislative and executive papers|J10 - J98 United States",40,
        "J - Political Science|J1 - J981 General legislative and executive papers|J10 - J98 United States|J80 - J82 Presidents' messages and other executive papers",10,
        "J - Political Science|J1 - J981 General legislative and executive papers|J100 - J981 Other regions and countries",54,
        "J - Political Science|JA1 - JA92 Political science (General)",886,
        "J - Political Science|JA1 - JA92 Political science (General)|JA1 - JA26 Periodicals",15,
        "J - Political Science|JA1 - JA92 Political science (General)|JA60 - JA64 Dictionaries and encyclopedias",6,
        "J - Political Science|JA1 - JA92 Political science (General)|JA71 - JA80.2 Theory. Relations to other subjects",485,
        "J - Political Science|JA1 - JA92 Political science (General)|JA81 - JA84 History",57,
        "J - Political Science|JA1 - JA92 Political science (General)|JA86 - JA88 Study and teaching. Research",20,
        "J - Political Science|JC11 - JC607 Political theory",2980,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state",2980,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC109 - JC121 Medieval state",2,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC131 - JC273 Modern state",329,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC311 - JC314 Nationalism. Nation state",110,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC319 - JC323 Political geography",55,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC345 - JC347 Symbolism",7,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC348 - JC497 Forms of the state",806,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC501 - JC607 Purpose, functions, and relations of the state",1059,
        "J - Political Science|JC11 - JC607 Political theory|JC11 - JC607 State. Theories of the state|JC51 - JC93 Ancient state",161,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration",1134,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF1338 - JF2112 Public administration",572,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF1338 - JF2112 Public administration|JF1411 - JF1521 Civil service",22,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF1338 - JF2112 Public administration|JF2011 - JF2112 Political parties",58,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government",561,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government",117,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government|JF251 - JF289 Executive. Heads of state",23,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government|JF331 - JF341 Parliamentary government",5,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF201 - JF619 Organs and functions of government|JF441 - JF619 Legislation. Legislative process. Law",81,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF51 - JF56 General works. History",32,
        "J - Political Science|JF20 - JF2112 Political institutions and public administration|JF20 - JF1177 General. Comparative government|JF800 - JF1177 Political rights. Political participation",242,
        "J - Political Science|JJ1000 - JJ1019 Political institutions and public administration",2,
        "J - Political Science|JJ1000 - JJ1019 Political institutions and public administration|JJ1000 - JJ1019 North America",2,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration",1972,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States",1964,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics",405,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics|JK1756 - JK1761 Citizenship",31,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics|JK1846 - JK1936 Suffrage",58,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK1717 - JK2248 Political rights. Practical politics|JK1961 - JK2248 Electoral system",161,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK2255 - JK2391 Political parties",239,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK2403 - JK9593 State government",156,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration",826,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1001 - JK1443 Congress. Legislative branch",206,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1001 - JK1443 Congress. Legislative branch|JK1154 - JK1276 Senate",14,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1001 - JK1443 Congress. Legislative branch|JK1308 - JK1443 House of Representatives",31,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK1606 - JK1685 Government property, etc.",6,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK501 - JK901 Executive branch",285,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK1 - JK9593 United States|JK401 - JK1685 Government. Public administration|JK501 - JK901 Executive branch|JK631 - JK873 Civil Service. Departments and agencies",67,
        "J - Political Science|JK1 - JK9993 Political institutions and public administration|JK9663 - JK9993 Confederate States of America",8,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration",258,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1 - JL500 Canada",29,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1200 - JL1299 Mexico",21,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1400 - JL1679 Central America",3,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL1850 - JL3899 South America",95,
        "J - Political Science|JL1 - JL3899 Political institutions and public administration|JL599.5 - JL839 West Indies. Caribbean Area",8,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration",1192,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1 - JN97 Europe (General)",370,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN101 - JN1179 Great Britain",306,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1187 - JN1371 Scotland",6,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1400 - JN1571.5 Ireland",18,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN1601 - JN2191 Austria-Hungary. Austria. Hungary",3,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN2210 - JN2229 Czech Republic. Czechoslovakia",3,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN2301 - JN3007 France",46,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN3201 - JN4980 Germany",100,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN5001 - JN5191 Greece",5,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN5201 - JN5690 Italy",38,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN5701 - JN5999 Netherlands",9,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6101 - JN6371 Belgium",3,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6500 - JN6598 Soviet Union. Russia. Former Soviet Republics",80,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6630 - JN6639 Ukraine",2,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6690 - JN6699 Russia (Federation)",31,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN6750 - JN6769 Poland",2,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7011 - JN7066 Scandinavia. Northern Europe",4,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7390 - JN7399 Finland",2,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7401 - JN7695 Norway",6,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN7721 - JN7997 Sweden",8,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN8101 - JN8399 Spain",25,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN8423 - JN8661 Portugal",9,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN8701 - JN9599 Switzerland",7,
        "J - Political Science|JN1 - JN9689 Political institutions and public administration|JN9600 - JN9689 Balkan States",11,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration",1281,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia",788,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ1070 - JQ1199 Central Asia. Including former republics of the Soviet Union",4,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ1499 - JQ1749 East Asia. Including China, Japan, Korea",305,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ1758 - JQ1852 Middle East. Including Turkey, Iran, Israel, Arabian Peninsula",130,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1 - JQ1849 Asia|JQ200 - JQ620 India",191,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ1870 - JQ3981 Africa",306,
        "J - Political Science|JQ1 - JQ6651 Political institutions and public administration|JQ3995 - JQ6651 Australia. New Zealand. Pacific Ocean islands",95,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government",359,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS141 - JS271 Municipal government and local government other than municipal",12,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS1701 - JS1800 Canada",6,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS2101 - JS2143 Mexico",4,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS2300 - JS2778 South America",3,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS300 - JS1583 United States",120,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS3000 - JS6949.8 Europe",84,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS55 - JS67 History",1,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS6950 - JS7509 Asia",62,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS7525 - JS7819 Africa",14,
        "J - Political Science|JS3 - JS8500 Local government. Municipal government|JS8001 - JS8490 Australia. New Zealand. Pacific Ocean islands",4,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration",1106,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization",157,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization|JV412 - JV461 Administration and organization",6,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization|JV500 - JV5399 Colonizing nations",68,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV1 - JV5399 Colonies and colonization|JV61 - JV151 History",18,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration",949,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6021 - JV6032 History",9,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6061 - JV6149 Emigration",13,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6201 - JV6348 Immigration",172,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV6403 - JV7127 United States",245,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV7200 - JV7539 Canada, Latin America, etc.",38,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV7590 - JV8349 Europe",228,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV8490 - JV8758 Asia",78,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV8790 - JV9025 Africa",33,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV9100 - JV9269 Australia. New Zealand",12,
        "J - Political Science|JV1 - JV9480 Colonies and colonization. Emigration and immigration. International migration|JV6001 - JV9480 Emigration and immigration. International migration|JV9290 - JV9470 Pacific Ocean islands",1,
        "J - Political Science|JZ2 - JZ6530 International relations",1846,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1249 - JZ1254 Relation to other disciplines and topics",56,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations",835,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations|JZ1328 - JZ1395 By period",8,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations|JZ1400 - JZ1454 Diplomatic and consular service",12,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ1305 - JZ2060 Scope of international relations|JZ1464 - JZ2060 By country, territory, or region",313,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ24 - JZ38 Societies. Associations, etc.",3,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ3675 - JZ3875 State territory and its different parts",6,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ3675 - JZ3875 State territory and its different parts|JZ3686 - JZ3875 International waters",1,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations",170,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4841 - JZ4848 Political non-governmental organizations. NGOs",40,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4850 - JZ5490 Intergovernmental organizations. IGOs",116,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4850 - JZ5490 Intergovernmental organizations. IGOs|JZ4853 - JZ4934 The League of Nations",7,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ4835 - JZ5490 International organizations and associations|JZ4850 - JZ5490 Intergovernmental organizations. IGOs|JZ4935 - JZ5160 The United Nations",63,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5.5 - JZ18 Periodicals",1,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change",523,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ5514 - JZ5526 Societies. Associations, etc.",4,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ5527 - JZ5532 Congresses and conferences",2,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ5586 - JZ6009 International security. Disarmament",186,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ5511.2 - JZ6299 Promotion of peace. Peaceful change|JZ6010 - JZ6299 Pacific settlement of international disputes",34,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ63 - JZ1153 Sources",2,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ6360 - JZ6377 Non-military coercion",75,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ6378 - JZ6405 The armed conflict. War and order",31,
        "J - Political Science|JZ2 - JZ6530 International relations|JZ6422 - JZ6422.5 Neutrality",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence",21500,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence",8922,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K1 - K36.5 Periodicals",198,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K100 - K103 Legal education",33,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K115 - K130 The legal profession",37,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K140 - K165 History of law",32,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K190 - K195 Ethnological jurisprudence. Primitive law",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law",444,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K212 - K213 Methodology",28,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K215 - K218 History",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K237 - K264 The concept of law",46,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K270 - K274 Acts and events",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K280 - K286 Sources of law",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K288 - K296 Interpretation and construction of law. Lacunae in law",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K300 - K304 Classification of law. Typology",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory",145,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K330 - K344 Positivism",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K366 - K380 Sociology of law. Sociological jurisprudence",55,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K201 - K487 Jurisprudence. Philosophy and theory of law|K321 - K474 Schools of legal theory|K400 - K474 Natural law",50,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K37 - K44 Bibliography",19,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K50 - K54 Dictionaries. Words and phrases",14,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law",2376,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law",183,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1010 - K1014 The merchant. Business enterprises",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1021 - K1022 Commercial agency",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts",56,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1026 - K1045 Sale of goods",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1054 - K1065.5 Negotiable instruments",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1066 - K1089 Banking",32,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1112 - K1116 Investments",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1024 - K1132 Commercial contracts|K1130 - K1132 Carriage of goods and passengers. Carriers",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1150 - K1231 Maritime law",39,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1150 - K1231 Maritime law|K1195 - K1223 Maritime social legislation",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1150 - K1231 Maritime law|K1226 - K1231 Marine insurance",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1241 - K1287 Insurance",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1301 - K1366 Business associations",37,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1000 - K1395 Commercial law|K1370 - K1395 Insolvency and bankruptcy. Creditors' rights",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1401 - K1578 Intellectual property",276,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1401 - K1578 Intellectual property|K1411 - K1485 Copyright",81,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1401 - K1578 Intellectual property|K1500 - K1578 Industrial property",87,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation",49,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation|K1701 - K1841 Labor law",37,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation|K1861 - K1929 Social insurance",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K1700 - K1973 Social legislation|K1960 - K1973 Public welfare. Public assistance",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2100 - K2385 Courts. Procedure",75,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2100 - K2385 Courts. Procedure|K2110 - K2155 Court organization and procedure",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2100 - K2385 Courts. Procedure|K2201 - K2385 Civil procedure",49,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K2400 - K2405 Arbitration and award",103,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law",466,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3171 - K3179 Constitutional principles",33,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3184 - K3188 Form and structure of government",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3224 - K3278 Individual and state",317,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3280 - K3282 Church and state",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government",17,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government|K3290 - K3304 The people. Election law",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government|K3310 - K3329 The legislature",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3154 - K3370 Constitutional law|K3289 - K3367 Organs of government|K3332 - K3363 Heads of state and the central government",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3400 - K3431 Administrative law",11,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3400 - K3431 Administrative law|K3402 - K3417 The administrative process",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3400 - K3431 Administrative law|K3420 - K3431 Administrative organization",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3476 - K3560 Public property. Public restraint on private property",46,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3566 - K3578 Public health",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3581 - K3598 Environmental law",100,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3601 - K3611 Medical legislation",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3615 - K3622 Veterinary laws. Veterinary medicine and hygiene. Prevention of cruelty to animals",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3625 - K3649 Food. Drugs. Cosmetics",14,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3661 - K3674 Public safety",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3700 - K3705 Control of social activities",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3740 - K3762 Education",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3770 - K3795 Science and arts. Research",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3820 - K3836 Economic constitution, policy, planning, and development",64,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law",148,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3842 - K3862 Trade regulations. Control of trade practices",25,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3870 - K3918 rimary production. Extractive industries",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3921 - K3925 Manufacturing industries",5,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3926 - K3935 Food processing industries",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3941 - K3974 Trade and commerce",24,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K3978 - K3992 Public utilities",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K4011 - K4343 Transportation and communication",44,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K3840 - K4375 Regulation of industry, trade, and commerce. Occupational law|K4360 - K4375 Professions and occupations",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4430 - K4675 Public finance",52,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4430 - K4675 Public finance|K4453 - K4640 National revenue",43,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4700 - K4705 Government measures in time of war, national emergency, or economic crisis",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4720 - K4780 National defense. Military law",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K4720 - K4780 National defense. Military law|K4740 - K4760 Military criminal law and procedure",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure",218,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure|K5015.4 - K5350 Criminal law",156,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure|K5401 - K5570 Criminal procedure",42,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K5000 - K5582 Criminal law and procedure|K5575 - K5582 Juvenile criminal law and procedure",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K540 - K546 Trials",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K583 - K591 Legal systems compared",18,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K600 - K615 Private law",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law",223,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K625 - K709 Persons",80,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K720 - K792 Property",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K795 - K798 Trusts and trustees",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K805 - K821 Succession upon death",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K830 - K968 Obligations",97,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K830 - K968 Obligations|K840 - K917 Contracts",60,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K520 - K5582 Comparative law. International uniform law|K623 - K968 Civil law|K830 - K968 Obligations|K923 - K968 Torts",27,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws",30,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7060 - K7081 Choice of law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7125 - K7140 Natural persons",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7155 - K7197 Domestic relations. Family law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7120 - K7197 Persons|K7155 - K7197 Domestic relations. Family law|K7181 - K7197 Parent and child. Guardian and ward",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7260 - K7338 Obligations",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7260 - K7338 Obligations|K7265 - K7305 Contracts",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law|K7350 - K7444 Commercial contracts",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7340 - K7512 Commercial law|K7510 - K7512 Insolvency and bankruptcy. Creditors' rights",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7550 - K7582 Intellectual property",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7550 - K7582 Intellectual property|K7570 - K7582 Industrial property",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K7000 - K7720 Private international law. Conflict of laws|K7611 - K7688 Civil procedure. International civil procedure",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|K1 - K7720 Law in general. Comparative and uniform law. Jurisprudence|K85 - K89 Legal research",19,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB162 - KB250 Legal systems compared",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB270 - KB280 Theory, philosophy, and science of religious law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB2101 - KB2862 Constitutions and religion. Constitutional and administrative law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB524 - KB530 Persons",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB531 - KB619 Domestic relations. Family law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KB1 - KB4855 Religious law in general. Comparative religious law. Jurisprudence|KB400 - KB4855 Interdisciplinary discussion of subjects|KB810 - KB962.8 Obligations. Contracts and transactions",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM1 - KBM523.72 Halakah",7,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri",16,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM1468 - KBM1547 Social laws and legislation",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM2070 - KBM2614 Constitutional law. Constitutional principles of the Jewish community",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM3098 - KBM3122 Medical legislation",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM3790 - KBM4855 Criminal law and procedure",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM524.12 - KBM524.26 The concept of Jewish law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM524.32 - KBM524.34 Methodology of law development",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM524.6 - KBM530 Persons",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM531 - KBM619 Domestic relations. Family law",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBM1 - KBM4855 Jewish law. Halakah|KBM523.8 - KBM4855 Mishpat Ivri|KBM639 - KBM1424 Dinei mamonot",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh",92,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP173.25 - KBP0.6 Islamic law and other disciplines or subjects",67,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBP1 - KBP4860 Islamic law. Shari'ah. Fiqh|KBP50 - KBP69 History, development and application of Islamic law",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR190 - KBR2154.5 Sources",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR2310 - KBR3026 Constitution of the Church",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3040 - KBR3070 The teaching office of the church. Magisterium. De ecclesiae munere docendi",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3077 - KBR3165 Sacraments. Administration of sacraments. De sacramentis et administratione",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR3780 - KBR3983 Judiciary. Ecclesiastical courts and procedure. De processibus",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBR2 - KBR4090 History of canon law|KBR4000 - KBR4090 Church and state relationships. De relationibus inter ecclesiam et status. Ius publicum ecclesiae",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See",17,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2210 - KBU2212 The codes of canon law",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2215 - KBU2308 General norms and principles. De normis generalibus",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU2310 - KBU3026 Constitution of the Church",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3040 - KBU3070 The teaching office of the Church. Magisterium. De ecclesiae munere docendi",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3184 - KBU3256 Other acts of divine worship. De ceteris actibus Cultus Divini",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3500 - KBU3774 Sanctions in the Church. Criminal law. De sanctionibus in Ecclesia. De lege poenali",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU3780 - KBU3985 Courts and procedure. De processibus",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU4000 - KBU4097 Church and state relationships. De relationibus inter ecclesiam et status. Ius publicum ecclesiae",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KBU2 - KBU4820 Law of the Roman Catholic Church. The Holy See|KBU4112 - KBU4820 Local Church government",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KD - Law of the United Kingdom and Ireland",1461,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KD - Law of the United Kingdom and Ireland|KD51 - KD9500 England and Wales",1461,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KDZ1 - KDZ4999 Law of America. North America",17,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KE - Law of Canada",105,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KE - Law of Canada|KE1 - KE9450 Federal law. Common and collective provincial law",104,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States",6638,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF0001 - KF999",2546,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF1 - KF9827 Federal law. Common and collective state law",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF1000 - KF1999",780,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF2000 - KF2999",322,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF3000 - KF3999",738,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF4000 - KF4999",900,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF5000 - KF5999",256,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF6000 - KF6999",289,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF7000 - KF7999",59,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KF - Law of the United States|KF8000 - KF8999",767,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KG1 - KG999 Latin America (General)",33,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KH1 - KH999 South America (General)",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KJ - Europe",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KJ - Europe|KJ2 - KJ1040 History of Law",23,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL147 - KL177 Ancient legal systems compared",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL2800 - KL3099 Egypt",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL4110 - KL4399 Greek law",14,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KL - Asia and Eurasia, Africa, Pacific Area, and Antarctica|KL2 - KL5915 History of law. The ancient orient|KL700 - KL2215 Mesopotamia. Assyro",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLA1 - KLA9999 Russia. Soviet Union",71,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLB1 - KLB6499 Russia (Federation, 1992",15,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLH1 - KLH490 Georgia (Republic)",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLN1 - KLN489 Russian S.F.S.R. (to 1991)",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLV1 - KLV490 Turkmenistan",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KLW1 - KLW490 Uzbekistan",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KM - Asia and Eurasia, Africa, Pacific Area, and Antarctica. Asia",11,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KM - Asia and Eurasia, Africa, Pacific Area, and Antarctica. Asia|KM1 - KM999 General",9,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KQ - Africa",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KQ - Africa|KQ2010 - KQ9000 Law of indigenous peoples",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KU1 - KU4999 Australia",87,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KUQ1 - KUQ4990 New Zealand",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KV - Pacific area",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KWX - Antarctica",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations",681,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1165 - KZ1208 Trials",35,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1165 - KZ1208 Trials|KZ1168 - KZ1208 War crime trials",34,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1234 - KZ1236 Legal research. Legal bibliography",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1249 - KZ1252 International law and other disciplines",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1255 - KZ1273 Theory and principles",38,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1255 - KZ1273 Theory and principles|KZ1267 - KZ1273 Domain of the law of nations",11,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1284 - KZ1285.5 Methodology",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1287 - KZ1296 Codification of the law of nations",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1298 - KZ1304 The law of treaties. System of treaty law",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1319 - KZ1327 International legal regimes",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium",33,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ1329 - KZ3085 Early/Medieval development to ca. 1900. Ius Naturae et Gentium|KZ2064 - KZ3085 Publicists. Writers on public international law",33,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ24 - KZ38 Societies, etc.",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3092 - KZ3405 20th century",21,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3092 - KZ3405 20th century|KZ3110 - KZ3405 Publicists. Writers on public international law",19,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3670 - KZ3881 Objects of the law of nations. Territory and its different parts",18,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members",125,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations",124,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4002 - KZ4080 The state",42,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4112 - KZ4820 By state",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs",38,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs|KZ4853 - KZ4934 The League of Nations",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ3900 - KZ5490 The international legal community and members|KZ3910 - KZ5490 Subjects of the law of nations|KZ4850 - KZ5490 Intergovernmental organizations. IGOs|KZ4935 - KZ5275 The United Nations",20,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement",75,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security",27,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes",25,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5637 - KZ5645 Conventional arms control",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5647 - KZ5686 Nuclear (Strategic) arms limitation",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ5510 - KZ6299 International law of peace and peace enforcement|KZ5586 - KZ5893 The system of collective security|KZ5615 - KZ5893 Arms control and disarmament regimes|KZ5870 - KZ5893 Mutual and balanced reduction of armed forces",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium",26,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements",6,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ119 - KZ165 To 1920",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ170 - KZ173 -1920",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ118 - KZ194 Treaties and other international agreements|KZ184 - KZ194 Peace treaties",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ199 - KZ218 Judicial decisions and arbitral awards. Law reports",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ63 - KZ1152 Sources. Fontes juris gentium|KZ221 - KZ1152 By region or country",13,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes",138,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6360 - KZ6373 Non-military coercion",17,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6374 - KZ6377 Threat of force",10,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli",97,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6427 - KZ6437 Warfare on land",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6440 - KZ6530 Humanitarian law",29,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6540 - KZ6660 Warfare on sea",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6665 - KZ6714 Air warfare",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZ2 - KZ6785 Law of nations|KZ6350 - KZ6785 Enforced settlement of international disputes|KZ6378 - KZ6785 Law of war and neutrality. Jus belli|KZ6730 - KZ6785 The end of war. Armistice. Surrender. Postliminy",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea",68,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1040 - KZA1065 Intergovernmental congresses and conferences",2,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1340 - KZA1417 Concepts and principles",12,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1340 - KZA1417 Concepts and principles|KZA1348 - KZA1405 Mare liberum doctrine",8,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1430 - KZA1690 Maritime boundaries",15,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZA1002 - KZA4205 Law of the sea|KZA1430 - KZA1690 Maritime boundaries|KZA1630 - KZA1664 Continental shelf",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space",24,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD1420 - KZD1455 Boundaries",1,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space",4,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space|KZD3489.5 - KZD3608 Space resources",3,
        "K - Law in general. Comparative and uniform law. Jurisprudence|KZD1002 - KZD6715 Space law. Law of outer space|KZD3489 - KZD4406 Peaceful uses of outer space|KZD4030 - KZD4326 Public order in space and outer space",1,
        "L - Education",16560,
        "L - Education|L7 - L991 Education (General)",156,
        "L - Education|L7 - L991 Education (General)|L111 - L791 Official documents, reports, etc.",31,
        "L - Education|L7 - L991 Education (General)|L7 - L97 Periodicals. Societies",46,
        "L - Education|L7 - L991 Education (General)|L900 - L991 Directories of educational institutions",70,
        "L - Education|LA5 - LA2396 History of education",1322,
        "L - Education|LA5 - LA2396 History of education|LA173 - LA186 Higher education",27,
        "L - Education|LA5 - LA2396 History of education|LA201 - LA398 United States",393,
        "L - Education|LA5 - LA2396 History of education|LA2301 - LA2396 Biography",105,
        "L - Education|LA5 - LA2396 History of education|LA31 - LA135 By period",51,
        "L - Education|LA5 - LA2396 History of education|LA410 - LA2284 Other regions or countries",711,
        "L - Education|LA5 - LA2396 History of education|LA5 - LA25 General",28,
        "L - Education|LB5 - LB3640 Theory and practice of education",9348,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1025 - LB1050.75 Teaching (Principles and practice)",2656,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1025 - LB1050.75 Teaching (Principles and practice)|LB1049.9 - LB1050.75 Reading (General)",263,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1050.9 - LB1091 Educational psychology",473,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1101 - LB1139 Child study",107,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1139.2 - LB1139.5 Early childhood education",235,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1140 - LB1140.5 Preschool education. Nursery schools",69,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1141 - LB1489 Kindergarten",23,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1501 - LB1547 Primary education",107,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1555 - LB1602 Elementary or public school education",904,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1603 - LB1696.6 Secondary education. High schools",224,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators",621,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1771 - LB1773 Certification of teachers",1,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1775 - LB1785 Professional aspects of teaching and school administrators. Vocational guidance",173,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1805 - LB2151 State teachers colleges",12,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1805 - LB2151 State teachers colleges|LB1811 - LB1987 United States",8,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB1805 - LB2151 State teachers colleges|LB1991 - LB2151 Other regions or countries",4,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB1705 - LB2286 Education and training of teachers and administrators|LB2165 - LB2278 Teacher training in universities and colleges",10,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education",1434,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2326.4 - LB2330 Institutions of higher education",46,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2331.7 - LB2335.8 Teaching personnel",83,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2335.86 - LB2335.88 Trade unions",2,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2335.95 - LB2337 Endowments, trusts, etc.",12,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2337.2 - LB2340.8 Student financial aid",37,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2341 - LB2341.95 Supervision and administration. Business management",128,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2351 - LB2359 Admissions and entrance requirements",34,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2361 - LB2365 Curriculum",43,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2366 - LB2367.75 College examinations",9,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2371 - LB2372 Graduate education",40,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2300 - LB2430 Higher education|LB2381 - LB2391 Academic degrees",40,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2799 - LB2799.3 Educational consultants and consulting",1,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization",1602,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB2831.6 - LB2831.99 Administrative personnel",73,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB2832 - LB2844.1 Teaching personnel",97,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB2844.52 - LB2844.63 Trade unions",12,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB3011 - LB3095 School management and discipline",544,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB3011 - LB3095 School management and discipline|LB3045 - LB3048 Textbooks",34,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB2801 - LB3095 School administration and organization|LB3011 - LB3095 School management and discipline|LB3050 - LB3060.87 Educational tests, measurements, evaluations and examinations",199,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3201 - LB3325 School architecture and equipment. School physical facilities. Campus planning",46,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3497 - LB3499 Hygiene in universities and colleges",5,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3525 - LB3575 Special days",1,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB3602 - LB3640 School life. Student manners and customs",65,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB5 - LB45 General",354,
        "L - Education|LB5 - LB3640 Theory and practice of education|LB51 - LB885 Systems of individual educators and writers",158,
        "L - Education|LC8 - LC6691 Special aspects of education",4495,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1200 - LC1203 Inclusive education",64,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons",1406,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC1401 - LC2572 Women",125,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2574 - LC2576 Gays. Lesbians. Bisexuals",19,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2580 - LC2582 Student",2,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2601 - LC2611 Education in developing countries",22,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2630 - LC2638 Asian Americans. Asians in the United States",8,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2667 - LC2698 Latin Americans. Hispanic Americans",42,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2667 - LC2698 Latin Americans. Hispanic Americans|LC2680 - LC2688 Mexican Americans. Mexicans in the United States",8,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2667 - LC2698 Latin Americans. Hispanic Americans|LC2690 - LC2698 Puerto Ricans. Puerto Ricans in the United States",2,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC2699 - LC2913 Blacks. African Americans",153,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3001 - LC3501 Asians",16,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3503 - LC3520 Romanies. Gypsies",4,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3530 - LC3540 Lapps",1,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3551 - LC3593 Jews",2,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3701 - LC3740 Immigrants or ethnic and linguistic minorities. Bilingual schools and bilingual education",204,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3745 - LC3747 Children of immigrants (First generation)",20,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3950 - LC4806.5 Exceptional children and youth. Special education",583,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3950 - LC4806.5 Exceptional children and youth. Special education|LC3991 - LC4000 Gifted children and youth",71,
        "L - Education|LC8 - LC6691 Special aspects of education|LC1390 - LC5160.3 Education of special classes of persons|LC3950 - LC4806.5 Exceptional children and youth. Special education|LC4001 - LC4806.5 Children and youth with disabilities. Learning disabled children and youth",421,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education",198,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC251 - LC318 Moral education. Character building",80,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control",118,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education",67,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education|LC461 - LC510 Roman Catholic",33,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC361 - LC629 Christian education. Church education|LC531 - LC629 Protestant",13,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC701 - LC775 Jewish education",15,
        "L - Education|LC8 - LC6691 Special aspects of education|LC251 - LC951 Moral and religious education|LC321 - LC951 Religion and education. Education under church control|LC901 - LC915 Islamic education",25,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5161 - LC5163 Fundamental education",1,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education",350,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5451 - LC5493 Aged education",7,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5701 - LC5771 Vacation schools. Summer schools",6,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5800 - LC5808 Distance education",60,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC5900 - LC6101 Correspondence schools",2,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6201 - LC6401 University extension",11,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6501 - LC6560.4 Lyceums and lecture courses. Forums",11,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6571 - LC6581 Radio and television extension courses. Instruction by radio and television",3,
        "L - Education|LC8 - LC6691 Special aspects of education|LC5201 - LC6660.4 Education extension. Adult education. Continuing education|LC6601 - LC6660.4 Reading circles and correspondence clubs",49,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education",1680,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC129 - LC139 Compulsory education",6,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC142 - LC148.5 Attendance. Dropouts",31,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC149 - LC161 Literacy. Illiteracy",176,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC165 - LC182 Higher education and the state",67,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology",834,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology|LC212 - LC212.86 Discrimination in education",147,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology|LC212.9 - LC212.93 Sex differences in education",24,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC189 - LC214.53 Educational sociology|LC213 - LC214.53 Educational equalization. Right to education",172,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school",122,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school|LC225 - LC226.7 Home and school",30,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school|LC230 - LC235 Parent-teacher associations. Home and school associations",3,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC215 - LC238.4 Community and the school|LC237 - LC238.4 College-university and the community",31,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC241 - LC245 Foundations, endowments, funds",3,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC65 - LC67.68 Economic aspects of education",72,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC68 - LC70 Demographic aspects of education",4,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC71 - LC120.4 Education and the state",344,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC71 - LC120.4 Education and the state|LC107 - LC120.4 Public school question. Secularization. Religious instruction in the public schools",20,
        "L - Education|LC8 - LC6691 Special aspects of education|LC65 - LC245 Social aspects of education|LC71 - LC120.4 Education and the state|LC72 - LC72.5 Academic freedom",33,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education",127,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC25 - LC33 Self-education. Self-culture",14,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC37 - LC44.3 Home education",31,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC45 - LC45.8 Nonformal education",20,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC47 - LC58.7 Private school education",16,
        "L - Education|LC8 - LC6691 Special aspects of education|LC8 - LC59 Forms of education|LC47 - LC58.7 Private school education|LC58 - LC58.7 Preparatory schools. Preparatory school education",1,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education",591,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1001 - LC1024 Humanistic education. liberal education",53,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1031 - LC1034.5 Competency based education",18,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1036 - LC1036.8 Community education",1,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1037 - LC1037.8 Career education",20,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1041 - LC1048 Vocational education (General)",98,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1049 - LC1049.8 Cooperative education",6,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1051 - LC1072 Professional education",29,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1081 - LC1087.4 Industrial education (General)",39,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1090 - LC1091 Political education",69,
        "L - Education|LC8 - LC6691 Special aspects of education|LC980 - LC1099.5 Types of education|LC1099 - LC1099.5 Multicultural education (General)",131,
        "L - Education|LD13 - LD7501 Individual institutions",232,
        "L - Education|LD13 - LD7501 Individual institutions|LD13 - LD7501 United States",232,
        "L - Education|LD13 - LD7501 Individual institutions|LD13 - LD7501 United States|LD13 - LD7251 Universities. Colleges",222,
        "L - Education|LD13 - LD7501 Individual institutions|LD13 - LD7501 United States|LD13 - LD7251 Universities. Colleges|LD7020 - LD7251 Women's colleges",8,
        "L - Education|LE3 - LE78 Individual institutions",10,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)",10,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE15 - LE17 West Indies",1,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America",3,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE21 - LE23 Argentina",2,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE21 - LE78 South America|LE31 - LE33 Brazil",1,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE3 - LE5 Canada",4,
        "L - Education|LE3 - LE78 Individual institutions|LE3 - LE78 America (except United States)|LE7 - LE9 Mexico",2,
        "L - Education|LF14 - LF5627 Individual institutions",222,
        "L - Education|LF14 - LF5627 Individual institutions|LF1341 - LF1537 Austria",3,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain",161,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF14 - LF797 England",155,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF800 - LF957 Ireland",1,
        "L - Education|LF14 - LF5627 Individual institutions|LF14 - LF1257 Great Britain|LF960 - LF1137 Scotland",5,
        "L - Education|LF14 - LF5627 Individual institutions|LF1541 - LF1549 Czech Republic",1,
        "L - Education|LF14 - LF5627 Individual institutions|LF1711 - LF2397 France",6,
        "L - Education|LF14 - LF5627 Individual institutions|LF2402 - LF3197 Germany",8,
        "L - Education|LF14 - LF5627 Individual institutions|LF3211 - LF3247 Greece",2,
        "L - Education|LF14 - LF5627 Individual institutions|LF3248 - LF3897 Italy",10,
        "L - Education|LF14 - LF5627 Individual institutions|LF3911 - LF4067 Belgium",2,
        "L - Education|LF14 - LF5627 Individual institutions|LF4251 - LF4437 Russia (Federation)",15,
        "L - Education|LF14 - LF5627 Individual institutions|LF4440 - LF4441 Estonia",1,
        "L - Education|LF14 - LF5627 Individual institutions|LF4449.2 - LF4449.5 Ukraine",2,
        "L - Education|LF14 - LF5627 Individual institutions|LF4610 - LF4827 Spain",5,
        "L - Education|LF14 - LF5627 Individual institutions|LF4831 - LF4887 Portugal",2,
        "L - Education|LF14 - LF5627 Individual institutions|LF4901 - LF5047 Switzerland",2,
        "L - Education|LG21 - LG961 Individual institutions",24,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia",14,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG240 - LG277 Japan",1,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG341 - LG345 Israel. Palestine",1,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG351 - LG357 Lebanon",2,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG51 - LG53 China",4,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG55 - LG57 Taiwan",1,
        "L - Education|LG21 - LG961 Individual institutions|LG21 - LG395 Asia|LG60 - LG170.2 India. Pakistan. Bangladesh. Burma. Sri Lanka. Nepal",4,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa",6,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG405 - LG411 South Africa",1,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG421 - LG423 Uganda",1,
        "L - Education|LG21 - LG961 Individual institutions|LG401 - LG681 Africa|LG631 - LG632 Morocco",1,
        "L - Education|LG21 - LG961 Individual institutions|LG715 - LG720 Australia",3,
        "L - Education|LH1 - LH9 College and school magazines and papers",6,
        "L - Education|LJ3 - LJ165 Student fraternities and societies, United States",12,
        "L - Education|LT6 - LT501 Textbooks",8,
        "M - Music",13382,
        "M - Music|M1 - M5000 Music",4861,
        "M - Music|M1 - M5000 Music|M1 - M2.3 Collections",311,
        "M - Music|M1 - M5000 Music|M1 - M2.3 Collections|M2 - M2.3 Collections of musical sources",291,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music",3527,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music",2126,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1500 - M1527.8 Dramatic music",640,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1528 - M1529.5 Duets, trios, etc., for solo voices",23,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1530 - M1546.5 Choruses with orchestra or other ensemble",17,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1547 - M1600 Choruses, part-songs, etc., with accompaniment of keyboard or other solo instrument, or unaccompanied",361,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1611 - M1624.8 Songs",202,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1625 - M1626 Recitations with music",6,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1627 - M1853 National music",616,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1900 - M1978 Songs (part and solo) of special character",139,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1497 - M1998 Secular vocal music|M1990 - M1998 Secular music for children",85,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music",1339,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2000 - M2007 Oratorios",27,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2010 - M2017.6 Services",76,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2018 - M2019.5 Duets, trios, etc. for solo voices",12,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2020 - M2036 Choruses, cantatas, etc.",42,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2060 - M2101.5 Choruses, part-songs, etc., with accompaniment of keyboard or other solo instrument, or unaccompanied",507,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2102 - M2114.8 Songs",37,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2115 - M2146 Hymnals. Hymn collections",300,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual",34,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2147 - M2155.6 Roman Catholic Church",26,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2156 - M2160.87 Orthodox churches",1,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2161 - M2183 Protestant churches",5,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2147 - M2188 Liturgy and ritual|M2186 - M2187 Jewish",2,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2190 - M2196 Sacred vocal music for children",57,
        "M - Music|M1 - M5000 Music|M1495 - M5000 Vocal music|M1999 - M2199 Sacred vocal music|M2198 - M2199 Gospel, revival, temperance, etc. songs M5000 Unidentified compositions",198,
        "M - Music|M1 - M5000 Music|M3 - M3.3 Collected works of individual composers",83,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music",985,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1000 - M1075 Orchestra",48,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1100 - M1160 String orchestra",9,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1200 - M1269 Band",2,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1356 - M1356.2 Dance orchestra and instrumental ensembles",6,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M1375 - M1420 Instrumental music for children",12,
        "M - Music|M1 - M5000 Music|M5 - M1490 Instrumental music|M6 - M175.5 Solo instruments",484,
        "M - Music|ML1 - ML3930 Literature on music",6537,
        "M - Music|ML1 - ML3930 Literature on music|ML100 - ML109 Dictionaries. Encyclopedias",147,
        "M - Music|ML1 - ML3930 Literature on music|ML110 - ML111.5 Music librarianship",17,
        "M - Music|ML1 - ML3930 Literature on music|ML112 - ML112.5 Music printing and publishing",18,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography",454,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography|ML113 - ML118 International",33,
        "M - Music|ML1 - ML3930 Literature on music|ML112.8 - ML158.8 Bibliography|ML136 - ML158 Catalogs. Discography",225,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism",4354,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music",442,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music|ML1499 - ML1554 Choral music",8,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music|ML1600 - ML2881 Secular vocal music",290,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML1400 - ML3275 Vocal music|ML2900 - ML3275 Sacred vocal music",125,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods",87,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods|ML162 - ML169 Ancient",14,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods|ML169.8 - ML190 Medieval. Renaissance",39,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML162 - ML197 Special periods|ML193 - ML197 -1601",26,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country",205,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country|ML198 - ML239 America",61,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country|ML240 - ML325 Europe",83,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML198 - ML360 By region or country|ML330 - ML345 Asia",49,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3400 - ML3465 Dance music",4,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3469 - ML3541 Popular music",693,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML3544 - ML3775 National music",284,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML385 - ML429 Biography",2132,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML430 - ML455 Composition",22,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music",303,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML1100 - ML1165 Chamber music",9,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML1200 - ML1270 Orchestra",25,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML1299 - ML1354 Band",7,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML465 - ML471 By period",1,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country",10,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country|ML489 - ML522 Europe",5,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML475 - ML547 By region or country|ML525 - ML541 Asia",5,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments",218,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML1030 - ML1049 Percussion instruments",12,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML1049.8 - ML1091 Mechanical and other instruments",22,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML1091.8 - ML1093 Electronic instruments",23,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML549.8 - ML649 Organ",15,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML649.8 - ML747 Piano, clavichord, harpsichord, etc.",31,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML749.5 - ML927 Bowed string instruments",9,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML929 - ML990 Wind instruments",23,
        "M - Music|ML1 - ML3930 Literature on music|ML159 - ML3775 History and criticism|ML459 - ML1380 Instruments and instrumental music|ML549 - ML1093 Instruments|ML999 - ML1015 Plucked instruments",4,
        "M - Music|ML1 - ML3930 Literature on music|ML25 - ML28 Societies and organizations",2,
        "M - Music|ML1 - ML3930 Literature on music|ML35 - ML38 Festivals. Congresses",11,
        "M - Music|ML1 - ML3930 Literature on music|ML3800 - ML3923 Philosophy and physics of music",601,
        "M - Music|ML1 - ML3930 Literature on music|ML3800 - ML3923 Philosophy and physics of music|ML3845 - ML3877 Aesthetics",87,
        "M - Music|ML1 - ML3930 Literature on music|ML3800 - ML3923 Philosophy and physics of music|ML3880 - ML3915 Criticism",1,
        "M - Music|ML1 - ML3930 Literature on music|ML3928 - ML3930 Literature for children",10,
        "M - Music|ML1 - ML3930 Literature on music|ML40 - ML44 Programs",4,
        "M - Music|ML1 - ML3930 Literature on music|ML47 - ML54.8 Librettos. Scenarios",304,
        "M - Music|ML1 - ML3930 Literature on music|ML62 - ML90 Special aspects. Including writings of musicians",173,
        "M - Music|ML1 - ML3930 Literature on music|ML93 - ML96.5 Manuscripts, autographs, etc.",31,
        "M - Music|MT1 - MT960 Musical instruction and study",1260,
        "M - Music|MT1 - MT960 Musical instruction and study|MT1 - MT5 History and criticism",133,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques",338,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT180 - MT198 Organ",10,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT220 - MT255 Piano",64,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments",25,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT260 - MT279.7 Violin",12,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT300 - MT318 Violoncello",9,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT259 - MT338 String instruments|MT320 - MT334 Double bass",2,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments",51,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT340 - MT359 Flute",26,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT360 - MT379 Oboe",2,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT380 - MT392 Clarinet (A, Bb, C, Eb, etc.)",2,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT339 - MT533 Wind instruments|MT400 - MT415 Bassoon",1,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments",109,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT540 - MT557 Harp",1,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT560 - MT570 Banjo",13,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT580 - MT599 Guitar",76,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT600 - MT612 Mandolin",5,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT539 - MT654 Plucked instruments|MT640 - MT654 Lute, balalaika, etc.",5,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT655 - MT725 Percussion and other instruments",47,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT728 - MT728.3 Chamber music",1,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT733 - MT733.6 Band",4,
        "M - Music|MT1 - MT960 Musical instruction and study|MT170 - MT810 Instrumental techniques|MT740 - MT810 Instrumental techniques for children",13,
        "M - Music|MT1 - MT960 Musical instruction and study|MT20 - MT32 Special methods",1,
        "M - Music|MT1 - MT960 Musical instruction and study|MT40 - MT67 Composition. Elements and techniques of music",76,
        "M - Music|MT1 - MT960 Musical instruction and study|MT40 - MT67 Composition. Elements and techniques of music|MT58 - MT67 Forms",13,
        "M - Music|MT1 - MT960 Musical instruction and study|MT5.5 - MT7 Music theory",104,
        "M - Music|MT1 - MT960 Musical instruction and study|MT70 - MT74 Instrumentation and orchestration",10,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique",67,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique|MT825 - MT850 Systems and methods",9,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique|MT855 - MT883 Special techniques",19,
        "M - Music|MT1 - MT960 Musical instruction and study|MT820 - MT915 Singing and vocal technique|MT898 - MT915 Techniques for children",1,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works",132,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT110 - MT115 Oratorios, cantatas, etc.",2,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT125 - MT130 Orchestral music",11,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT140 - MT145 Chamber and solo instrumental music",5,
        "M - Music|MT1 - MT960 Musical instruction and study|MT90 - MT146 Analysis and appreciation of musical works|MT95 - MT100 Opera, ballet, etc.",31,
        "M - Music|MT1 - MT960 Musical instruction and study|MT918 - MT948 School music",16,
        "M - Music|MT1 - MT960 Musical instruction and study|MT955 - MT956 Musical theater",10,
        "N - Fine Arts",19025,
        "N - Fine Arts|N1 - N9211 Visual arts",7279,
        "N - Fine Arts|N1 - N9211 Visual arts|N1 - N58 General",72,
        "N - Fine Arts|N1 - N9211 Visual arts|N400 - N3990 Art museums, galleries, etc.",232,
        "N - Fine Arts|N1 - N9211 Visual arts|N4390 - N5098 Exhibitions",46,
        "N - Fine Arts|N1 - N9211 Visual arts|N5198 - N5299 Private collections and collectors",83,
        "N - Fine Arts|N1 - N9211 Visual arts|N5300 - N7418 History",3473,
        "N - Fine Arts|N1 - N9211 Visual arts|N61 - N72 Theory. Philosophy. Aesthetics of the visual arts",91,
        "N - Fine Arts|N1 - N9211 Visual arts|N7420 - N7525.8 General works",1929,
        "N - Fine Arts|N1 - N9211 Visual arts|N7560 - N8266 Special subjects of art",705,
        "N - Fine Arts|N1 - N9211 Visual arts|N81 - N390 Study and teaching. Research",142,
        "N - Fine Arts|N1 - N9211 Visual arts|N8350 - N8356 Art as a profession. Artists",28,
        "N - Fine Arts|N1 - N9211 Visual arts|N8510 - N8553 Art studios, materials, etc.",25,
        "N - Fine Arts|N1 - N9211 Visual arts|N8554 - N8585 Examination and conservation of works of art",15,
        "N - Fine Arts|N1 - N9211 Visual arts|N8600 - N8675 Economics of art",66,
        "N - Fine Arts|N1 - N9211 Visual arts|N8700 - N9165 Art and the state. Public art",72,
        "N - Fine Arts|NA1 - NA9428 Architecture",2601,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA1 - NA60 General",23,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA100 - NA130 Architecture and the state",23,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA190 - NA1555.5 History",948,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2000 - NA2320 Study and teaching. Research",21,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2335 - NA2360 Competitions",6,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2400 - NA2460 Museums. Exhibitions",7,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2500 - NA2599 General works",396,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2599.5 - NA2599.9 Architectural criticism",9,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2695 - NA2793 Architectural drawing and design",141,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA2835 - NA4050 Details and decoration",78,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings",662,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4100 - NA4145 Classed by material",8,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4150 - NA4160 Classed by form",1,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use",651,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA4170 - NA7020 Public buildings",340,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA4170 - NA7020 Public buildings|NA4590 - NA5621 Religious architecture",151,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA7100 - NA7884 Domestic architecture. Houses. Dwellings",280,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA8200 - NA8260 Farm architecture",15,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA4100 - NA8480 Special classes of buildings|NA4170 - NA8480 Classed by use|NA8300 - NA8480 Outbuildings, gates, fences, etc.",16,
        "N - Fine Arts|NA1 - NA9428 Architecture|NA9000 - NA9428 Aesthetics of cities. City planning and beautifying",196,
        "N - Fine Arts|NB1 - NB1952 Sculpture",561,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1 - NB50 General",7,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1135 - NB1150 General works",17,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1160 - NB1195 Designs and technique",11,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1203 - NB1270 Special materials",18,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1272 - NB1291 Mobiles, color, sculpture gardens, etc.",15,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms",29,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1293 - NB1310 Portrait sculpture",6,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1330 - NB1685 Sculptural monuments",4,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1293 - NB1895 Special forms|NB1800 - NB1880 Sepulchral monuments",14,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB1910 - NB1952 Special subjects",19,
        "N - Fine Arts|NB1 - NB1952 Sculpture|NB60 - NB1115 History. Including collective biography",441,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration",1815,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1 - NC45 General. Including collective biography",20,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1280 - NC1284 Printed ephemera. Imagerie populaire",1,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1300 - NC1766 Pictorial humor, caricature, etc.",402,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1800 - NC1850 Posters",30,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC1860 - NC1896 Greeting cards, postcards, invitations, book jackets, etc.",44,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC390 - NC670 Study and teaching",9,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC50 - NC266 History of drawing",276,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC703 - NC725 General works",24,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC730 - NC758 Technique",43,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC760 - NC825 Special subjects",35,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC845 - NC915 Graphic art materials",20,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC950 - NC996 Illustration",562,
        "N - Fine Arts|NC1 - NC1940 Drawing. Design. Illustration|NC997 - NC1003 Commercial art. Advertising art",137,
        "N - Fine Arts|ND25 - ND3416 Painting",3915,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1130 - ND1156 General works",35,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects",198,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1290 - ND1293 Human figure",4,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1300 - ND1337 Portraits",43,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1340 - ND1367 Landscape painting",29,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1370 - ND1375 Marine painting",3,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1380 - ND1383 Animals. Birds",2,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1385 - ND1388 Sports. Hunting, fishing, etc.",1,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1390 - ND1393 Still life",8,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1400 - ND1403 Flowers. Fruit. Trees",10,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1288 - ND1460 Special subjects|ND1410 - ND1460 Other subjects",44,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1470 - ND1625 Technique and materials",42,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1630 - ND1662 Examination and conservation of paintings",6,
        "N - Fine Arts|ND25 - ND3416 Painting|ND1700 - ND2495 Watercolor painting",100,
        "N - Fine Arts|ND25 - ND3416 Painting|ND25 - ND48 General",6,
        "N - Fine Arts|ND25 - ND3416 Painting|ND2550 - ND2733 Mural painting",37,
        "N - Fine Arts|ND25 - ND3416 Painting|ND2889 - ND3416 Illuminating of manuscripts and books",1578,
        "N - Fine Arts|ND25 - ND3416 Painting|ND49 - ND813 History",1599,
        "N - Fine Arts|NE1 - NE3002 Print media",662,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving",339,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE1 - NE90 General",21,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE400 - NE773 History of printmaking",220,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE830 - NE898 General works",51,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1 - NE978 Printmaking and engraving|NE951 - NE962 Special subjects",14,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving",221,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1000 - NE1027 General",1,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1030 - NE1196.3 History",111,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1220 - NE1233 General works",4,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1310 - NE1326.5 Japanese prints",55,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1000 - NE1352 Wood engraving|NE1330 - NE1336 Linoleum block prints",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving",7,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1400 - NE1879 Metal engraving|NE1850 - NE1879 Color prints",4,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint",42,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE1940 - NE1975 General",1,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE1980 - NE2055.5 History",24,
        "N - Fine Arts|NE1 - NE3002 Print media|NE1940 - NE2232.5 Etching and aquatint|NE2120 - NE2140 General works",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2236 - NE2240.6 Serigraphy",7,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2242 - NE2246 Monotype (Printmaking)",2,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2250 - NE2570 Lithography",40,
        "N - Fine Arts|NE1 - NE3002 Print media|NE2800 - NE2880 Printing of engravings",3,
        "N - Fine Arts|NE1 - NE3002 Print media|NE3000 - NE3002 Copying art. Copying machine art",1,
        "N - Fine Arts|NK1 - NK9990 Decorative arts",1405,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1 - NK570 General",18,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1135 - NK1149.5 Arts and crafts movement",10,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design",228,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1160 - NK1174 General",14,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1175 - NK1498 History",97,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1505 - NK1535 General works",86,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1160 - NK1590 Decoration and ornament. Design|NK1548 - NK1590 Special subjects for design",23,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1648 - NK1678 Religious art",8,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1700 - NK2195 Interior decoration. House decoration",87,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK1700 - NK2195 Interior decoration. House decoration|NK1700 - NK2138 General. History, etc.  Including special rooms",84,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK2200 - NK2750 Furniture",87,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK2775 - NK2898 Rugs and carpets",18,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK2975 - NK3049 Tapestries",3,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3175 - NK3296.3 Upholstery. Drapery",3,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3375 - NK3496.3 Wallpapers",6,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries",762,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK3700 - NK4695 Ceramics",204,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK4700 - NK4890 Costume",6,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK5100 - NK5440 Glass",73,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK5500 - NK6060 Glyptic arts",18,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK6400 - NK8459 Metalwork",123,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK8800 - NK9505.5 Textiles",167,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK3600 - NK9990 Other arts and art industries|NK9600 - NK9955 Woodwork",22,
        "N - Fine Arts|NK1 - NK9990 Decorative arts|NK600 - NK806 History",36,
        "N - Fine Arts|NX1 - NX820 Arts in general",885,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX1 - NX260 General",279,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX280 - NX410 Study and teaching. Research",51,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX420 - NX430 Exhibitions",3,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX440 - NX632 History of the arts",355,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX650 - NX694 Special subjects, characters, persons, religious arts, etc.",119,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX700 - NX750 Patronage of the arts",37,
        "N - Fine Arts|NX1 - NX820 Arts in general|NX760 - NX770 Administration of the arts",9,
        "P - Language and literature",129094,
        "P - Language and literature|P1 - P1091 Philology. Linguistics",4359,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P1 - P85 General",749,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar",2064,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P118 - P118.75 Language acquisition",207,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P121 - P149 Science of language (Linguistics)",258,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P201 - P299 Comparative grammar",309,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P301 - P301.5 Style. Composition. Rhetoric",34,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P302 - P302.87 Discourse analysis",121,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P306 - P310 Translating and interpreting",215,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P321 - P324.5 Etymology",11,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P325 - P325.5 Semantics",60,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P326 - P326.5 Lexicology",7,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P327 - P327.5 Lexicography",14,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P101 - P410 Language. Linguistic theory. Comparative grammar|P375 - P381 Linguistic geography",10,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P501 - P769 Indo-European (Indo-Germanic) philology",14,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P87 - P96 Communication. Mass media",789,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P87 - P96 Communication. Mass media|P95 - P95.6 Oral communication. Speech",79,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P901 - P1091 Extinct ancient or medieval languages",20,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P98 - P98.5 Computational linguistics. Natural language processing",128,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P99 - P99.4 Semiotics. Signs and symbols",45,
        "P - Language and literature|P1 - P1091 Philology. Linguistics|P99.5 - P99.6 Nonverbal communication",11,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature",3114,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA1 - PA199 Classical philology",79,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA1000 - PA1179 Medieval and modern Greek language",25,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA2001 - PA2915 Latin philology and language",141,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA201 - PA899 Greek philology and language",64,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3000 - PA3049 Classical literature",193,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature",1153,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3051 - PA3285 Literary history",134,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3300 - PA3516 Collections",43,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3520 - PA3564 Criticism, interpretation, etc.",6,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3601 - PA3681 Translations",132,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA3050 - PA4505 Greek literature|PA3818 - PA4505 Individual authors",854,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA5000 - PA5660 Byzantine and modern Greek literature",127,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA5000 - PA5660 Byzantine and modern Greek literature|PA5301 - PA5637 Individual authors",97,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature",1105,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6001 - PA6095.5 Literary history",113,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6101 - PA6140 Collections",16,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6141 - PA6144 Criticism, interpretation, etc.",6,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6155 - PA6191 Translations",77,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA6001 - PA6971 Roman literature|PA6202 - PA6971 Individual authors",900,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA8001 - PA8595 Medieval and modern Latin literature",238,
        "P - Language and literature|PA1 - PA8595 Greek language and literature. Latin language and literature|PA8001 - PA8595 Medieval and modern Latin literature|PA8200 - PA8595 Individual authors",172,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages",264,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1 - PB431 Modern languages",60,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature",204,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1101 - PB1200 Goidelic. Gaelic",1,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1201 - PB1449 Irish",122,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB1501 - PB1709 Gaelic (Scottish Gaelic, Erse)",19,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group",59,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group|PB2101 - PB2499 Welsh. Cymric",54,
        "P - Language and literature|PB1 - PB3029 Modern languages. Celtic languages|PB1001 - PB3029 Celtic languages and literature|PB2001 - PB3029 Brittanic group|PB2801 - PB2932 Breton. Armorican",4,
        "P - Language and literature|PC1 - PC5498 Romanic languages",757,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC1 - PC400 General",52,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC1001 - PC1977 Italian",62,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French",177,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms",43,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC2813 - PC2898 Old French",5,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC3201 - PC3366 Provencal (Old)",12,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC3371 - PC3420.5 Modern patois of South France",9,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC2700 - PC3708 Dialects. Provincialisms|PC3420.8 - PC3495 Langue d'oc dialects",1,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC2001 - PC3761 French|PC3721 - PC3761 Slang. Argot",2,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC3801 - PC3976 Catalan",58,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC4001 - PC4977 Spanish",272,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC5001 - PC5498 Portuguese",61,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC601 - PC872 Romanian",67,
        "P - Language and literature|PC1 - PC5498 Romanic languages|PC901 - PC986 Raeto-Romance. Including Romansh",7,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages",106,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1 - PD780 General",52,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1001 - PD1350 Old Germanic dialects",3,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1001 - PD1350 Old Germanic dialects|PD1101 - PD1211 Gothic",3,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian",49,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD2201 - PD2393 Old Norse. Old Icelandic and Old Norwegian",4,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD2401 - PD2446 Modern Icelandic",4,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD2501 - PD2999 Norwegian",10,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD3001 - PD3929 Danish",3,
        "P - Language and literature|PD1 - PD7159 Germanic languages. Scandinavian languages|PD1501 - PD7159 North Germanic. Scandinavian|PD5001 - PD5929 Swedish",15,
        "P - Language and literature|PE1 - PE3729 English language",1895,
        "P - Language and literature|PE1 - PE3729 English language|PE1001 - PE1693 Modern English",1542,
        "P - Language and literature|PE1 - PE3729 English language|PE101 - PE458 Anglo-Saxon. Old English",35,
        "P - Language and literature|PE1 - PE3729 English language|PE1700 - PE3602 Dialects. Provincialisms, etc.",187,
        "P - Language and literature|PE1 - PE3729 English language|PE3701 - PE3729 Slang. Argot, etc.",45,
        "P - Language and literature|PE1 - PE3729 English language|PE501 - PE693 Middle English",12,
        "P - Language and literature|PE1 - PE3729 English language|PE814 - PE896 Early Modern English",1,
        "P - Language and literature|PF1 - PF5999 West Germanic languages",154,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF1 - PF979 Dutch",29,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF1401 - PF1541 Friesian",4,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German",121,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF3801 - PF3991 Old High German",1,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF4043 - PF4350 Middle High German",3,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF5000 - PF5951 Dialects. Provincialism, etc.",13,
        "P - Language and literature|PF1 - PF5999 West Germanic languages|PF3001 - PF5999 German|PF5971 - PF5999 Slang. Argot, etc.",1,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language",5059,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic",5000,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1 - PG499 Slavic philology and languages (General)",70,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1151 - PG1199 Macedonian",17,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1201 - PG1749 Serbo-Croatian",167,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG1801 - PG1962 Slovenian",58,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2001 - PG2826 Russian language",254,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2830 - PG2847 Belarusian",8,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature",3687,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism",391,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG2900 - PG2998 General",146,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3001 - PG3026 Special periods",109,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3041 - PG3065 Poetry",30,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3071 - PG3089 Drama",5,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG2900 - PG3190 History and criticism|PG3091 - PG3099 Prose",42,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections",179,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3199 - PG3205 General",32,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3211 - PG3219 Translations",12,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3223 - PG3229.2 Special periods",30,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3230 - PG3238 Poetry",70,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3240 - PG3255 Drama",11,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3199 - PG3299 Collections|PG3260 - PG3299 Prose",27,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works",3026,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3300 - PG3308 Early to 1700",12,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3310 - PG3319 18th century",16,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3320 - PG3447 1800-1870",561,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3450 - PG3470 1870-1917",398,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3475 - PG3476 1917-1960",3,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3477 - PG3490 1961-2000",414,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3300 - PG3493.96 Individual authors and works|PG3491.2 - PG3493.96 -2001",74,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3500 - PG3505 Provincial, local, etc.",3,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG2900 - PG3698 Russian literature|PG3515 - PG3550 Outside the Russian Federation",112,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG3801 - PG3987 Ukrainian",80,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG4001 - PG5146 Czech",231,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG500 - PG585 Slavic literature (General)",23,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG5201 - PG5546 Slovak",39,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG5631 - PG5689 Sorbian (Wendic)",2,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG6001 - PG7446 Polish",295,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG601 - PG716 Church Slavic",31,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG7900 - PG7925 Lechitic dialects",1,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG1 - PG7925 Slavic|PG801 - PG1146 Bulgarian",42,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic",42,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic|PG8501 - PG8772 Lithuanian",30,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG8001 - PG9146 Baltic|PG8801 - PG9146 Latvian",10,
        "P - Language and literature|PG1 - PG9665 Slavic languages. Baltic languages. Albanian language|PG9501 - PG9665 Albanian",17,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language",164,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH1 - PH87 General",4,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH101 - PH405 Finnish",37,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH1201 - PH1409 Ugric languages",1,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH2001 - PH3445 Hungarian",88,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH5001 - PH5490 Basque",15,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects",18,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH1101 - PH1109 Udmurt",2,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH601 - PH671 Estonian",11,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH701 - PH735 Sami",3,
        "P - Language and literature|PH1 - PH5490 Uralic languages. Basque language|PH501 - PH1109 Other Finnic languages and dialects|PH751 - PH785 Mordvin",1,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature",1211,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1 - PJ489 General",51,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1 - PJ489 General|PJ1 - PJ195 Languages",23,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1 - PJ489 General|PJ306 - PJ489 Literature",28,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology",99,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology|PJ1091 - PJ1109 Egyptian writing and its decipherment",7,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology|PJ1111 - PJ1446 Language",9,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ1001 - PJ1989 Egyptology|PJ1481 - PJ1989 Literature. Inscriptions",77,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2001 - PJ2199 Coptic",3,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2340 - PJ2399 Libyco-Berber languages. Berber languages",2,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2340 - PJ2399 Libyco-Berber languages. Berber languages|PJ2369 - PJ2399 Berber languages",2,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ2401 - PJ2594 Cushitic languages",3,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ3001 - PJ3097 Semitic philology and literature",9,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4001 - PJ4091 Sumerian",4,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4101 - PJ4197 West and North Semitic languages",1,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew",451,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ4543 - PJ4937 Language (Biblical and modern)",61,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5001 - PJ5060 Literature",238,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5001 - PJ5060 Literature|PJ5050 - PJ5055.51 Individual authors and works",155,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5061 - PJ5192 Other languages used by Jews",144,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ4501 - PJ5192 Hebrew|PJ5061 - PJ5192 Other languages used by Jews|PJ5111 - PJ5192 Yiddish",140,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic",10,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic",2,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5211 - PJ5289 West Aramaic|PJ5281 - PJ5289 Neo-Aramaic",1,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5301 - PJ5329.5 East Aramaic",2,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ5201 - PJ5329.5 Aramaic|PJ5301 - PJ5329.5 East Aramaic|PJ5321 - PJ5329.5 Mandaean",2,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ601 - PJ989 Special groups",5,
        "P - Language and literature|PJ1 - PJ9500 Oriental languages and literature|PJ601 - PJ989 Special groups|PJ701 - PJ989 Islamic",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature",1354,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK1 - PK85 General",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages",715,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1001 - PK1095 Pali",1,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK101 - PK185 General",8,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1201 - PK1409.5 Prakrit",2,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1421 - PK1429.5 Apabhrams'a",1,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1471 - PK1490 Middle Indo-Aryan dialects",1,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages",676,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects",666,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1550 - PK1569 Assamese",7,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1651 - PK1799 Bengali",214,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1801 - PK1831.95 Bihari",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1841 - PK1870.95 Gujarati",13,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures",281,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK1931 - PK1970 Hindi language",37,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK1971 - PK1979.5 Urdu language",22,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK1981 - PK2000 Hindustani language",2,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK2030 - PK2142 Hindi, Hindustani literatures",124,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK1931 - PK2212 Hindi, Urdu, Hindustani languages and literatures|PK2151 - PK2212 Urdu literature",94,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2351 - PK2418 Marathi",6,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2561 - PK2579.5 Oriya",22,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2591 - PK2610 Pahari",8,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2631 - PK2659 Panjabi",11,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2701 - PK2708.9 Rajasthani",2,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2781 - PK2790 Sindhi",3,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2801 - PK2891 Sinhalese (Singhalese)",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK1501 - PK2899 Modern Indo-Aryan languages|PK1550 - PK2899 Particular languages and dialects|PK2896 - PK2899 Romani",2,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK201 - PK379 Vedic",2,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK101 - PK2899 Indo-Aryan languages|PK401 - PK976 Sanskrit",24,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature",241,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK2901 - PK2979 General",98,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit",74,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit|PK3791 - PK3799 Individual authors and works",39,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit|PK3801 - PK4251 Special subjects",1,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK3591 - PK4485 Sanskrit|PK4471 - PK4485 Translations",8,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK4501 - PK4681 Pali literature",6,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK4990 - PK5046 Prakrit literature",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK2901 - PK5471 Indo-Aryan literature|PK5401 - PK5471 Modern Indo-Aryan literature",53,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature",338,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6001 - PK6099 General",6,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6101 - PK6119 Avestan",5,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6121 - PK6129 Old Persian",1,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6135 - PK6199.9 Middle Iranian languages",8,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6135 - PK6199.9 Middle Iranian languages|PK6141 - PK6199.5 Pahlavi",7,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian",302,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian|PK6201 - PK6399 Language",25,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian|PK6400 - PK6599.7 Literature",277,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6201 - PK6599.7 New Persian|PK6400 - PK6599.7 Literature|PK6450.9 - PK6562.35 Individual authors or works",228,
        "P - Language and literature|PK1 - PK9601 Indo-Iranian languages and literature|PK6001 - PK6996 Iranian philology and literature|PK6701 - PK6821 Afghan (Pashto, Pushto, Pushtu, etc.)",7,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania",3297,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages",126,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages|PL21 - PL396 Turkic languages",120,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages|PL400 - PL431 Mongolian languages",2,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1 - PL481 Ural-Altaic languages|PL450 - PL481 Tungus Manchu languages",1,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature",1472,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL1001 - PL1960 Chinese language",357,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature",1113,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL2250 - PL2443 History and criticism",248,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL2450 - PL2659 Collections",282,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL2661 - PL2979 Individual authors and works",514,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL1001 - PL3208 Chinese language and literature|PL2250 - PL3208 Chinese literature|PL3030 - PL3208 Provincial, local, colonial, etc.",36,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3301 - PL3311 Non-Chinese languages of China",1,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3501 - PL3509 Non-Aryan languages of India and Southeastern Asia in general",5,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages",46,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages",43,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3561 - PL3801 Tibeto-Himalayan languages",24,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3561 - PL3801 Tibeto-Himalayan languages|PL3601 - PL3775 Tibetan",22,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3561 - PL3801 Tibeto-Himalayan languages|PL3781 - PL3801 Himalayan languages",1,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL3521 - PL4001 Sino-Tibetan languages|PL3551 - PL4001 Tibeto-Burman languages|PL3851 - PL4001 Assam and Burma",10,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages",31,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4301 - PL4470 Mon-Khmer (Mon-Anam) languages",29,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4301 - PL4470 Mon-Khmer (Mon-Anam) languages|PL4371 - PL4379 Vietnamese. Annamese",22,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4281 - PL4587 Austroasiatic languages|PL4301 - PL4470 Mon-Khmer (Mon-Anam) languages|PL4423 - PL4470 Bru, Chrau, Khasi, Muong, etc.",3,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL4601 - PL4890 Dravidian languages",228,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL490 - PL495 Far Eastern languages and literature",11,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania",236,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages",223,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL5051 - PL5497 Malayan (Indonesian) languages",101,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL5501 - PL6135 Philippine languages",58,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6191 - PL6341 Micronesian and Melanesian languages",22,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6401 - PL6551 Polynesian languages",15,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL6601 - PL6621 Papuan languages",2,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL5001 - PL7511 Languages of Oceania|PL5001 - PL7101 Austronesian, Papuan, and Australian languages|PL7001 - PL7101 Australian languages",7,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature",603,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL501 - PL699 Japanese language",125,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature",478,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL700 - PL751.5 History and criticism",84,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL752 - PL783 Collections",65,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL784 - PL866 Individual authors and works",290,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL501 - PL889 Japanese language and literature|PL700 - PL889 Japanese literature|PL885 - PL889 Local literature",5,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature",270,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8000 - PL8009 Languages",18,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8009.5 - PL8014 Literature",71,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8015 - PL8021 Languages. By region or country",2,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8024 - PL8027 Special families of languages",6,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL8000 - PL8844 African languages and literature|PL8035 - PL8844 Special languages (alphabetically)",146,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature",201,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL901 - PL949 Korean language",83,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature",117,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL950.2 - PL969.5 History and criticism",17,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL969.8 - PL985 Collections",16,
        "P - Language and literature|PL1 - PL8844 Languages and literatures of Eastern Asia, Africa, Oceania|PL901 - PL998 Korean language and literature|PL950 - PL998 Korean literature|PL986 - PL993 Individual authors and works",70,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages",235,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM1 - PM94 Hyperborean languages of Arctic Asia and America",6,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)",63,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)|PM231 - PM355 American languages of British North America",1,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)|PM401 - PM501 American languages of the United States (and Mexico)",2,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM101 - PM2711 American languages (Aboriginal)|PM549 - PM2711 Special languages of the United States and Canada (alphabetically)",40,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM3001 - PM4566 Languages of Mexico and Central America",86,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM5001 - PM7356 Languages of South America and the West Indies",25,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM7801 - PM7895 Mixed languages",35,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM7801 - PM7895 Mixed languages|PM7831 - PM7875 Creole languages",22,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM8001 - PM8995 Artificial languages",15,
        "P - Language and literature|PM1 - PM9021 Hyperborean, Indian, and artificial languages|PM8001 - PM8995 Artificial languages|PM8201 - PM8298 Esperanto",6,
        "P - Language and literature|PN1 - PN6790 Literature (General)",21356,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1 - PN9 Periodicals",93,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN101 - PN245 Authorship",795,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN101 - PN245 Authorship|PN172 - PN239 Technique. Literary composition, etc.",124,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN101 - PN245 Authorship|PN241 - PN241.5 Translating as a literary pursuit",19,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry",422,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1031 - PN1049 Theory, philosophy, relations, etc.",115,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1065 - PN1085 Relations to, and treatment of, special subjects",36,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1110 - PN1279 History and criticism",152,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1301 - PN1333 Epic poetry",9,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1341 - PN1347 Folk poetry",1,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1010 - PN1525 Poetry|PN1351 - PN1389 Lyric poetry",11,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1560 - PN1590 The performing arts. Show business",77,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1560 - PN1590 The performing arts. Show business|PN1585 - PN1589 Centers for the performing arts",3,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama",8687,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1635 - PN1650 Relation to, and treatment of, special subjects",9,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1660 - PN1693 Technique of dramatic composition",35,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1720 - PN1861 History",42,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1865 - PN1988 Special types",148,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1990 - PN1992.92 Broadcasting",1116,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1990 - PN1992.92 Broadcasting|PN1991 - PN1991.9 Radio broadcasts",133,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1990 - PN1992.92 Broadcasting|PN1992 - PN1992.92 Television broadcasts",961,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1992.93 - PN1992.95 Nonbroadcast video recordings",16,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1993 - PN1999 Motion pictures",4774,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN1993 - PN1999 Motion pictures|PN1997 - PN1997.85 Plays, scenarios, etc.",1484,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater",2372,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2061 - PN2071 Art of acting",134,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2085 - PN2091 The stage and accessories",18,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period",26,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period|PN2152 - PN2160 Medieval",4,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2131 - PN2193 By period|PN2181 - PN2193 Modern",20,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN2219.3 - PN3030 Special regions or countries",1431,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN3151 - PN3171 Amateur theater",32,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN3175 - PN3191 College and school theatricals",3,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN1600 - PN3307 Drama|PN2000 - PN3307 Dramatic representation. The theater|PN3203 - PN3299 Tableaux, pageants, 'Happenings,' etc.",12,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN20 - PN30 Societies",3,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction",819,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3329 - PN3352 Philosophy, theory, etc.",66,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3355 - PN3383 Technique. Authorship",333,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3427 - PN3448 Special kinds of fiction. Fiction genres",134,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN3311 - PN3503 Prose. Prose fiction|PN3451 - PN3503 History",49,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.",205,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4071 - PN4095 Study and teaching",1,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4177 - PN4191 Debating",25,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4001 - PN4355 Oratory. Elocution, etc.|PN4199 - PN4321 Recitations (in English)",34,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history",1959,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN1008.2 - PN1009.5 Juvenile literature",675,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN451 - PN497 Biography",113,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN500 - PN519 Collections",217,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN597 - PN605 Special relations, movements, and currents of literature",18,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period",588,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN611 - PN649 Ancient",4,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)",162,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)|PN683 - PN687 Legends",29,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN661 - PN694 Medieval (to 1500)|PN688 - PN691 Poetry",7,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN695 - PN779 Modern",421,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN610 - PN779 By period|PN695 - PN779 Modern|PN715 - PN749 Renaissance (1500-1700)",24,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN801 - PN820 Romance literature",10,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN821 - PN840 Germanic literature",2,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN851 - PN884 Comparative literature",26,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN905 - PN1008 Folk literature",14,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN441 - PN1009.5 Literary history|PN905 - PN1008 Folk literature|PN980 - PN995 Fables",10,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN45 - PN57 Theory. Philosophy. Esthetics",1181,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.",1581,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4735 - PN4748 Relation to the state. Government and the press. Liberty of the press",23,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4775 - PN4784 Technique. Practical journalism",103,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4825 - PN4830 Amateur journalism",1,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4832 - PN4836 Magazines and other periodicals",18,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN4699 - PN5650 Journalism. The periodical press, etc.|PN4840 - PN5648 By region or country",971,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN59 - PN72 Study and teaching",45,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature",4806,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6066 - PN6069 Special classes of authors",12,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations",178,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations|PN6081 - PN6084 English",86,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations|PN6086 - PN6089 French",2,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6080 - PN6095 Quotations|PN6090 - PN6110 German",2,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6099 - PN6110 Poetry",162,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6110.5 - PN6120 Drama",75,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6120.15 - PN6120.95 Fiction",31,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6121 - PN6129 Orations",6,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6130 - PN6140 Letters",9,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6141 - PN6145 Essays",17,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6146.5 - PN6231 Wit and humor",268,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6146.5 - PN6231 Wit and humor|PN6157 - PN6222 By region or country",206,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6233 - PN6238 Anacreontic literature",4,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6244 - PN6246 Literary extracts. Commonplace books",24,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6259 - PN6268 Anecdotes. Table talk",8,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6269 - PN6278 Aphorisms. Apothegms",28,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6279 - PN6288 Epigrams",9,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6288.5 - PN6298 Epitaphs",2,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6299 - PN6308 Maxims",5,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6309 - PN6318 Mottoes",2,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6319 - PN6328 Sayings, bon mots, etc.",1,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6329 - PN6338 Thoughts",10,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6340 - PN6348 Toasts",1,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6348.5 - PN6358 Emblems, devices",39,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6366 - PN6377 Riddles, acrostics, charades, conundrums, etc.",36,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6400 - PN6525 Proverbs",95,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN6010 - PN6790 Collections of general literature|PN6700 - PN6790 Comic books, strips, etc.",2693,
        "P - Language and literature|PN1 - PN6790 Literature (General)|PN80 - PN99 Criticism",329,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature",7813,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature",3584,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism",424,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ1 - PQ150 General",92,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ151 - PQ221 Medieval. Old French",36,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ226 - PQ310 Modern",135,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ400 - PQ491 Poetry",28,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ500 - PQ591 Drama",23,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1 - PQ771 History and criticism|PQ601 - PQ771 Prose and prose fiction",100,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1100 - PQ1297 Collections",103,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1300 - PQ1595 Old French literature (To ca. 1500/1550)",143,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1300 - PQ1595 Old French literature (To ca. 1500/1550)|PQ1300 - PQ1391 Collections",8,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature",2465,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ1600 - PQ1709 16th century",104,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ1710 - PQ1935 17th century",113,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ1947 - PQ2147 18th century",207,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2149 - PQ2551 19th century",457,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2600 - PQ2651 1900-1960",1078,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2660 - PQ2686 1961-2000",428,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ1600 - PQ2726 Modern literature|PQ2700 - PQ2726 -2001",76,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ1 - PQ3999 French literature|PQ3800 - PQ3999 Provincial, local, colonial, etc.",450,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature",1020,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism",121,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4001 - PQ4063 General",41,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4077 - PQ4088 Modern",15,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4091 - PQ4131 Poetry",15,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4133 - PQ4160 Drama",9,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4001 - PQ4199.5 History and criticism|PQ4161 - PQ4185 Prose",21,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4201 - PQ4263 Collections",39,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4265 - PQ4556 Individual authors and works to 1400",240,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4561 - PQ4664 Individual authors, 1400-1700",72,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4675 - PQ4734 Individual authors, 1701-1900",39,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4800 - PQ4851 Individual authors, 1900-1960",200,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4860 - PQ4886 Individual authors, 1961-2000",235,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ4900 - PQ4926 Individual authors, 2001-",52,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ4001 - PQ5999 Italian literature|PQ5901 - PQ5999 Regional, provincial, local, etc.",6,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature",2875,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism",193,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6001 - PQ6056 General",50,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6058 - PQ6060 Early to 1500",7,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6061 - PQ6073 Modern",44,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6075 - PQ6098 Poetry",19,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6098.7 - PQ6129 Drama",22,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6131 - PQ6153 Prose",36,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6001 - PQ6168 History and criticism|PQ6155 - PQ6167 Folk literature",1,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6170 - PQ6269 Collections",79,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6271 - PQ6498 Individual authors and works to 1700",250,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6500 - PQ6576 Individual authors, 1700-ca. 1868",45,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6600 - PQ6647 Individual authors, 1868-1960",194,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6650 - PQ6676 Individual authors, 1961-2000",144,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ6700 - PQ6726 Individual authors, 2001-",66,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ7000 - PQ8929 Provincial, local, colonial, etc.",1905,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ6001 - PQ8929 Spanish literature|PQ7000 - PQ8929 Provincial, local, colonial, etc.|PQ7081 - PQ8560 Spanish America",1874,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature",331,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism",16,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9000 - PQ9034 General",8,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9035 - PQ9055 Special periods",3,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9061 - PQ9081 Poetry",3,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9000 - PQ9129 History and criticism|PQ9097 - PQ9119 Prose",2,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9131 - PQ9188 Collections",7,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9191 - PQ9255 Individual authors and works, 1500-1700",11,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9262 - PQ9288 Individual authors, 1961-2000",19,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9300 - PQ9326 Individual authors, 2001-",5,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9400 - PQ9999 Provincial, local, colonial, etc.",228,
        "P - Language and literature|PQ1 - PQ9698.43 French literature. Italian literature. Spanish literature. Portuguese literature|PQ9000 - PQ9999 Portuguese literature|PQ9400 - PQ9999 Provincial, local, colonial, etc.|PQ9500 - PQ9698.43 Brazil",212,
        "P - Language and literature|PR1 - PR9680 English literature",28573,
        "P - Language and literature|PR1 - PR9680 English literature|PR1 - PR56 Literary history and criticism",99,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature",1658,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1119 - PR1151 By period",144,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1170 - PR1228 Poetry",666,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1241 - PR1273 Drama",513,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1281 - PR1309 Prose (General)",35,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1321 - PR1329 Oratory",1,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1341 - PR1349 Letters",9,
        "P - Language and literature|PR1 - PR9680 English literature|PR1098 - PR1369 Collections of English literature|PR1361 - PR1369 Essays",31,
        "P - Language and literature|PR1 - PR9680 English literature|PR111 - PR116 Women authors",54,
        "P - Language and literature|PR1 - PR9680 English literature|PR125 - PR138.5 Relations to other literatures and countries",37,
        "P - Language and literature|PR1 - PR9680 English literature|PR1490 - PR1799 Anglo-Saxon literature",127,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period",934,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR171 - PR236 Anglo-Saxon (Beginnings through 1066)",40,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR251 - PR369 Medieval. Middle English (1066-1500)",134,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern",754,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR421 - PR429 Elizabethan era (1550-1640)",131,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR431 - PR439 17th century",46,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR441 - PR449 18th century",130,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR451 - PR469 19th century",242,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR471 - PR479 20th century",119,
        "P - Language and literature|PR1 - PR9680 English literature|PR161 - PR488 By period|PR401 - PR488 Modern|PR481 - PR488 21st century",5,
        "P - Language and literature|PR1 - PR9680 English literature|PR1803 - PR2165 Anglo-Norman period. Early English. Middle English",324,
        "P - Language and literature|PR1 - PR9680 English literature|PR2199 - PR3195 English renaissance (1500-1640)",1956,
        "P - Language and literature|PR1 - PR9680 English literature|PR3291 - PR3785 17th and 18th centuries (1640-1770)",1270,
        "P - Language and literature|PR1 - PR9680 English literature|PR3991 - PR5990 19th century, 1770/1800-1890/1900",4087,
        "P - Language and literature|PR1 - PR9680 English literature|PR500 - PR614 Poetry",344,
        "P - Language and literature|PR1 - PR9680 English literature|PR500 - PR614 Poetry|PR521 - PR614 By period",244,
        "P - Language and literature|PR1 - PR9680 English literature|PR57 - PR78 Criticism",23,
        "P - Language and literature|PR1 - PR9680 English literature|PR6000 - PR6049 1900-1960",3697,
        "P - Language and literature|PR1 - PR9680 English literature|PR6050 - PR6076 1961-2000",4837,
        "P - Language and literature|PR1 - PR9680 English literature|PR6100 - PR6126 -2001",2039,
        "P - Language and literature|PR1 - PR9680 English literature|PR621 - PR744 Drama",185,
        "P - Language and literature|PR1 - PR9680 English literature|PR621 - PR744 Drama|PR641 - PR744 By period",165,
        "P - Language and literature|PR1 - PR9680 English literature|PR750 - PR890 Prose",627,
        "P - Language and literature|PR1 - PR9680 English literature|PR750 - PR890 Prose|PR767 - PR818 By period",43,
        "P - Language and literature|PR1 - PR9680 English literature|PR8309 - PR9680 English literature: Provincial, local, etc.",6218,
        "P - Language and literature|PR1 - PR9680 English literature|PR901 - PR907.2 Oratory",1,
        "P - Language and literature|PR1 - PR9680 English literature|PR911 - PR918 Letters",5,
        "P - Language and literature|PR1 - PR9680 English literature|PR921 - PR928 Essays",8,
        "P - Language and literature|PR1 - PR9680 English literature|PR931 - PR938 Wit and humor",16,
        "P - Language and literature|PR1 - PR9680 English literature|PR951 - PR981 Folk literature",27,
        "P - Language and literature|PS1 - PS3626 American literature. Canadian literature",36169,
        "P - Language and literature|PS1 - PS3626 American literature. Canadian literature|PS1 - PS3626 American literature",36169,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature",2611,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature",1823,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1 - PT80 Literary history and criticism",25,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections",78,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1100 - PT1141 General",17,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1151 - PT1241 Poetry",29,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1251 - PT1299 Drama",12,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1301 - PT1360 Prose",9,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1100 - PT1479 Collections|PT1375 - PT1479 Middle High German",10,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works",1346,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT1501 - PT1695 Middle High German, ca. 1050-1450/1500",51,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT1701 - PT1797 1500-ca. 1700",31,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT1799 - PT2592 1700-ca. 1860/70",298,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT2600 - PT2653 1860/70-1960",651,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT1501 - PT2688 Individual authors or works|PT2660 - PT2688 1961-2000",290,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT3701 - PT3971 Provincial, local, colonial, etc.",43,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT3701 - PT3971 Provincial, local, colonial, etc.|PT3701 - PT3746 East Germany",13,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature",261,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT175 - PT230 Medieval",17,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT236 - PT405 Modern",85,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT500 - PT597 Poetry",8,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT605 - PT709 Drama",8,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT83 - PT873 History of German literature|PT711 - PT871 Prose",47,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT881 - PT951 Folk literature",10,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT1 - PT4897 German literature|PT881 - PT951 Folk literature|PT923 - PT937 Faust legend",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature",114,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism",23,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5001 - PT5112 General",5,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5121 - PT5185 Special periods",12,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5201 - PT5243 Poetry",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5250 - PT5295 Drama",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5001 - PT5348 Literary history and criticism|PT5300 - PT5348 Prose",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5400 - PT5547 Collections",11,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT5001 - PT5980 Dutch literature|PT5901 - PT5980 Provincial, local, foreign",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830",22,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830|PT6300 - PT6397 Collections",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6000 - PT6466.36 Flemish literature since 1830|PT6400 - PT6466.36 Individual authors or works",21,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature",18,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature|PT6500 - PT6530 Literary history and criticism",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature|PT6550 - PT6575 Collections",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT6500 - PT6592.36 Afrikaans literature|PT6590 - PT6592.36 Individual authors or works",14,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature",13,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General",13,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General|PT7001 - PT7087 Literary history and criticism",7,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7001 - PT7099 Scandinavian literature|PT7001 - PT7099 General|PT7090 - PT7099 Collections",6,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian",71,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism",35,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism|PT7170 - PT7176 Poetry",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism|PT7177 - PT7211 Prose",15,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7101 - PT7211 Literary history and criticism|PT7177 - PT7211 Prose|PT7181 - PT7193 Sagas",15,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7220 - PT7262.5 Collections",12,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7298 - PT7309 Religious works",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7101 - PT7338 Old Norse literature: Old Icelandic and Old Norwegian|PT7326 - PT7338 Individual authors or works before 1540",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature",35,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7351 - PT7418 Literary history and criticism",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7351 - PT7550 Modern Icelandic literature|PT7450 - PT7495 Collections",4,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7581 - PT7599 Faroese literature",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature",89,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT7601 - PT7869 Literary history and criticism",6,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT7900 - PT7930 Folk literature",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT7945 - PT8046 Collections",6,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works",63,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works|PT8060 - PT8098 16th-18th centuries",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works|PT8100 - PT8167 19th century",28,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT7601 - PT8260 Danish literature|PT8050 - PT8176.36 Individual authors or works|PT8176 - PT8176.36 1961-2000",22,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature",165,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism",4,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism|PT8420 - PT8456 Special periods",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8301 - PT8574 Literary history and criticism|PT8460 - PT8489 Poetry",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8600 - PT8637 Folk literature",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8650 - PT8733 Collections",6,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works",133,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works|PT8800 - PT8942 19th century",60,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT8301 - PT9155 Norwegian literature|PT8750 - PT8951.36 Individual authors or works|PT8951 - PT8951.36 1961-2000",47,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature",260,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism",16,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9320 - PT9370 Special periods",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9375 - PT9404 Poetry",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9201 - PT9499 Literary history and criticism|PT9460 - PT9499 Prose",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections",9,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9565 - PT9570 Translations",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9580 - PT9599 Poetry",3,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9605 - PT9625 Drama",1,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9547 - PT9639 Collections|PT9626 - PT9639 Prose",2,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works",182,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9725 - PT9850 19th century",42,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9650 - PT9876.36 Individual authors or works|PT9876 - PT9876.36 1961-2000",96,
        "P - Language and literature|PT1 - PT9999 German literature. Dutch literature. Flemish literature. Afrikaans literature. Scandinavian literature. Icelandic literature|PT9201 - PT9999 Swedish literature|PT9950 - PT9999 Provincial, local, foreign",1,
        "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres",12892,
        "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres|PZ1 - PZ4 Fiction in English",2538,
        "P - Language and literature|PZ1 - PZ90 Fiction and juvenile belles lettres|PZ5 - PZ90 Juvenile belles lettres",9519,
        "Q - Science",74041,
        "Q - Science|Q1 - Q390 Science (General)",5539,
        "Q - Science|Q1 - Q390 Science (General)|Q1 - Q295 General",2381,
        "Q - Science|Q1 - Q390 Science (General)|Q300 - Q390 Cybernetics",3094,
        "Q - Science|Q1 - Q390 Science (General)|Q300 - Q390 Cybernetics|Q350 - Q390 Information theory",196,
        "Q - Science|QA1 - QA939 Mathematics",31021,
        "Q - Science|QA1 - QA939 Mathematics|QA1 - QA43 General",1706,
        "Q - Science|QA1 - QA939 Mathematics|QA101 - QA141.8 Elementary mathematics. Arithmetic",242,
        "Q - Science|QA1 - QA939 Mathematics|QA150 - QA272.5 Algebra",2650,
        "Q - Science|QA1 - QA939 Mathematics|QA273 - QA280 Probabilities. Mathematical statistics",2693,
        "Q - Science|QA1 - QA939 Mathematics|QA299.6 - QA433 Analysis",3949,
        "Q - Science|QA1 - QA939 Mathematics|QA299.6 - QA433 Analysis|QA303 - QA316 Calculus",296,
        "Q - Science|QA1 - QA939 Mathematics|QA440 - QA699 Geometry. Trigonometry. Topology",1578,
        "Q - Science|QA1 - QA939 Mathematics|QA47 - QA59 Tables",5,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines",16915,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines|QA75 - QA76.95 Calculating machines",16876,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines|QA75 - QA76.95 Calculating machines|QA75.5 - QA76.95 Electronic computers. Computer science",16862,
        "Q - Science|QA1 - QA939 Mathematics|QA71 - QA90 Instruments and machines|QA75 - QA76.95 Calculating machines|QA75.5 - QA76.95 Electronic computers. Computer science|QA76.75 - QA76.76 Computer software",786,
        "Q - Science|QA1 - QA939 Mathematics|QA801 - QA939 Analytic mechanics",748,
        "Q - Science|QB1 - QB991 Astronomy",2235,
        "Q - Science|QB1 - QB991 Astronomy|QB1 - QB139 General",613,
        "Q - Science|QB1 - QB991 Astronomy|QB140 - QB237 Practical and spherical astronomy",49,
        "Q - Science|QB1 - QB991 Astronomy|QB275 - QB343 Geodesy",79,
        "Q - Science|QB1 - QB991 Astronomy|QB349 - QB421 Theoretical astronomy and celestial mechanics",73,
        "Q - Science|QB1 - QB991 Astronomy|QB455 - QB456 Astrogelogy",3,
        "Q - Science|QB1 - QB991 Astronomy|QB460 - QB466 Astrophysics",148,
        "Q - Science|QB1 - QB991 Astronomy|QB468 - QB480 Non-optical methods of astronomy",69,
        "Q - Science|QB1 - QB991 Astronomy|QB495 - QB903 Descriptive astronomy",977,
        "Q - Science|QB1 - QB991 Astronomy|QB495 - QB903 Descriptive astronomy|QB500.5 - QB785 Solar system",503,
        "Q - Science|QB1 - QB991 Astronomy|QB495 - QB903 Descriptive astronomy|QB799 - QB903 Stars",348,
        "Q - Science|QB1 - QB991 Astronomy|QB980 - QB991 Cosmogony. Cosmology",183,
        "Q - Science|QC1 - QC999 Physics",7953,
        "Q - Science|QC1 - QC999 Physics|QC1 - QC75 General",1048,
        "Q - Science|QC1 - QC999 Physics|QC120 - QC168.85 Descriptive and experimental mechanics",183,
        "Q - Science|QC1 - QC999 Physics|QC170 - QC197 Atomic physics. Constitution and properties of matter (including molecular physics, relativity, quantum theory, and solid state physics)",2126,
        "Q - Science|QC1 - QC999 Physics|QC221 - QC246 Acoustics. Sound",108,
        "Q - Science|QC1 - QC999 Physics|QC251 - QC338.5 Heat",262,
        "Q - Science|QC1 - QC999 Physics|QC251 - QC338.5 Heat|QC310.15 - QC319 Thermodynamics",121,
        "Q - Science|QC1 - QC999 Physics|QC350 - QC467 Optics. Light",523,
        "Q - Science|QC1 - QC999 Physics|QC350 - QC467 Optics. Light|QC450 - QC467 Spectroscopy",168,
        "Q - Science|QC1 - QC999 Physics|QC474 - QC496.9 Radiation physics (General)",200,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism",1078,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity",834,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC669 - QC675.8 Electromagnetic theory",37,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC676 - QC678.6 Radio waves (Theory)",3,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC701 - QC715.4 Electric discharge",49,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC501 - QC718.8 Electricity|QC717.6 - QC718.8 Plasma physics. Ionized gasses",140,
        "Q - Science|QC1 - QC999 Physics|QC501 - QC766 Electricity and magnetism|QC750 - QC766 Magnetism",227,
        "Q - Science|QC1 - QC999 Physics|QC770 - QC798 Nuclear and particle physics. Atomic energy. Radioactivity",877,
        "Q - Science|QC1 - QC999 Physics|QC770 - QC798 Nuclear and particle physics. Atomic energy. Radioactivity|QC793 - QC793.5 Elementary particle physics",284,
        "Q - Science|QC1 - QC999 Physics|QC770 - QC798 Nuclear and particle physics. Atomic energy. Radioactivity|QC794.95 - QC798 Radioactivity and radioactive substances",25,
        "Q - Science|QC1 - QC999 Physics|QC801 - QC809 Geophysics. Cosmic physics",70,
        "Q - Science|QC1 - QC999 Physics|QC81 - QC114 Weights and measures",59,
        "Q - Science|QC1 - QC999 Physics|QC811 - QC849 Geomagnetism",25,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)",1279,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)|QC974.5 - QC976 Meteorological optics",3,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)|QC980 - QC999 Climatology and weather",334,
        "Q - Science|QC1 - QC999 Physics|QC851 - QC999 Meteorology. Climatology (including the earth's atmosphere)|QC980 - QC999 Climatology and weather|QC994.95 - QC999 Weather forecasting",29,
        "Q - Science|QD1 - QD999 Chemistry",4587,
        "Q - Science|QD1 - QD999 Chemistry|QD1 - QD65 General (including alchemy)",416,
        "Q - Science|QD1 - QD999 Chemistry|QD146 - QD197 Inorganic chemistry",407,
        "Q - Science|QD1 - QD999 Chemistry|QD241 - QD441 Organic chemistry",1482,
        "Q - Science|QD1 - QD999 Chemistry|QD241 - QD441 Organic chemistry|QD415 - QD436 Biochemistry",111,
        "Q - Science|QD1 - QD999 Chemistry|QD450 - QD801 Physical and theoretical chemistry",1562,
        "Q - Science|QD1 - QD999 Chemistry|QD450 - QD801 Physical and theoretical chemistry|QD625 - QD655 Radiation chemistry",4,
        "Q - Science|QD1 - QD999 Chemistry|QD450 - QD801 Physical and theoretical chemistry|QD701 - QD731 Photochemistry",97,
        "Q - Science|QD1 - QD999 Chemistry|QD71 - QD142 Analytical chemistry",465,
        "Q - Science|QD1 - QD999 Chemistry|QD901 - QD999 Crystallography",199,
        "Q - Science|QE1 - QE996.5 Geology",3365,
        "Q - Science|QE1 - QE996.5 Geology|QE1 - QE350.62 General (including geographical divisions)",1509,
        "Q - Science|QE1 - QE996.5 Geology|QE351 - QE399.2 Mineralogy",159,
        "Q - Science|QE1 - QE996.5 Geology|QE420 - QE499 Petrology",259,
        "Q - Science|QE1 - QE996.5 Geology|QE500 - QE639.5 Dynamic and structural geology",1003,
        "Q - Science|QE1 - QE996.5 Geology|QE500 - QE639.5 Dynamic and structural geology|QE521 - QE545 Volcanoes and earthquakes",328,
        "Q - Science|QE1 - QE996.5 Geology|QE500 - QE639.5 Dynamic and structural geology|QE601 - QE613.5 Structural geology",114,
        "Q - Science|QE1 - QE996.5 Geology|QE640 - QE699 Stratigraphy",188,
        "Q - Science|QE1 - QE996.5 Geology|QE701 - QE760 Paleontology",178,
        "Q - Science|QE1 - QE996.5 Geology|QE760.8 - QE899.2 Paleozoology",231,
        "Q - Science|QE1 - QE996.5 Geology|QE901 - QE996.5 Paleobotany",42,
        "Q - Science|QH1 - QH278.5 Natural history (General)",1599,
        "Q - Science|QH1 - QH278.5 Natural history (General)|QH1 - QH198 General (including nature conservation, geographical distribution)",1409,
        "Q - Science|QH1 - QH278.5 Natural history (General)|QH201 - QH278.5 Microscopy",171,
        "Q - Science|QH301 - QH705.5 Biology (General)",4487,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH359 - QH425 Evolution",351,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH426 - QH470 Genetics",715,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH471 - QH489 Reproduction",27,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH501 - QH531 Life",344,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH540 - QH549.5 Ecology",953,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH573 - QH671 Cytology",683,
        "Q - Science|QH301 - QH705.5 Biology (General)|QH705 - QH705.5 Economic biology",5,
        "Q - Science|QK1 - QK989 Botany",2463,
        "Q - Science|QK1 - QK989 Botany|QK1 - QK474.5 General (including geographical distribution)",814,
        "Q - Science|QK1 - QK989 Botany|QK474.8 - QK495 Spermatophyta. Phanerogams",113,
        "Q - Science|QK1 - QK989 Botany|QK474.8 - QK495 Spermatophyta. Phanerogams|QK494 - QK494.5 Gymnosperms",4,
        "Q - Science|QK1 - QK989 Botany|QK504 - QK635 Cryptogams",352,
        "Q - Science|QK1 - QK989 Botany|QK640 - QK673 Plant anatomy",100,
        "Q - Science|QK1 - QK989 Botany|QK710 - QK899 Plant physiology",602,
        "Q - Science|QK1 - QK989 Botany|QK900 - QK989 Plant ecology",220,
        "Q - Science|QL1 - QL991 Zoology",3485,
        "Q - Science|QL1 - QL991 Zoology|QL1 - QL355 General (including geographical distribution)",525,
        "Q - Science|QL1 - QL991 Zoology|QL360 - QL599.82 Invertebrates",800,
        "Q - Science|QL1 - QL991 Zoology|QL360 - QL599.82 Invertebrates|QL461 - QL599.82 Insects",458,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates",1668,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL614 - QL639.8 Fishes",249,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL640 - QL669.3 Reptiles and amphibians",155,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL671 - QL699 Birds",566,
        "Q - Science|QL1 - QL991 Zoology|QL605 - QL739.8 Chordates. Vertebrates|QL700 - QL739.8 Mammals",676,
        "Q - Science|QL1 - QL991 Zoology|QL750 - QL795 Animal behavior",343,
        "Q - Science|QL1 - QL991 Zoology|QL750 - QL795 Animal behavior|QL791 - QL795 Stories and anecdotes",15,
        "Q - Science|QL1 - QL991 Zoology|QL799 - QL799.5 Morphology",7,
        "Q - Science|QL1 - QL991 Zoology|QL801 - QL950.9 Anatomy",77,
        "Q - Science|QL1 - QL991 Zoology|QL951 - QL991 Embryology",55,
        "Q - Science|QM1 - QM695 Human anatomy",332,
        "Q - Science|QM1 - QM695 Human anatomy|QM1 - QM511 General",237,
        "Q - Science|QM1 - QM695 Human anatomy|QM531 - QM549 Regional anatomy",25,
        "Q - Science|QM1 - QM695 Human anatomy|QM550 - QM577.8 Human and comparative histology",39,
        "Q - Science|QM1 - QM695 Human anatomy|QM601 - QM695 Human embryology",31,
        "Q - Science|QP1 - QP801 Physiology",4523,
        "Q - Science|QP1 - QP801 Physiology|QP1 - QP345 General (including influence of the environment)",1272,
        "Q - Science|QP1 - QP801 Physiology|QP351 - QP495 Neurophysiology and neuropsychology",1317,
        "Q - Science|QP1 - QP801 Physiology|QP501 - QP801 Animal biochemistry",1935,
        "Q - Science|QR1 - QR502 Microbiology",1648,
        "Q - Science|QR1 - QR502 Microbiology|QR1 - QR74.5 General",331,
        "Q - Science|QR1 - QR502 Microbiology|QR100 - QR130 Microbial ecology",229,
        "Q - Science|QR1 - QR502 Microbiology|QR180 - QR189.5 Immunology",378,
        "Q - Science|QR1 - QR502 Microbiology|QR355 - QR502 Virology",105,
        "Q - Science|QR1 - QR502 Microbiology|QR75 - QR99.5 Bacteria",187,
        "Q - Science|QR1 - QR502 Microbiology|QR99.6 - QR99.8 Cyanobacteria",18,
        "Q - Science|QT1 - QT275 Physiology",4,
        "Q - Science|QT1 - QT275 Physiology|QT180 - QT245 Physiology. Hygiene",1,
        "Q - Science|QT1 - QT275 Physiology|QT250 - QT275 Leisure Activities. Sports Medicine",1,
        "Q - Science|QT1 - QT275 Physiology|QT34 - QT37.5 Physics. Mathematics. Engineering",2,
        "Q - Science|QU1 - QU500 Biochemistry",5,
        "Q - Science|QU1 - QU500 Biochemistry|QU100 - QU133 Biochemistry of the Human Body",1,
        "Q - Science|QU1 - QU500 Biochemistry|QU55 - QU70 Proteins. Amino Acids. Peptides",4,
        "Q - Science|QV1 - QV835 Pharmacology",8,
        "Q - Science|QV1 - QV835 Pharmacology|QV1 - QV55 Reference Works. General Works",2,
        "Q - Science|QV1 - QV835 Pharmacology|QV350 - QV370 Anti-Bacterial Agents. Tissue Extracts",1,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics",5,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics|QV738 - QV772 Drug Standardization. Pharmacognosy. Medicinal Plants",4,
        "Q - Science|QV1 - QV835 Pharmacology|QV701 - QV835 Pharmacy and Pharmaceutics|QV773 - QV835 Pharmaceutical Processes. Packaging. Labeling",1,
        "Q - Science|QW1 - QW949 Microbiology. Immunology",1,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW501 - QW949 Immunology",1,
        "Q - Science|QW1 - QW949 Microbiology. Immunology|QW501 - QW949 Immunology|QW570 - QW630.5 Antigens and Antibodies. Toxins and Antitoxins",1,
        "Q - Science|QX1 - QX675 Parasitology",1,
        "Q - Science|QX1 - QX675 Parasitology|QX1 - QX45 Reference Works. General Works",1,
        "Q - Science|QZ1 - QZ380 Pathology",6,
        "Q - Science|QZ1 - QZ380 Pathology|QZ1 - QZ39 Reference Works. General Works",1,
        "Q - Science|QZ1 - QZ380 Pathology|QZ200 - QZ380 Neoplasms. Cysts",4,
        "Q - Science|QZ1 - QZ380 Pathology|QZ40 - QZ109 Pathogenesis. Etiology",1,
        "R - Medicine",30309,
        "R - Medicine|R5 - R920 Medicine (General)",3840,
        "R - Medicine|R5 - R920 Medicine (General)|R131 - R687 History of medicine. Medical expeditions",427,
        "R - Medicine|R5 - R920 Medicine (General)|R690 - R697 Medicine as a profession. Physicians",70,
        "R - Medicine|R5 - R920 Medicine (General)|R722 - R722.32 Missionary medicine. Medical missionaries",3,
        "R - Medicine|R5 - R920 Medicine (General)|R723 - R726 Medical philosophy. Medical ethics",268,
        "R - Medicine|R5 - R920 Medicine (General)|R726.5 - R726.8 Medicine and disease in relation to psychology, terminal care, dying",76,
        "R - Medicine|R5 - R920 Medicine (General)|R728 - R733 Practice of medicine. Medical practice economics",149,
        "R - Medicine|R5 - R920 Medicine (General)|R735 - R854 Medical education. Medical schools. Research",547,
        "R - Medicine|R5 - R920 Medicine (General)|R856 - R857 Biomedical engineering. Electronics. Instrumentation",271,
        "R - Medicine|R5 - R920 Medicine (General)|R858 - R859.7 Computer applications to medicine",323,
        "R - Medicine|R5 - R920 Medicine (General)|R895 - R920 Medical physics. Medical radiology. Nuclear medicine",91,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine",4426,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state",959,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA407 - RA409.5 Health status indicators. Medical statistics and surveys",120,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA410 - RA410.9 Medical economics. Economics of medical care. Employment",173,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA411 - RA415 Provisions for personal medical care. Medical care plans",83,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1 - RA418.5 Medicine and the state|RA418 - RA418.5 Medicine and society. Social medicine. Medical sociology",129,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1001 - RA1171 Forensic medicine. Medical jurisprudence. Legal medicine",195,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA1190 - RA1270 Toxiciology. Poisons",314,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine",2455,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA565 - RA600 Environmental health (including sewage disposal, air pollution, nuisances, water supply)",186,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA601 - RA602 Food and food supply in relation to public health",21,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA604 - RA618 Parks, public baths, public carriers, buildings, etc.",5,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA619 - RA637 Disposal of the dead. Undertaking. Burial. Cremation. Cemeteries",7,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA639 - RA642 Transmission of disease",53,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA643 - RA645 Disease (Communicable and noninfectious) and public health",561,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA645.3 - RA645.37 Home health care services",28,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA645.5 - RA645.9 Emergency medical services",39,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA646 - RA648.3 War and public health",13,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA648.5 - RA767 Epidemics. Epidemology. Quarantine. Disinfection",192,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA771 - RA771.7 Rural health and hygiene. Rural health services",7,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA773 - RA788 Personal health and hygiene",361,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA421 - RA790.85 Public health. Hygiene. Preventive medicine|RA790 - RA790.95 Mental health. Mental illness prevention",191,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA791 - RA954 Medical geography. Climatology. Meteorology",62,
        "R - Medicine|RA1 - RA1270 Public aspects of medicine|RA960 - RA1000.5 Medical centers. Hospitals. Dispensaries. Clinics (including ambulance service and nursing homes)",378,
        "R - Medicine|RB1 - RB214 Pathology",799,
        "R - Medicine|RB1 - RB214 Pathology|RB127 - RB150 Manifestation of disease",201,
        "R - Medicine|RB1 - RB214 Pathology|RB151 - RB214 Theories of disease. Etiology. Pathogenesis",221,
        "R - Medicine|RB1 - RB214 Pathology|RB24 - RB33 Pathology anatomy and histology",14,
        "R - Medicine|RB1 - RB214 Pathology|RB37 - RB56.5 Clinical pathology. Laboratory technique",236,
        "R - Medicine|RC31 - RC1245 Internal medicine",11138,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC110 - RC216 Infectious and parasitic diseases",442,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC254 - RC282 Neoplasms. Tumors. Oncology (including cancer and carcinogens)",1566,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC306 - RC320.5 Tuberculosis",62,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC321 - RC571 Neurosciences. Biological psychiatry. Neuropsychiatry",5155,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC321 - RC571 Neurosciences. Biological psychiatry. Neuropsychiatry|RC346 - RC429 Neurology. Diseases of the nervous system",942,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC321 - RC571 Neurosciences. Biological psychiatry. Neuropsychiatry|RC346 - RC429 Neurology. Diseases of the nervous system|RC423 - RC429 Speech and language disorders",82,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC49 - RC52 Psychosomatic medicine",23,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine",2580,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC581 - RC607 Immunologic diseases. Allergy",182,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC620 - RC627 Nutritional diseases. Deficiency diseases",12,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC627.5 - RC632 Metabolic diseases",106,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC633 - RC647.5 Diseases of the blood and blood-forming organs",124,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC648 - RC665 Diseases of the endocrine glands",213,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC666 - RC701 Diseases of the circulatory (cardiovascular) system",753,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC705 - RC779 Diseases of the respiratory system",207,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC799 - RC869 Diseases of the digestive system. Gastroenterology",333,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC870 - RC923 Diseases of the genitourinary system. Urology",285,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC924 - RC924.5 Diseases of the connective tissues",7,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC581 - RC951 Specialties of internal medicine|RC925 - RC935 Diseases of the musculoskeletal system",162,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC71 - RC78.7 Examination. Diagnosis (including radiography)",128,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC71 - RC78.7 Examination. Diagnosis (including radiography)|RC78 - RC78.5 Radiography. Roentgenography",48,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC86 - RC88.9 Medical emergencies. Critical care. Intensive care. First aid",153,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC91 - RC103 Diseases due to physical and chemical agents",5,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions",339,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC1030 - RC1160 Transportation medicine (including automotive, aviation, and space medicine)",28,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC1200 - RC1245 Sports medicine",103,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC952 - RC954.6 Geriatrics",80,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC955 - RC962 Arctic medicine. Tropical medicine",18,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC963 - RC969 Industrial medicine. Industrial hygiene",74,
        "R - Medicine|RC31 - RC1245 Internal medicine|RC952 - RC1245 Special situations and conditions|RC970 - RC986 Military medicine. Naval medicine",16,
        "R - Medicine|RD1 - RD811 Surgery",1742,
        "R - Medicine|RD1 - RD811 Surgery|RD1 - RD31.7 General works",112,
        "R - Medicine|RD1 - RD811 Surgery|RD101 - RD104 Fractures (General)",23,
        "R - Medicine|RD1 - RD811 Surgery|RD118 - RD120.5 Plastic surgery. Reparative surgery",100,
        "R - Medicine|RD1 - RD811 Surgery|RD120.6 - RD129.8 Transplantation of organs, tissues, etc.",84,
        "R - Medicine|RD1 - RD811 Surgery|RD137 - RD145 Surgery in childhood, adolescence, pregnancy, old age",39,
        "R - Medicine|RD1 - RD811 Surgery|RD151 - RD498 Military and naval surgery",12,
        "R - Medicine|RD1 - RD811 Surgery|RD32 - RD33.9 Operative surgery. Technique of surgical operations",51,
        "R - Medicine|RD1 - RD811 Surgery|RD49 - RD52 Surgical therapeutics. Preoperative and postoperative care",19,
        "R - Medicine|RD1 - RD811 Surgery|RD520 - RD599.5 Surgery by region, system, or organ",672,
        "R - Medicine|RD1 - RD811 Surgery|RD63 - RD76 Operating rooms and theaters. Instruments, apparatus, and appliances",32,
        "R - Medicine|RD1 - RD811 Surgery|RD651 - RD678 Neoplasms. Tumors. Oncology",52,
        "R - Medicine|RD1 - RD811 Surgery|RD680 - RD688 Diseases of the locomotor system (Surgical treatment)",27,
        "R - Medicine|RD1 - RD811 Surgery|RD701 - RD811 Orthopedic surgery",185,
        "R - Medicine|RD1 - RD811 Surgery|RD701 - RD811 Orthopedic surgery|RD792 - RD811 Physical rehabilitation",7,
        "R - Medicine|RD1 - RD811 Surgery|RD75 - RD79 Examinations. Diagnosis",3,
        "R - Medicine|RD1 - RD811 Surgery|RD78.3 - RD87.3 Anesthesiology",84,
        "R - Medicine|RD1 - RD811 Surgery|RD92 - RD97.8 Emergency surgery. Wounds and injuries",119,
        "R - Medicine|RD1 - RD811 Surgery|RD98 - RD98.4 Surgical complications",6,
        "R - Medicine|RD1 - RD811 Surgery|RD99 - RD99.35 Surgical nursing",7,
        "R - Medicine|RE1 - RE994 Opthamology",346,
        "R - Medicine|RE1 - RE994 Opthamology|RE91 - RE912 Particular diseases of the eye",153,
        "R - Medicine|RE1 - RE994 Opthamology|RE925 - RE939 Refraction and errors of refraction and accommodation",9,
        "R - Medicine|RE1 - RE994 Opthamology|RE939.2 - RE981 Optometry. Opticians. Eyeglasses",15,
        "R - Medicine|RE1 - RE994 Opthamology|RE986 - RE988 Artificial eyes and other prostheses",1,
        "R - Medicine|RE1 - RE994 Opthamology|RE991 - RE991 Ocular therapeutics",2,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology",164,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology|RF110 - RF320 Otology. Diseases of the ear",79,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology|RF341 - RF437 Rhinology. Diseases of the nose, accessory sinuses, and nasopharynx",17,
        "R - Medicine|RF1 - RF547 Otorhinolaryngology|RF460 - RF547 Laryngology. Diseases of the throat",17,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics",927,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG104 - RG104.7 Operative gynecology",19,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG133 - RG137.6 Conception. Artificial insemination. Contraception",137,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG159 - RG208 Functional and systemic disorders. Endocrine gynecology",53,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG211 - RG483 Abnormalities and diseases of the female genital organs",40,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG484 - RG485 Urogynecology and obstetric urology. Urogynecologic surgery",4,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG491 - RG499 Diseases of the breast",44,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics",449,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG551 - RG591 Pregnancy",124,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG600 - RG650 The embryo and fetus",106,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG651 - RG721 Labor. Parturition",32,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG725 - RG791 Obstetric operations. Operative obstetrics",30,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG801 - RG871 Puerperal state",13,
        "R - Medicine|RG1 - RG991 Gynecology and obstetrics|RG500 - RG991 Obstetrics|RG940 - RG991 Maternal care. Prenatal care services",51,
        "R - Medicine|RJ1 - RJ570 Pediatrics",1462,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ101 - RJ103 Child health. Child health services",29,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ125 - RJ145 Physiology of children and adolescents",57,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ206 - RJ235 Nutrition and feeding of children and adolescents",44,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ242 - RJ243 Hospital care",5,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ245 - RJ247 Nursing of children. Pediatric nursing",15,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ250 - RJ250.3 Premature infants",11,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ251 - RJ325 Newborn infants (including physiology, care, treatment, diseases)",57,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ370 - RJ550 Diseases of children and adolescents",1042,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ370 - RJ550 Diseases of children and adolescents|RJ499 - RJ507 Mental disorders. Child psychiatry",660,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ47.3 - RJ47.4 Genetic aspects",1,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ50 - RJ51 Examination. Diagnosis",10,
        "R - Medicine|RJ1 - RJ570 Pediatrics|RJ52 - RJ53 Therapeutics",4,
        "R - Medicine|RK1 - RK715 Dentistry",501,
        "R - Medicine|RK1 - RK715 Dentistry|RK301 - RK493 Oral and dental medicine. Pathology. Diseases",123,
        "R - Medicine|RK1 - RK715 Dentistry|RK501 - RK519 Operative dentistry. Restorative dentistry",26,
        "R - Medicine|RK1 - RK715 Dentistry|RK520 - RK528 Orthodontics",52,
        "R - Medicine|RK1 - RK715 Dentistry|RK529 - RK535 Oral surgery",17,
        "R - Medicine|RK1 - RK715 Dentistry|RK58 - RK59.3 Practice of dentistry. Dental economics",15,
        "R - Medicine|RK1 - RK715 Dentistry|RK60.7 - RK60.8 Preventive dentistry",6,
        "R - Medicine|RK1 - RK715 Dentistry|RK641 - RK667 Prosthetic dentistry. Prosthodontics",37,
        "R - Medicine|RL1 - RL803 Dermatology",240,
        "R - Medicine|RL1 - RL803 Dermatology|RL110 - RL120 Therapeutics",4,
        "R - Medicine|RL1 - RL803 Dermatology|RL130 - RL169 Diseases of the glands, hair, nails",19,
        "R - Medicine|RL1 - RL803 Dermatology|RL201 - RL331 Hyperemias, inflammations, and infections of the skin",40,
        "R - Medicine|RL1 - RL803 Dermatology|RL391 - RL489 Atrophies. Hypertrophies",3,
        "R - Medicine|RL1 - RL803 Dermatology|RL701 - RL751 Diseases due to psychosomatic and nerve disorders. Dermatoneuroses",4,
        "R - Medicine|RL1 - RL803 Dermatology|RL760 - RL785 Diseases due to parasites",4,
        "R - Medicine|RL1 - RL803 Dermatology|RL87 - RL94 Care and hygiene",13,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology",1356,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM146 - RM146.7 Misues of therapeutic drugs. Medication Errors",6,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM147 - RM180 Administration of drugs and other therapeutic agents",63,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM182 - RM190 Other therapeutic procedures (including acupuncture, pneumatic aspiration, spinal puncture, pericardial puncture)",25,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM214 - RM258 Diet therapy. Diet and dietetics in disease. Dietary cookbooks",106,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM260 - RM263 Chemotherapy",12,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM265 - RM267 Antibiotic therapy. Antibiotics",14,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM270 - RM282 Immunotherapy. Serum therapy",21,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM283 - RM298 Endocrinotherapy. Organotherapy",9,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM300 - RM666 Drugs and their actions",645,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM671 - RM671.5 Nonprescription drugs. Patent medicines",6,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM695 - RM893 Physical medicine. Physical therapy (including massage, exercise, occupational therapy, hydrotherapy, phototherapy, radiotherapy, thermotherapy, elect",121,
        "R - Medicine|RM1 - RM950 Therapeutics. Pharmacology|RM930 - RM931 Rehabilitation therapy",16,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica",800,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS125 - RS131.9 Formularies. Collected prescriptions",12,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS139 - RS141.9 Pharmacopoeias",5,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS151.2 - RS151.9 Dispensatories",2,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica",667,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS160 - RS167 Pharmacognosy. Pharmaceutical substances (plant, animal, and inorganic)",93,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS189 - RS190 Assay methods. Standardization. Analysis",38,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS192 - RS199 Pharmaceutical technology",30,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS200 - RS201 Pharmaceutical dosage forms",4,
        "R - Medicine|RS1 - RS441 Pharmacy and materia medica|RS153 - RS441 Materia medica|RS400 - RS431 Pharmaceutical chemistry",166,
        "R - Medicine|RT1 - RT120 Nursing",414,
        "R - Medicine|RT1 - RT120 Nursing|RT89 - RT120 Specialties in nursing",41,
        "R - Medicine|RV1 - RV431 Botanic, Thomsonian, and eclectic medicine",6,
        "R - Medicine|RX1 - RX681 Homeopathy",21,
        "R - Medicine|RX1 - RX681 Homeopathy|RX211 - RX581 Diseases, treatment, etc.",6,
        "R - Medicine|RX1 - RX681 Homeopathy|RX601 - RX675 Materia medica and therapeutics",1,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine",36,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ201 - RZ275 Chiropractic",9,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ301 - RZ397.5 Osteopathy",2,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ400 - RZ408 Mental healing",9,
        "R - Medicine|RZ201 - RZ999 Other systems of medicine|RZ409.7 - RZ999 Miscellaneous systems and treatments (including magnetotherapy, mesmerism, naturopathy, organomic medicine, phrenology, radiesthesia, etc.)",12,
        "S - Agriculture",6866,
        "S - Agriculture|S1 - S946.5 Agriculture (General)",1536,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S419 - S482 History",150,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S530 - S559 Agricultural education",32,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S560 - S571.5 Farm economics. Farm management. Agricultural mathematics",29,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S583 - S587.73 Agricultural chemistry. Agricultural chemicals",23,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S588.4 - S589.6 Agricultural physics",8,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S589.75 - S589.76 Agriculture and the environment",14,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S590 - S599.9 Soils. Soil science (Including soil surveys, soil chemistry, soil structure, soil-plant relationships)",358,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S600 - S600.7 Agricultural meteorology. Crops and climate",34,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S602 - S604.37 Methods and systems of culture. Cropping systems",15,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S604.5 - S604.64 Agricultural conservation",5,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S604.8 - S621.5 Melioration: Improvement, reclamation, fertilization, irrigation, etc. of lands",70,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S604.8 - S621.5 Melioration: Improvement, reclamation, fertilization, irrigation, etc. of lands|S606 - S621.5 Special classes of lands and reclamation methods (including woodlands, burning of lands, deserts, saline environments, moors)",33,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S622 - S627 Soil conservation and protection",31,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S631 - S667 Fertilizers and improvement of the soil",57,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S671 - S760.5 Farm machinery and farm engineering",14,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S71 - S87 History",2,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S770 - S790.3 Agricultural structures. Farm buildings",1,
        "S - Agriculture|S1 - S946.5 Agriculture (General)|S900 - S946.5 Conservation of natural resources (Including land conservation)",62,
        "S - Agriculture|SB1 - SB1110 Plant culture",2994,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB170 - SB172.5 Tree crops",4,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB175 - SB177 Food crops",15,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB183 - SB317 Field crops (including cereals, forage crops, grasses, legumes, root crops, sugar plants, textile plants, alkaloidal plants, medicinal plants)",373,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB317.5 - SB319.86 Horticulture. Horticultural crops",63,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB320 - SB353.5 Vegetables",183,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB354 - SB402 Fruit culture and orchard care",131,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB354 - SB402 Fruit culture and orchard care|SB381 - SB386 Berries and Small Fruits",3,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB354 - SB402 Fruit culture and orchard care|SB387 - SB399 Grape Culture, Viticulture",18,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants",662,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB406.7 - SB406.83 Plant propagation",2,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB409 - SB413 Culture of Individual plants",77,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB414.6 - SB417 Greenhouses and greenhouse culture",26,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB418 - SB418.4 Container gardening",9,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB419 - SB419.3 Indoor gardening and houseplants",46,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB421 - SB439.8 Classes of plants (including annuals, climbers, ferns, lawns, perennials, shrubs)",280,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB442.8 - SB443.4 Marketing, cut flower industry",1,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB444 - SB446.6 Horticultural service industry",1,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB403 - SB450.87 Flowers and flower culture. Ornamental plants|SB449 - SB450.87 Flower arrangement and decoration",39,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB450.9 - SB467.8 Gardens and gardening",373,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB469 - SB476 Landscape gardening. Landscape architecture",208,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB481 - SB485 Parks and public reservations (including works on theory, management, history)",31,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases",470,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB610 - SB615 Weeds, parasitic plants, etc.",57,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB617 - SB618 Poisonous plants",2,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB621 - SB795 Plant pathology",134,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB818 - SB945 Economic entomology",48,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB599 - SB990.5 Pests and diseases|SB950 - SB990.5 Pest control and treatment of diseases. Plant protection",127,
        "S - Agriculture|SB1 - SB1110 Plant culture|SB992 - SB998 Economic zoology applied to crops. Agricultural zoology (including animals injurious and beneficial to plants)",6,
        "S - Agriculture|SD1 - SD669.5 Forestry",442,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD131 - SD247.5 History of forestry. Forest conditions",85,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD250 - SD363.3 Forestry education",6,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD390 - SD390.43 Forest soils",7,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD390.5 - SD390.7 Forest meteorology. Forest microclimatology",1,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD391 - SD410.9 Sylviculture",79,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD411 - SD428 Conservation and protection",67,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD430 - SD557 Exploitation and utilization",42,
        "S - Agriculture|SD1 - SD669.5 Forestry|SD561 - SD669.5 Administration. Policy",33,
        "S - Agriculture|SF1 - SF1100 Animal culture",1152,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF101 - SF103.5 Brands and branding, and other means of identifying",1,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF105 - SF109 Breeding",18,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF114 - SF121 Exhibitions",1,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF170 - SF180 Working animals",1,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF191 - SF275 Cattle",86,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF191 - SF275 Cattle|SF221 - SF250 Horses",10,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF191 - SF275 Cattle|SF250.5 - SF275 Horse sports. Horse shows",49,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF361 - SF361.73 Donkeys",5,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF371 - SF379 Sheep. Wool",13,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF380 - SF388 Goats",9,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF391 - SF397.83 Swine",17,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF402 - SF405 Fur-bearing animals",1,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF405.5 - SF407 Laboratory animals",9,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF408 - SF408.6 Zoo animals",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF41 - SF55 History",5,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets",190,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF421 - SF440.2 Dogs. Dog racing",105,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF441 - SF450 Cats",44,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF451 - SF455 Rabbits and hares",6,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF411 - SF459 Pets|SF456 - SF458.83 Fishes. Aquariums",12,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF461 - SF473 Birds",9,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF481 - SF507 Poultry. Eggs",24,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF515 - SF515.5 Reptiles",1,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF521 - SF539.8 Bee culture",32,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF541 - SF560 Sericulture. Silk culture",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine",498,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF756.5 - SF769.5 Special preclinical sciences (including veterinary genetics, ethology, anatomy, physiology, embryology)",58,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF780.2 - SF780.7 Veterinary microbiology, bacteriology, virology, mycology",7,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF781 - SF809 Communicable diseases of animals (General)",8,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF811 - SF909 Veterinary medicine of special organs, regions, and systems",47,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF911 - SF914.4 Veterinary surgery",32,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF911 - SF914.4 Veterinary surgery|SF914.3 - SF914.4 Veterinary traumatology. Veterinary emergencies",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF915 - SF919.5 Veterinary pharmacology",16,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF600 - SF1100 Veterinary medicine|SF951 - SF997.5 Diseases of special classes of animals",163,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF84 - SF84.64 Economic zoology",4,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF84.82 - SF85.6 Rangelands. Range management. Grazing",9,
        "S - Agriculture|SF1 - SF1100 Animal culture|SF95 - SF99 Feeds and feeding. Animal nutrition",21,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling",431,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture",114,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture|SH151 - SH179 Fish culture",67,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture|SH151 - SH179 Fish culture|SH171 - SH179 Diseases and adverse factors",28,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH20.3 - SH191 Aquaculture|SH33 - SH134.6 By region or country",6,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries",231,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH213 - SH216.55 By oceans and seas",3,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH219 - SH321 By region or country",48,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH327.5 - SH327.7 Fishery resources. Fishery conservation",4,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH328 - SH329 Fishery management. Fishery policy",38,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH334.5 - SH334.7 Fishery technology",2,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH334.9 - SH336.5 Fishery processing",11,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH343.2 - SH343.3 Fishery oceanography. Fishery meteorology",3,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH344 - SH344.8 Methods and gear. Catching of fish",5,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH346 - SH351 Fishery for individual species",8,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH360 - SH363 Seal fisheries. Fur sealing",1,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH365 - SH380.92 Shellfish fisheries. Shellfish culture",15,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH381 - SH385 Whaling",16,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH201 - SH399 Fisheries|SH388.7 - SH391.5 Algae culture. Seaweed",9,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH400 - SH400.8 Seafood gathering",1,
        "S - Agriculture|SH1 - SH691 Aquaculture. Fisheries. Angling|SH401 - SH691 Angling (including tackle, casting, methods of angling, angling for special kinds of fish)",68,
        "S - Agriculture|SK1 - SK663 Hunting",122,
        "S - Agriculture|SK1 - SK663 Hunting|SK281 - SK293 Special methods and types of hunting (including bolos, game calling, tracking, trapping, dressing)",5,
        "S - Agriculture|SK1 - SK663 Hunting|SK281 - SK293 Special methods and types of hunting (including bolos, game calling, tracking, trapping, dressing)|SK284 - SK287 Fox hunting",1,
        "S - Agriculture|SK1 - SK663 Hunting|SK295 - SK305 Big game",9,
        "S - Agriculture|SK1 - SK663 Hunting|SK311 - SK335 Bird hunting. Fowling",17,
        "S - Agriculture|SK1 - SK663 Hunting|SK351 - SK579 Wildlife management. Game protection",20,
        "S - Agriculture|SK1 - SK663 Hunting|SK37 - SK39.5 Shooting",1,
        "S - Agriculture|SK1 - SK663 Hunting|SK40 - SK268 By country",19,
        "T - Technology.",41884,
        "T - Technology.|T1 - T995 Technology (General)",2897,
        "T - Technology.|T1 - T995 Technology (General)|T11.95 - T12.5 Industrial directories",10,
        "T - Technology.|T1 - T995 Technology (General)|T14.7 - T33 History of technology",76,
        "T - Technology.|T1 - T995 Technology (General)|T173.2 - T174.5 Technological change",197,
        "T - Technology.|T1 - T995 Technology (General)|T175 - T178 Industrial research. Research and development",35,
        "T - Technology.|T1 - T995 Technology (General)|T201 - T342 Patents. Trademarks",65,
        "T - Technology.|T1 - T995 Technology (General)|T351 - T385 Mechanical drawing. Engineering graphics",84,
        "T - Technology.|T1 - T995 Technology (General)|T391 - T995 Exhibitions. Trade shows. World's fairs",44,
        "T - Technology.|T1 - T995 Technology (General)|T55 - T55.3 Industrial satety. Industrial accident prevention",68,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering",1403,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T57 - T57.97 Applied mathematics. Quantitative methods",489,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T57 - T57.97 Applied mathematics. Quantitative methods|T57.6 - T57.97 Operations research. Systems analysis",450,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T58.5 - T58.64 Information technology",609,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T58.5 - T58.64 Information technology|T58.6 - T58.62 Management information systems",204,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T58.7 - T58.8 Production capacity. Manufacturing capacity",9,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T59 - T59.2 Standardization",2,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T59.7 - T59.77 Human engineering in industry. Man-machine systems",24,
        "T - Technology.|T1 - T995 Technology (General)|T55.4 - T60.8 Industrial engineering. Management engineering|T60 - T60.8 Work measurement. Methods engineering",7,
        "T - Technology.|T1 - T995 Technology (General)|T61 - T173 Technical education. Technical schools",75,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)",7845,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA1001 - TA1280 Transportation engineering",61,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA1501 - TA1820 Applied optics. Photonics",1598,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA166 - TA167 Human engineering",164,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA170 - TA171 Environmental engineering",88,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA177.4 - TA185 Engineering economy",22,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA190 - TA195 Management of engineering works",41,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA2001 - TA2040 Plasma engineering. Applied plasma dynamics",12,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA329 - TA348 Engineering mathematics. Engineering analysis",534,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA349 - TA359 Mechanics of engineering. Applied mechanics",620,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA365 - TA367 Acoustics in engineering. Acoustical engineering",31,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA401 - TA492 Materials of engineering and construction. Mechanics of materials",2612,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA501 - TA625 Surveying",33,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA630 - TA695 Structural engineering (General)",643,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA703 - TA712 Engineering geology. Rock mechanics. Soil mechanics. Underground construction",307,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA715 - TA787 Earthwork. Foundations",48,
        "T - Technology.|TA1 - TA2040 Engineering (General). Civil engineering (General)|TA800 - TA820 Tunneling. Tunnels",24,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.",380,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC160 - TC181 Technical hydraulics",93,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC183 - TC201 General preliminary operations. Dredging. Submarine building",3,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC203 - TC380 Harbors and coast protective works. Coastal engineering. Lighthouses",34,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC401 - TC506 River, lake, and water-supply engineering (General)",108,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC530 - TC537 River protective works. Regulation. Flood control",21,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC540 - TC558 Dams. Barrages",28,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC601 - TC791 Canals and inland navigation. Waterways",12,
        "T - Technology.|TC1 - TC978 Hydraulic engineering.|TC801 - TC978 Irrigation engineering. Reclamation of wasteland. Drainage",15,
        "T - Technology.|TC1501 - TC1800 Ocean engineering",43,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.",2371,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD1020 - TD1066 Hazardous substances and their disposal",36,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD159 - TD168 Municipal engineering",106,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD169 - TD171.8 Environmental protection",102,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD172 - TD193.5 Environmental pollution",303,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD194 - TD195 Environmental effects of industries and plants",46,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes",708,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes|TD419 - TD428 Water pollution",159,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes|TD429.5 - TD480.7 Water purification. Water treatment and conditioning. Saline water conversion",114,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD201 - TD500 Water supply for domestic and industrial purposes|TD481 - TD493 Water distribution systems",7,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD511 - TD780 Sewage collection and disposal systems",150,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD783 - TD812.5 Municipal refuse. Solid wastes",152,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD813 - TD870 Street cleaning. Litter and its removal",1,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD878 - TD894 Special types of environmental pollution (including soil, air, and noise pollution)",288,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD895 - TD899 Industrial and factory sanitation",57,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD895 - TD899 Industrial and factory sanitation|TD896 - TD899 Industrial and factory wastes",57,
        "T - Technology.|TD1 - TD1066 Environmental technology. Sanitary engineering.|TD920 - TD934 Rural and farm sanitary engineering",19,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements",188,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE175 - TE176.5 Highway design. Interchanges and intersections",8,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE177 - TE178.8 Roadside development. Landscaping",1,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE200 - TE205 Materials for roadmaking",4,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE210 - TE228.3 Construction details (including foundations, maintenance, equipment)",44,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE250 - TE278.8 Pavements and paved roads",27,
        "T - Technology.|TE1 - TE450 Highway engineering. Roads and pavements|TE279.5 - TE298 Pedestrian facilities",1,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation",146,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF1300 - TF1620 High speed ground transportation",10,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF200 - TF320 Railway construction",16,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF340 - TF499 Railway equipment and supplies",1,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF501 - TF668 Railway operation and management",26,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF670 - TF851 Local and light railways",13,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF670 - TF851 Local and light railways|TF840 - TF851 Elevated railways and subways",4,
        "T - Technology.|TF1 - TF1620 Railroad engineering and operation|TF855 - TF1127 Electric railways",11,
        "T - Technology.|TG1 - TG470 Bridge engineering.",83,
        "T - Technology.|TH1 - TH9745 Building construction",714,
        "T - Technology.|TH1 - TH9745 Building construction|TH1000 - TH1725 Systems of building construction.",81,
        "T - Technology.|TH1 - TH9745 Building construction|TH2025 - TH3000 Details in building design and construction (including walls, roofs)",26,
        "T - Technology.|TH1 - TH9745 Building construction|TH3301 - TH3411 Maintenance and repair",17,
        "T - Technology.|TH1 - TH9745 Building construction|TH4021 - TH4977 Buildings: Construction with reference to use (including public buildings, dwellings)",72,
        "T - Technology.|TH1 - TH9745 Building construction|TH5011 - TH5701 Construction by phase of work",8,
        "T - Technology.|TH1 - TH9745 Building construction|TH6014 - TH6081 Environmental engineering of buildings. Sanitary engineering of buildings",34,
        "T - Technology.|TH1 - TH9745 Building construction|TH6101 - TH6887 Plumbing and pipefitting",10,
        "T - Technology.|TH1 - TH9745 Building construction|TH7005 - TH7699 Heating and ventilation. Air conditioning",71,
        "T - Technology.|TH1 - TH9745 Building construction|TH7700 - TH7975 Illumination. Lighting",9,
        "T - Technology.|TH1 - TH9745 Building construction|TH845 - TH895 Architectural engineering. Structural engineering of buildings",86,
        "T - Technology.|TH1 - TH9745 Building construction|TH900 - TH915 Construction equipment in buildings",2,
        "T - Technology.|TH1 - TH9745 Building construction|TH9025 - TH9745 Protection of fuildings (including protection from dampness, fire, burglary)",103,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery",3086,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1040 - TJ1119 Machinery exclusive of prime movers",110,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1125 - TJ1345 Machine shops and machine shops practice",104,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1350 - TJ1418 Hoisting and conveying machinery",8,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1425 - TJ1475 Lifting and pressing machinery",1,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ1480 - TJ1496 Agricultural machinery. Farm machinery",1,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ163.12 - TJ163.25 Power resources",174,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ163.26 - TJ163.5 Energy conservation",34,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ170 - TJ179 Mechanics applied to machinery. Dynamics",44,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ181 - TJ210 Mechanical movements",28,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ210.2 - TJ211.47 Mechanical devices and figures. Automata. Ingenious mechanisms. Robots (General)",613,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ212 - TJ225 Control engineering systems. Automatic machinery (General)",641,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ227 - TJ240 Machine design and drawing",22,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ241 - TJ254.7 Machine construction (General)",31,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ255 - TJ265 Heat engines",120,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ266 - TJ267.5 Turbines. Turbomachines (General)",15,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ268 - TJ740 Steam engineering",42,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ268 - TJ740 Steam engineering|TJ603 - TJ695 Locomotives",13,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ751 - TJ805 Miscellaneous motors and engines (including gas, gasoline, diesel engines)",57,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ807 - TJ830 Renewable energy sources",464,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ836 - TJ927 Hydraulic machinery",79,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ940 - TJ940.5 Vacuum technology",11,
        "T - Technology.|TJ1 - TJ1570 Mechanical engineering and machinery|TJ950 - TJ1030 Pneumatic machinery",11,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.",10677,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK1001 - TK1841 Production of electric energy or power. Powerplants. Central stations",453,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK2000 - TK2891 Dynamoelectric machinery and auxiliaries (including generators, transformers, motors)",138,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK2896 - TK2985 Production of electricity by direct electricity conversion",348,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK3001 - TK3521 Distribution or transmission of electric power",314,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK301 - TK399 Electric meters",3,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK4001 - TK4102 Applications of electric power",21,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK4125 - TK4399 Electric lighting",14,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK452 - TK454.4 Electric apparatus and materials. Electric circuits. Electric networks",31,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK4601 - TK4661 Electric heating",10,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK5101 - TK6720 Telecommunication (including telegraphy, telephone, radio, radar, television)",5317,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK7800 - TK8360 Electronics",3639,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK7800 - TK8360 Electronics|TK7885 - TK7895 Computer engineering. Computer hardware",223,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK7800 - TK8360 Electronics|TK8300 - TK8360 Photoelectronic devices (General)",78,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK9001 - TK9401 Nuclear engineering. Atomic power",180,
        "T - Technology.|TK1 - TK9971 Electrical engineering. Electronics. Nuclear engineering.|TK9900 - TK9971 Electricity for amateurs. Amateur constructors' manuals",17,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics",1944,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL1 - TL484 Motor vehicles. Cycles",551,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL500 - TL777 Aeronautics. Aeronautical engineering",687,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL780 - TL785.8 Rocket propulsion. Rockets",51,
        "T - Technology.|TL1 - TL4050 Motor vehicles. Aeronautics. Astronautics|TL787 - TL4050 Astronautics. Space travel",648,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.",1166,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN400 - TN580 Ore deposits and mining of particular metals",63,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN600 - TN799 Metallurgy",166,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN799.5 - TN948 Nonmetallic minerals",385,
        "T - Technology.|TN1 - TN997 Mining engineering. Metallurgy.|TN950 - TN997 Building and ornamental stones",12,
        "T - Technology.|TP1 - TP1185 Chemical technology.",3190,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP1080 - TP1185 Polymers and polymer manufacture",161,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP155 - TP156 Chemical engineering",230,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP200 - TP248 Manufacture and use of chemicals",111,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP248.13 - TP248.65 Biotechnology",481,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP250 - TP261 Industrial electrochemistry",4,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP267.5 - TP301 Explosives and pyrotechnics",28,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP315 - TP360 Fuel",288,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP368 - TP456 Food processing and manufacture",368,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP480 - TP498 Low temperature engineering. Cyrogenic engineering. Refrigeration",21,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP500 - TP660 Fermentation industries. Beverages. Alcohol",177,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP670 - TP699 Oils, fats, and waxes",81,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP670 - TP699 Oils, fats, and waxes|TP690 - TP692.5 Petroleum refining. Petroleum products",50,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP700 - TP746 Illuminating industries (Nonelectric)",3,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP751 - TP762 Gas industry",24,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP785 - TP869 Clay industries. Ceramics. Glass",244,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP875 - TP888 Cement industries",12,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP890 - TP933 Textile bleaching, dyeing, printing, etc.",28,
        "T - Technology.|TP1 - TP1185 Chemical technology.|TP934 - TP945 Paints, pigments, varnishes, etc.",14,
        "T - Technology.|TR1 - TR1050 Photography",2482,
        "T - Technology.|TR1 - TR1050 Photography|TR250 - TR265 Cameras",11,
        "T - Technology.|TR1 - TR1050 Photography|TR287 - TR500 Photographic Processing",27,
        "T - Technology.|TR1 - TR1050 Photography|TR504 - TR508 Transparencies, Diapositives",3,
        "T - Technology.|TR1 - TR1050 Photography|TR510 - TR545 Color Photography",12,
        "T - Technology.|TR1 - TR1050 Photography|TR550 - TR581 Studio and Laboratory",11,
        "T - Technology.|TR1 - TR1050 Photography|TR590 - TR620 Lighting",16,
        "T - Technology.|TR1 - TR1050 Photography|TR624 - TR835 Applied photography (Including artistic, commercial, medical photography, photocopying processes)",1715,
        "T - Technology.|TR1 - TR1050 Photography|TR845 - TR899 Cinematography. Motion pictures",202,
        "T - Technology.|TR1 - TR1050 Photography|TR925 - TR1050 Photomechanical processes",14,
        "T - Technology.|TS1 - TS2301 Manufactures",1784,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1080 - TS1268 Paper manufacture and trade",108,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1300 - TS1865 Textile industries",119,
        "T - Technology.|TS1 - TS2301 Manufactures|TS155 - TS194 Production management. Operations management",1172,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1870 - TS1935 Rubber industry",17,
        "T - Technology.|TS1 - TS2301 Manufactures|TS195 - TS198.8 Packaging",22,
        "T - Technology.|TS1 - TS2301 Manufactures|TS1950 - TS1982 Animal products",26,
        "T - Technology.|TS1 - TS2301 Manufactures|TS200 - TS770 Metal manufactures. Metalworking",259,
        "T - Technology.|TS1 - TS2301 Manufactures|TS2120 - TS2159 Cereals and grain. Milling industry",1,
        "T - Technology.|TS1 - TS2301 Manufactures|TS2220 - TS2283 Tobacco industry",5,
        "T - Technology.|TS1 - TS2301 Manufactures|TS800 - TS937 Wood technology. Lumber",27,
        "T - Technology.|TS1 - TS2301 Manufactures|TS800 - TS937 Wood technology. Lumber|TS840 - TS915 Wood products. Furniture",16,
        "T - Technology.|TS1 - TS2301 Manufactures|TS800 - TS937 Wood technology. Lumber|TS920 - TS937 Chemical processing of wood",8,
        "T - Technology.|TS1 - TS2301 Manufactures|TS940 - TS1047 Leather industries. Tanning",7,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts",601,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT161 - TT170.7 Manual training. School shops",4,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT174 - TT176 Articles for children",12,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT180 - TT200 Woodworking. Furniture making. Upholstering",33,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT205 - TT267 Metalworking",12,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT300 - TT382.8 Painting. Wood finishing",4,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT341 - TT641 Nutrition. Foods and food supply",166,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT490 - TT695 Clothing manufacture. Dressmaking. Tailoring",12,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT697 - TT927 Home arts. Homecrafts (including sewing, embroidery, decorative crafts)",240,
        "T - Technology.|TT1 - TT999 Handicrafts. Arts and crafts|TT950 - TT979 Hairdressing. Beauty culture. Barbers' work",5,
        "T - Technology.|TX1 - TX1110 Home economics.",1854,
        "T - Technology.|TX1 - TX1110 Home economics.|TX642 - TX840 Cookery",1010,
        "T - Technology.|TX1 - TX1110 Home economics.|TX901 - TX946.5 Hospitality industry. Hotels, clubs, restaurants, food service, etc.",118,
        "T - Technology.|TX1 - TX1110 Home economics.|TX950 - TX953 Taverns, barrooms, saloons",27,
        "T - Technology.|TX1 - TX1110 Home economics.|TX955 - TX985 Building operations and housekeeping",2,
        "U - Military science (General)",4641,
        "U - Military science (General)|U1 - U900 Military science (General)",1279,
        "U - Military science (General)|U1 - U900 Military science (General)|U150 - U155 Military planning",49,
        "U - Military science (General)|U1 - U900 Military science (General)|U161 - U163 Strategy",69,
        "U - Military science (General)|U1 - U900 Military science (General)|U164 - U167.5 Tactics",14,
        "U - Military science (General)|U1 - U900 Military science (General)|U21 - U22.3 War. Philosophy. Military sociology",148,
        "U - Military science (General)|U1 - U900 Military science (General)|U250 - U255 Maneuvers (combined arms)",4,
        "U - Military science (General)|U1 - U900 Military science (General)|U263 - U264.5 Atomic warfare. Atomic weapons",95,
        "U - Military science (General)|U1 - U900 Military science (General)|U27 - U43 History of military science",97,
        "U - Military science (General)|U1 - U900 Military science (General)|U310 - U310.2 War games",32,
        "U - Military science (General)|U1 - U900 Military science (General)|U320 - U325 Physical training of soldiers",2,
        "U - Military science (General)|U1 - U900 Military science (General)|U400 - U714 Military education and training",124,
        "U - Military science (General)|U1 - U900 Military science (General)|U750 - U773 Military life, manners and customs, antiquities, etc.",29,
        "U - Military science (General)|U1 - U900 Military science (General)|U799 - U897 History of arms and armor",50,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation",1306,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA21 - UA885 By region or country",1123,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA910 - UA915 Mobilization",1,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA926 - UA929 Civil defense",22,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA940 - UA945 Military communication",12,
        "U - Military science (General)|UA10 - UA997 Armies: Organization, distribution, military situation|UA985 - UA997 Military geography",9,
        "U - Military science (General)|UB1 - UB900 Military administration",677,
        "U - Military science (General)|UB1 - UB900 Military administration|UB160 - UB165 Records, returns, muster rolls, etc.",8,
        "U - Military science (General)|UB1 - UB900 Military administration|UB180 - UB197 Civilian personnel departments",23,
        "U - Military science (General)|UB1 - UB900 Military administration|UB250 - UB271 Intelligence",83,
        "U - Military science (General)|UB1 - UB900 Military administration|UB275 - UB277 Psychological warfare. Propaganda",4,
        "U - Military science (General)|UB1 - UB900 Military administration|UB320 - UB338 Enlistment, recruiting, etc.",131,
        "U - Military science (General)|UB1 - UB900 Military administration|UB340 - UB345 Compulsory service. Conscription and exemption",12,
        "U - Military science (General)|UB1 - UB900 Military administration|UB356 - UB369.5 Provision for veterans",65,
        "U - Military science (General)|UB1 - UB900 Military administration|UB370 - UB375 Military pensions, etc.",12,
        "U - Military science (General)|UB1 - UB900 Military administration|UB407 - UB409 Warrant officers. Noncommissioned officers",1,
        "U - Military science (General)|UB1 - UB900 Military administration|UB410 - UB415 Officers",40,
        "U - Military science (General)|UB1 - UB900 Military administration|UB416 - UB419 Minorities, women, etc. in armed forces",83,
        "U - Military science (General)|UB1 - UB900 Military administration|UB440 - UB449.5 Retired military personnel",6,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation",199,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC20 - UC258 Organization of the service. By region or country",21,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC260 - UC267 Supplies and stores",104,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC270 - UC360 Transportation",31,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC400 - UC440 Barracks. Quarters. Camps",7,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC460 - UC535 Clothing and equipment",22,
        "U - Military science (General)|UC10 - UC780 Maintenance and transportation|UC700 - UC780 Subsistence",2,
        "U - Military science (General)|UD1 - UD495 Infantry",41,
        "U - Military science (General)|UD1 - UD495 Infantry|UD157 - UD302 Tactics. Maneuvers. Drill regulations",10,
        "U - Military science (General)|UD1 - UD495 Infantry|UD330 - UD335 Firing. Military sharpshooting",6,
        "U - Military science (General)|UD1 - UD495 Infantry|UD380 - UD425 Small arms. Swords, etc.",10,
        "U - Military science (General)|UD1 - UD495 Infantry|UD480 - UD485 Airborne troops. Parachute troops",6,
        "U - Military science (General)|UD1 - UD495 Infantry|UD490 - UD495 Airmobile operations",2,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry",11,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry|UE157 - UE302 Tactics. Maneuvers. Drill regulations",4,
        "U - Military science (General)|UE1 - UE500 Cavalry. Armor. Including horse cavalry, armored cavalry, mechanized cavalry|UE460 - UE475 Horses",2,
        "U - Military science (General)|UF1 - UF910 Artillery",113,
        "U - Military science (General)|UF1 - UF910 Artillery|UF157 - UF302 Tactics. Maneuvers. Drill regulations",1,
        "U - Military science (General)|UF1 - UF910 Artillery|UF400 - UF405 Field artillery",2,
        "U - Military science (General)|UF1 - UF910 Artillery|UF460 - UF465 Siege artillery",1,
        "U - Military science (General)|UF1 - UF910 Artillery|UF500 - UF515 Weapons systems",37,
        "U - Military science (General)|UF1 - UF910 Artillery|UF520 - UF537 Ordnance and small arms",13,
        "U - Military science (General)|UF1 - UF910 Artillery|UF540 - UF545 Arsenals, magazines, armories, etc.",4,
        "U - Military science (General)|UF1 - UF910 Artillery|UF560 - UF780 Ordnance material (Ordnance proper)",35,
        "U - Military science (General)|UF1 - UF910 Artillery|UF820 - UF830 Ballistics. Velocities and motions of projectiles",2,
        "U - Military science (General)|UF1 - UF910 Artillery|UF848 - UF856 Artillery instruments. Fire control, etc.",1,
        "U - Military science (General)|UG1 - UG620 Military engineering",178,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG360 - UG390 Field engineering",1,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG400 - UG442 Fortification",26,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG443 - UG449 Attack and defense. Siege warfare",62,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG470 - UG474 Military surveying, topography, and mapping",3,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG570 - UG582 Military signaling",1,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG590 - UG613.5 Military telegraphy and telephony",12,
        "U - Military science (General)|UG1 - UG620 Military engineering|UG615 - UG620 Military motor vehicles",14,
        "U - Military science (General)|UG1500 - UG1530 Military astronautics. Space warfare. Space surveillance",30,
        "U - Military science (General)|UG1500 - UG1530 Military astronautics. Space warfare. Space surveillance|UG1523 - UG1525 By region or country",15,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare",619,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG1100 - UG1435 Equipment and supplies",271,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG633 - UG635 By region or country",108,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG637 - UG639 Education and training",21,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG640 - UG645 Military aeronautical research",7,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG700 - UG705 Tactics",13,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG730 - UG735 Air defenses",7,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG760 - UG765 Aerial reconnaissance",3,
        "U - Military science (General)|UG622 - UG1435 Air forces. Air warfare|UG770 - UG1045 Organization. Personnel management",55,
        "U - Military science (General)|UH20 - UH910 Other services",146,
        "U - Military science (General)|UH20 - UH910 Other services|UH20 - UH25 Chaplains",4,
        "U - Military science (General)|UH20 - UH910 Other services|UH201 - UH515 Medical and sanitary services",69,
        "U - Military science (General)|UH20 - UH910 Other services|UH520 - UH551 Care of sick and wounded. Relief societies",4,
        "U - Military science (General)|UH20 - UH910 Other services|UH600 - UH629.5 Military hygiene and sanitation",29,
        "U - Military science (General)|UH20 - UH910 Other services|UH750 - UH769 Military social work. Social welfare services",6,
        "U - Military science (General)|UH20 - UH910 Other services|UH800 - UH910 Recreation and information services",1,
        "V - Naval science",669,
        "V - Naval science|V1 - V995 Naval science (General)",168,
        "V - Naval science|V1 - V995 Naval science (General)|V160 - V165 Strategy",6,
        "V - Naval science|V1 - V995 Naval science (General)|V167 - V178 Tactics",4,
        "V - Naval science|V1 - V995 Naval science (General)|V210 - V214.5 Submarine warfare",5,
        "V - Naval science|V1 - V995 Naval science (General)|V25 - V55 History and antiquities of naval science",19,
        "V - Naval science|V1 - V995 Naval science (General)|V390 - V395 Naval research",5,
        "V - Naval science|V1 - V995 Naval science (General)|V400 - V695 Naval education",9,
        "V - Naval science|V1 - V995 Naval science (General)|V66 - V69 Navy clubs",1,
        "V - Naval science|V1 - V995 Naval science (General)|V720 - V743 Naval life, manners and customs, antiquities, etc.",2,
        "V - Naval science|V1 - V995 Naval science (General)|V750 - V995 War vessels: Construction, armament, etc.",68,
        "V - Naval science|VA10 - VA750 Navies: Organization, distribution, naval situation",100,
        "V - Naval science|VA10 - VA750 Navies: Organization, distribution, naval situation|VA400 - VA750 Other regions or countries",52,
        "V - Naval science|VA10 - VA750 Navies: Organization, distribution, naval situation|VA49 - VA395 United States",42,
        "V - Naval science|VB15 - VB345 Naval administration",32,
        "V - Naval science|VB15 - VB345 Naval administration|VB170 - VB187 Civil department",2,
        "V - Naval science|VB15 - VB345 Naval administration|VB21 - VB124 By region or country",2,
        "V - Naval science|VB15 - VB345 Naval administration|VB260 - VB275 Enlisted personnel",1,
        "V - Naval science|VB15 - VB345 Naval administration|VB310 - VB315 Officers",4,
        "V - Naval science|VB15 - VB345 Naval administration|VB320 - VB325 Minorities, women, etc. in navies",5,
        "V - Naval science|VC10 - VC580 Naval maintenance",13,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC260 - VC268 Supplies and stores",11,
        "V - Naval science|VC10 - VC580 Naval maintenance|VC350 - VC410 Subsistence. Provisioning",1,
        "V - Naval science|VD7 - VD430 Naval seamen",1,
        "V - Naval science|VD7 - VD430 Naval seamen|VD21 - VD124 By region or country",1,
        "V - Naval science|VE7 - VE500 Marines",29,
        "V - Naval science|VE7 - VE500 Marines|VE23 - VE124 By region or country",23,
        "V - Naval science|VE7 - VE500 Marines|VE430 - VE435 Training camps",1,
        "V - Naval science|VF1 - VF580 Naval ordnance",6,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF21 - VF124 Naval ordnance",2,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF346 - VF348 Naval weapons systems",2,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF350 - VF375 Ordnance and arms (General)",1,
        "V - Naval science|VF1 - VF580 Naval ordnance|VF390 - VF510 Ordnance material (Ordnance proper)",1,
        "V - Naval science|VG20 - VG2029 Minor services of navies",23,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG50 - VG55 Coast guard and coast signal service",5,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG500 - VG505 Public relations. Press. War correspondents",1,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG70 - VG85 Naval communication by telegraphy, telephone, etc.",1,
        "V - Naval science|VG20 - VG2029 Minor services of navies|VG90 - VG95 Naval aviation",10,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine",116,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1000 - VK1249 Lighthouse service",19,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1250 - VK1299 Shipwrecks and fires",8,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1300 - VK1491 Saving of life and property",3,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK15 - VK124 History, conditions, etc.",22,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK1500 - VK1661 Pilots and pilotage",1,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK321 - VK369.8 Harbors. Ports",3,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK381 - VK397 Signaling",3,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK401 - VK529 Study and teaching",5,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK549 - VK572 Science of navigation",15,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK573 - VK587 Nautical instruments",1,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK588 - VK597 Marine hydrography. Hydrographic surveying",1,
        "V - Naval science|VK1 - VK1661 Navigation. Merchant marine|VK798 - VK997 Sailing directions. Pilot guides",3,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering",168,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM15 - VM124 History",25,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM298.5 - VM301 Shipbuilding industry. Shipyards",15,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM311 - VM466 Special types of vessels",36,
        "V - Naval science|VM1 - VM989 Naval architecture. Shipbuilding. Marine engineering|VM595 - VM989 Marine engineering",30,
        "W - Health Sciences",82,
        "W - Health Sciences|W1 - W925 Health Professions",10,
        "W - Health Sciences|W1 - W925 Health Professions|W1 - W28 Reference Works. General Works",1,
        "W - Health Sciences|W1 - W925 Health Professions|W32 - W64 Law. Ethics. Professional-Patient Relations",8,
        "W - Health Sciences|W1 - W925 Health Professions|W82 - W83.1 Biomedical Technology",1,
        "W - Health Sciences|WH1 - WH700 Hemic and Lymphatic Systems",1,
        "W - Health Sciences|WH1 - WH700 Hemic and Lymphatic Systems|WH120 - WH540 Hematologic Diseases. Immunologic Factors. Blood Banks",1,
        "W - Health Sciences|WK1 - WK920 Endocrine System",1,
        "W - Health Sciences|WK1 - WK920 Endocrine System|WK800 - WK885 Islets of Langerhans",1,
        "W - Health Sciences|WL1 - WL710 Nervous System",1,
        "W - Health Sciences|WL1 - WL710 Nervous System|WL1 - WL102.9 Reference Works. General Works",1,
        "W - Health Sciences|WO1 - WO950 Surgery",1,
        "W - Health Sciences|WO1 - WO950 Surgery|WO1 - WO102 Reference Works. General Works",1,
        "Z - Bibliography. Library Science. Information resources (general)",21707,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography",9380,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography",4328,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1003 - Z1003.5 Choice of books. Books and reading. Book reviews",560,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1011 - Z1017 General bibliographies",161,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1019 - Z1033 Special classes of books. Including prohibited books, rare books, paperbacks, reprints",505,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1035 - Z1035.9 Best books",600,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1037 - Z1039 Books for special classes of persons, institutions, etc.",1163,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1001 - Z1121 General bibliography|Z1041 - Z1121 Anonyms and pseudonyms",15,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography",2114,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America",805,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America|Z1215 - Z1363 United States",557,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America|Z1365 - Z1401 Canada. British North America",35,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z1201 - Z1946 America|Z1411 - Z1939 Latin America",126,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z2000 - Z2959 Europe",859,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z3001 - Z3496 Asia",364,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z3501 - Z3975 Africa",63,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z1201 - Z4980 National bibliography|Z4001 - Z4980 Australia. Oceania",21,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z5051 - Z7999 Subject bibliography. Subjects arranged in alphabetical sequence",2460,
        "Z - Bibliography. Library Science. Information resources (general)|Z1001 - Z8999 Bibliography|Z8001 - Z8999 Personal bibliography. Names of individuals arranged in alphabetical sequence",542,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade",4673,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing",2031,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z124 - Z228 History",537,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z231 - Z232 Printers and printing establishments",44,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z235 - Z236 Printer's marks, mottoes, etc.",8,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z240 - Z241.5 Incunabula. Block books. Including broadsides, playing cards",158,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z116 - Z265.5 Printing|Z242.9 - Z264.5 Practical printing. Including printing as a business, layout, paper and ink, machinery, type and type founding, electrotyping, desktop publishing",460,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z266 - Z276 Bookbinding. Book decoration",208,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z278 - Z549 Bookselling and publishing",2207,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z551 - Z656 Copyright",35,
        "Z - Bibliography. Library Science. Information resources (general)|Z116 - Z659 Book industries and trade|Z657 - Z659 Freedom of the press. Censorship",179,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography",990,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z105 - Z115.5 Manuscripts. Paleography",230,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z4 - Z8 History of books and bookmaking",333,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing",148,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z102.5 - Z104.5 Cryptography. Ciphers. Invisible writing",34,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z41 - Z42.5 Autographs. Signatures",11,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z43 - Z45 Calligraphy. Penmanship",41,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z49 - Z51 Typewriters. Typewriting. Keyboards. Keyboarding",10,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z52 - Z52.5 Word processing",7,
        "Z - Bibliography. Library Science. Information resources (general)|Z4 - Z115.5 Books (General). Writing. Paleography|Z40 - Z104.5 Writing|Z53 - Z102 Shorthand. Stenography. Phonography",7,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries",6257,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z662 - Z664 Collections",115,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science",3954,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z668 - Z669.7 Library education. Research",28,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z674.2 - Z674.5 Information services. Information centers",6,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z674.7 - Z674.83 Library information networks",39,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z678 - Z678.88 Library administration and organization. Constitution",50,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z679 - Z680 Library buildings. Library architecture. Including planning, space utilization, security, safety, lighting, etc.",49,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z680.3 - Z680.6 Library communication systems",5,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z681 - Z681.3 Reproduction of library materials. Storage media of library materials",4,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z681.5 - Z681.7 Trustees. Library boards, committees, etc.",2,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z682 - Z682.4 Personnel",41,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z683 - Z683.5 Finance. Insurance",30,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z684 - Z685 Supplies. Shelving. Bookstacks",1,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books",2659,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z689 - Z689.8 Acquisition (selection, purchase, gifts, duplicates)",150,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z691 - Z692 Special classes of materials. Including manuscripts, maps, microforms, serials",4,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z693 - Z695.83 Cataloging",247,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z695.9 - Z695.94 Indexing. Abstracting",39,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z696 - Z697 Classification and notation",592,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z699 - Z699.5 Machine methods of information and retrieval. Mechanized bibliographic control",111,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z700.9 - Z701.5 Preservation, conservation and restoration of books, etc.",310,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z703.5 - Z703.6 Moving. Disposition of books on shelves, etc. Including discarding, weeding",4,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z711 - Z711.92 Reference work. Library service to special groups",226,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z712 - Z714 Circulation. Loans. Charging systems",21,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z716 - Z716.1 Library extension. Library commissions. Traveling libraries",5,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z665 - Z718.8 Library science. Information science|Z687 - Z718.8 The collections. The books|Z716.2 - Z718.8 Libraries in relation to special topics. Including libraries and community, libraries and television, children's libraries, libraries and students",377,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z719 - Z725 Libraries (General)",159,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z729 - Z871 Library reports. History. Statistics",530,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z881 - Z980 Library catalogs and bulletins",444,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z987 - Z997 Private libraries. Book collecting. Including bibliophilism, bookplates",570,
        "Z - Bibliography. Library Science. Information resources (general)|Z662 - Z1000.5 Libraries|Z998 - Z1000.5 Booksellers' catalogs. Book prices",221,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)",345,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA3201 - ZA3250 Information superhighway",5,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media",201,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media|ZA4050 - ZA4460 Electronic information resources",188,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media|ZA4050 - ZA4460 Electronic information resources|ZA4150 - ZA4390 Computer network resources",90,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA4050 - ZA4750 Information in specific formats or media|ZA4050 - ZA4460 Electronic information resources|ZA4450 - ZA4460 Databases",2,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA5050 - ZA5185 Information from specific providers",4,
        "Z - Bibliography. Library Science. Information resources (general)|ZA3040 - ZA5185 Information resources (General)|ZA5050 - ZA5185 Information from specific providers|ZA5050 - ZA5185 Government information",4],
      "language_f":[
        "English",673057,
        "French",28345,
        "Latin",27900,
        "German",19575,
        "Spanish",9946,
        "Italian",9248,
        "Dutch",9153,
        "Russian",8566,
        "Portuguese",6717,
        "Chinese",4687,
        "Danish",3477],
      "publication_year_isort":[
        "2019",26181,
        "2020",25745,
        "2016",25588,
        "2018",25424,
        "2015",24994,
        "2017",24598,
        "2014",24566,
        "2021",24113,
        "2013",23987,
        "2012",22520,
        "2022",22443,
        "2023",20876,
        "2011",19880,
        "2010",17439,
        "2009",15871,
        "2008",14844,
        "2007",13730,
        "2006",13365,
        "2005",11868,
        "2004",8366,
        "2003",7799,
        "2000",7343,
        "2001",7299,
        "2002",7286,
        "1999",6764,
        "1998",6462,
        "1992",6209,
        "1996",6162,
        "1997",5893,
        "1995",5820,
        "1991",5702,
        "1994",5598,
        "1993",5552,
        "1988",5329,
        "1642",5200,
        "1987",5193,
        "2025",5193,
        "1989",5035,
        "1984",4999,
        "1990",4966,
        "1986",4824,
        "1985",4777,
        "1983",4515,
        "1982",4109,
        "1980",4066,
        "1981",3939,
        "1979",3660,
        "1978",3513,
        "1974",3455,
        "1976",3297,
        "1977",3291,
        "1975",3212,
        "1643",3115,
        "1660",3067,
        "1648",2995,
        "1973",2914,
        "1972",2739,
        "1968",2713,
        "1969",2676,
        "1970",2656,
        "1971",2591,
        "1641",2548,
        "1644",2533,
        "1700",2530,
        "1967",2497,
        "1647",2356,
        "1649",2354,
        "1689",2290,
        "1962",2281,
        "1680",2277,
        "1964",2273,
        "1659",2260,
        "1966",2241,
        "1963",2205,
        "1690",2188,
        "1965",2157,
        "1645",2140,
        "1685",2069,
        "1695",2049,
        "1681",2018,
        "1960",1996,
        "1949",1983,
        "1961",1983,
        "1646",1944,
        "1688",1921,
        "1650",1918,
        "1682",1882,
        "1679",1837,
        "1653",1830,
        "1699",1812,
        "1654",1766,
        "1683",1764,
        "1959",1762,
        "1696",1760,
        "1684",1759,
        "1661",1756,
        "1652",1730,
        "1691",1716,
        "1655",1665,
        "1697",1627],
      "author_facet_f":[
        "Anon",55113,
        "Geological Survey (U.S.)",5346,
        "André Savine Collection (University of North Carolina at Chapel Hill)",5301,
        "Rand Corporation",4003,
        "William S. Hein & Company",1654,
        "Duke University. Rare Book, Manuscript, and Special Collections Library",1638,
        "Church of England",1069,
        "Watts, Isaac, 1674-1748",796,
        "Anderson-Riggins Memorial Fund",755,
        "Shakespeare, William, 1564-1616",704,
        "United States. Air Force",695],
      "subject_genre_f":[
        "Nonfiction",578697,
        "Fiction",60329,
        "Biography",47219,
        "Congresses",31247,
        "Conference papers and proceedings",25241,
        "Reference",22551,
        "Congress",20533,
        "History",18111,
        "Early works to 1800",15196,
        "Poetry",15061,
        "Novels",13674],
      "subject_geographic_f":[
        "United States",70142,
        "Great Britain",18180,
        "North Carolina",9964,
        "England",9920,
        "China",7817,
        "India",7727,
        "France",7720,
        "Europe",7415,
        "Germany",6435,
        "New York (State)",5343,
        "Italy",4242],
      "subject_chronological_f":[
        "20th century",28581,
        "19th century",15923,
        "21st century",9724,
        "18th century",6235,
        "1900-1999",4214,
        "17th century",3248,
        "Civil War, 1861-1865",2530,
        "16th century",2387,
        "2000-2099",2312,
        "To 1500",1911,
        "1800-1899",1373]},
    "facet_ranges":{},
    "facet_intervals":{},
    "facet_heatmaps":{}},
  "stats":{
    "stats_fields":{
      "publication_year_isort":{
        "min":800.0,
        "max":2025.0,
        "count":945456,
        "missing":13197,
        "sum":1.808568832E9,
        "sumOfSquares":3.479987305262E12,
        "mean":1912.9063986055405,
        "stddev":146.7626447903047}}}}

    http_version:
  recorded_at: Tue, 20 Feb 2024 20:05:00 GMT
recorded_with: VCR 5.1.0
